{"version":3,"file":"NewProjectPage-DQF6B3dn.js","sources":["../../src/components/forms/CreateProjectForm.tsx","../../src/pages/projects/NewProjectPage.tsx"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { \n  Form, \n  FormControl, \n  FormDescription, \n  FormField, \n  FormItem, \n  FormLabel, \n  FormMessage \n} from '@/components/ui/form';\nimport { useNavigate } from 'react-router';\nimport { toast } from 'sonner';\nimport { CreateProjectPayload } from '@/types/organization';\nimport { useAuth } from '@/hooks/useAuth';\nimport { generateSlug } from '@/utils/supabaseHelpers';\nimport { supabase } from '@/integrations/supabase/client';\n\nexport function CreateProjectForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const { session } = useAuth();\n  \n  const form = useForm<CreateProjectPayload>({\n    defaultValues: {\n      name: '',\n      description: '',\n      status: 'Development',\n      tags: [],\n    },\n  });\n\n  // Load the selected organization from localStorage\n  useEffect(() => {\n    const savedOrgId = localStorage.getItem('selectedOrganizationId');\n    if (savedOrgId) {\n      form.setValue('organization_id', savedOrgId);\n    }\n  }, [form]);\n\n  const onSubmit = async (data: CreateProjectPayload) => {\n    if (!session.user) {\n      toast.error(\"You need to be logged in to create a project\");\n      return;\n    }\n    \n    // Get organization from localStorage\n    const organizationId = localStorage.getItem('selectedOrganizationId');\n    \n    if (!organizationId) {\n      toast.error(\"Please select an organization from the top navigation bar\");\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Generate slug from name\n      const slug = generateSlug(data.name);\n      \n      const { data: newProject, error } = await supabase\n        .from('projects')\n        .insert({\n          name: data.name,\n          slug: slug,\n          description: data.description,\n          status: data.status,\n          tags: data.tags,\n          user_id: session.user.id,\n          organization_id: organizationId,\n        })\n        .select()\n        .single();\n\n      if (error) throw error;\n      \n      toast.success('Project created successfully');\n      \n      // Navigate to the new project page with the slug if available\n      if (newProject) {\n        navigate(`/projects/${newProject.slug}`);\n      } else {\n        navigate('/projects');\n      }\n    } catch (error: any) {\n      console.error('Error creating project:', error);\n      toast.error('Failed to create project');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Project Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter project name\" {...field} />\n              </FormControl>\n              <FormDescription>\n                The name of your project.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea \n                  placeholder=\"Describe your project\" \n                  className=\"min-h-[120px]\" \n                  {...field} \n                />\n              </FormControl>\n              <FormDescription>\n                A brief description of what this project is about.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex justify-end space-x-4\">\n          <Button \n            type=\"button\" \n            variant=\"outline\" \n            onClick={() => navigate('/projects')}\n          >\n            Cancel\n          </Button>\n          <Button \n            type=\"submit\" \n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Creating...' : 'Create Project'}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n\nexport default CreateProjectForm;\n","\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft } from 'lucide-react';\nimport { Link } from 'react-router';\nimport CreateProjectForm from '@/components/forms/CreateProjectForm';\n\nexport default function NewProjectPage() {\n  return (\n    <div className=\"container py-6 space-y-6\">\n      <Button variant=\"ghost\" asChild>\n        <Link to=\"/projects\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Projects\n        </Link>\n      </Button>\n      \n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Create New Project</h1>\n        <p className=\"text-muted-foreground\">\n          Set up a new project workspace for your team\n        </p>\n      </div>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Project Details</CardTitle>\n          <CardDescription>\n            Fill in the details to create your new project\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <CreateProjectForm />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":["CreateProjectForm","isSubmitting","setIsSubmitting","useState","navigate","useNavigate","session","useAuth","form","useForm","useEffect","savedOrgId","onSubmit","data","toast","organizationId","slug","generateSlug","newProject","error","supabase","jsx","Form","jsxs","FormField","field","FormItem","FormLabel","FormControl","Input","FormDescription","FormMessage","Textarea","Button","NewProjectPage","Link","ArrowLeft","Card","CardHeader","CardTitle","CardDescription","CardContent"],"mappings":"o4BAsBO,SAASA,GAAoB,CAClC,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,EAAK,EAChDC,EAAWC,EAAY,EACvB,CAAE,QAAAC,CAAQ,EAAIC,EAAQ,EAEtBC,EAAOC,EAA8B,CACzC,cAAe,CACb,KAAM,GACN,YAAa,GACb,OAAQ,cACR,KAAM,CAAA,CAAC,CACT,CACD,EAGDC,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAa,aAAa,QAAQ,wBAAwB,EAC5DA,GACGH,EAAA,SAAS,kBAAmBG,CAAU,CAC7C,EACC,CAACH,CAAI,CAAC,EAEH,MAAAI,EAAW,MAAOC,GAA+B,CACjD,GAAA,CAACP,EAAQ,KAAM,CACjBQ,EAAM,MAAM,8CAA8C,EAC1D,MAAA,CAII,MAAAC,EAAiB,aAAa,QAAQ,wBAAwB,EAEpE,GAAI,CAACA,EAAgB,CACnBD,EAAM,MAAM,2DAA2D,EACvE,MAAA,CAGFZ,EAAgB,EAAI,EAEhB,GAAA,CAEI,MAAAc,EAAOC,EAAaJ,EAAK,IAAI,EAE7B,CAAE,KAAMK,EAAY,MAAAC,CAAM,EAAI,MAAMC,EACvC,KAAK,UAAU,EACf,OAAO,CACN,KAAMP,EAAK,KACX,KAAAG,EACA,YAAaH,EAAK,YAClB,OAAQA,EAAK,OACb,KAAMA,EAAK,KACX,QAASP,EAAQ,KAAK,GACtB,gBAAiBS,CAAA,CAClB,EACA,OAAO,EACP,OAAO,EAEV,GAAII,EAAa,MAAAA,EAEjBL,EAAM,QAAQ,8BAA8B,EAIjCV,EADPc,EACO,aAAaA,EAAW,IAAI,GAE5B,WAF8B,QAIlCC,EAAY,CACX,QAAA,MAAM,0BAA2BA,CAAK,EAC9CL,EAAM,MAAM,0BAA0B,CAAA,QACtC,CACAZ,EAAgB,EAAK,CAAA,CAEzB,EAEA,OACGmB,EAAAA,IAAAC,EAAA,CAAM,GAAGd,EACR,SAACe,EAAAA,KAAA,OAAA,CAAK,SAAUf,EAAK,aAAaI,CAAQ,EAAG,UAAU,YACrD,SAAA,CAAAS,EAAA,IAACG,EAAA,CACC,QAAShB,EAAK,QACd,KAAK,OACL,OAAQ,CAAC,CAAE,MAAAiB,CAAM,WACdC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAY,cAAA,CAAA,EACvBN,EAAAA,IAACO,GACC,SAACP,MAAAQ,EAAA,CAAM,YAAY,qBAAsB,GAAGJ,EAAO,CACrD,CAAA,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,2BAAA,CAAA,QACCC,EAAY,CAAA,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EAEAV,EAAA,IAACG,EAAA,CACC,QAAShB,EAAK,QACd,KAAK,cACL,OAAQ,CAAC,CAAE,MAAAiB,CAAM,WACdC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAW,aAAA,CAAA,QACrBC,EACC,CAAA,SAAAP,EAAA,IAACW,EAAA,CACC,YAAY,wBACZ,UAAU,gBACT,GAAGP,CAAA,CAAA,EAER,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,oDAAA,CAAA,QACCC,EAAY,CAAA,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EAEAR,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAF,EAAA,IAACY,EAAA,CACC,KAAK,SACL,QAAQ,UACR,QAAS,IAAM7B,EAAS,WAAW,EACpC,SAAA,QAAA,CAED,EACAiB,EAAA,IAACY,EAAA,CACC,KAAK,SACL,SAAUhC,EAET,WAAe,cAAgB,gBAAA,CAAA,CAClC,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CCpJA,SAAwBiC,GAAiB,CAErC,OAAAX,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACF,EAAAA,IAAAY,EAAA,CAAO,QAAQ,QAAQ,QAAO,GAC7B,SAACV,EAAA,KAAAY,EAAA,CAAK,GAAG,YACP,SAAA,CAACd,EAAAA,IAAAe,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,mBAAA,CAAA,CACxC,CACF,CAAA,SAEC,MACC,CAAA,SAAA,CAACf,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAkB,qBAAA,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,8CAAA,CAAA,CAAA,EACF,SAECgB,EACC,CAAA,SAAA,CAAAd,OAACe,EACC,CAAA,SAAA,CAAAjB,EAAAA,IAACkB,GAAU,SAAe,iBAAA,CAAA,EAC1BlB,EAAAA,IAACmB,GAAgB,SAEjB,gDAAA,CAAA,CAAA,EACF,EACCnB,EAAA,IAAAoB,EAAA,CACC,SAACpB,EAAAA,IAAArB,EAAA,CAAA,CAAkB,CACrB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ"}