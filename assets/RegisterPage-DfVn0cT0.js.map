{"version":3,"file":"RegisterPage-DfVn0cT0.js","sources":["../../node_modules/lucide-react/dist/esm/icons/key.js","../../src/pages/auth/RegisterPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Key = createLucideIcon(\"Key\", [\n  [\"path\", { d: \"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4\", key: \"g0fldk\" }],\n  [\"path\", { d: \"m21 2-9.6 9.6\", key: \"1j0ho8\" }],\n  [\"circle\", { cx: \"7.5\", cy: \"15.5\", r: \"5.5\", key: \"yqb3hr\" }]\n]);\n\nexport { Key as default };\n//# sourceMappingURL=key.js.map\n","\nimport { useState } from 'react';\nimport { useNavigate, Link } from 'react-router';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { useAuth } from '@/hooks/useAuth';\nimport { AlertCircle, ArrowLeft, ArrowRight, Key, User } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { z } from 'zod';\nimport PlanSelector from '@/components/PlanSelector';\nimport { Plan } from '@/types/plans';\nimport { usePlans } from '@/hooks/usePlans';\n\nconst userSchema = z.object({\n  fullName: z.string().min(2, 'Name must be at least 2 characters'),\n  email: z.string().email('Please enter a valid email'),\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nexport default function RegisterPage() {\n  const [step, setStep] = useState(1);\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [planId, setPlanId] = useState('free');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { signUp } = useAuth();\n  const { plans } = usePlans();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  const handleSignUp = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const validatedData = userSchema.parse({ fullName, email, password });\n      \n      const { error } = await signUp(\n        validatedData.email, \n        validatedData.password, \n        { full_name: validatedData.fullName, plan_id: planId }\n      );\n      \n      if (error) throw error;\n\n      toast({\n        title: \"Registration successful\",\n        description: \"Your account has been created and you are now logged in.\",\n      });\n      \n      navigate('/');\n    } catch (err: any) {\n      console.error('Registration error:', err);\n      \n      if (err instanceof z.ZodError) {\n        setError(err.errors[0].message);\n      } else {\n        setError(err.message || 'Failed to register');\n      }\n      \n      toast({\n        title: \"Registration failed\",\n        description: err.message || \"There was a problem creating your account.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const nextStep = () => {\n    try {\n      if (step === 1) {\n        userSchema.parse({ fullName, email, password });\n        setStep(2);\n      }\n    } catch (err: any) {\n      if (err instanceof z.ZodError) {\n        setError(err.errors[0].message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-muted/40 px-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl text-center\">Create an account</CardTitle>\n          <CardDescription className=\"text-center\">\n            {step === 1 ? 'Enter your details to create an account' : 'Choose your plan (all free during beta)'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <Alert variant=\"destructive\">\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>{error}</AlertDescription>\n            </Alert>\n          )}\n          \n          {step === 1 ? (\n            <form className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"fullName\">Full Name</Label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n                  <Input\n                    id=\"fullName\"\n                    placeholder=\"John Doe\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    className=\"pl-9\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"you@example.com\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">Password</Label>\n                <div className=\"relative\">\n                  <Key className=\"absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n                  <Input\n                    id=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    className=\"pl-9\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <Button type=\"button\" onClick={nextStep} className=\"w-full\">\n                Continue <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </form>\n          ) : (\n            <div className=\"space-y-6\">\n              <PlanSelector \n                plans={plans}\n                selectedPlan={planId}\n                onSelectPlan={setPlanId}\n              />\n              \n              <div className=\"flex space-x-4\">\n                <Button \n                  variant=\"outline\" \n                  type=\"button\" \n                  onClick={() => setStep(1)}\n                  className=\"flex-1\"\n                >\n                  <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back\n                </Button>\n                <Button \n                  type=\"button\" \n                  onClick={handleSignUp}\n                  className=\"flex-1\"\n                  disabled={isLoading}\n                >\n                  {isLoading ? 'Creating Account...' : 'Create Account'}\n                </Button>\n              </div>\n            </div>\n          )}\n          \n        </CardContent>\n        <CardFooter className=\"flex flex-col space-y-4\">\n          <div className=\"text-center text-sm text-muted-foreground\">\n            Already have an account?{' '}\n            <Link to=\"/login\" className=\"text-primary hover:underline\">\n              Sign in\n            </Link>\n          </div>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":["Key","createLucideIcon","userSchema","z","RegisterPage","step","setStep","useState","fullName","setFullName","email","setEmail","password","setPassword","planId","setPlanId","isLoading","setIsLoading","error","setError","signUp","useAuth","plans","usePlans","navigate","useNavigate","toast","useToast","handleSignUp","e","validatedData","err","nextStep","jsxs","Card","CardHeader","jsx","CardTitle","CardDescription","CardContent","Alert","AlertCircle","AlertDescription","Label","User","Input","Button","ArrowRight","PlanSelector","ArrowLeft","CardFooter","Link"],"mappings":"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","x_google_ignoreList":[0]}