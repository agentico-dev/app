{"version":3,"file":"NewApplicationPage-CaVTlaCz.js","sources":["../../src/types/organization.ts","../../src/components/forms/CreateApplicationForm.tsx","../../src/pages/applications/NewApplicationPage.tsx"],"sourcesContent":["\nexport interface Organization {\n  id: string;\n  name: string;\n  slug: string;\n  description?: string;\n  logo_url?: string | null;\n  created_at: string;\n  updated_at: string;\n  role?: string; // Adding the optional role property\n  is_global?: boolean; // Flag to identify the global organization\n}\n\nexport interface OrganizationMember {\n  id: string;\n  organization_id: string;\n  user_id: string;\n  role: 'owner' | 'admin' | 'member';\n  created_at: string;\n}\n\nexport interface OrganizationProject {\n  id: string;\n  name: string;\n  slug: string;\n  organization_id: string;\n  description: string | null;\n  status: 'active' | 'archived' | 'deleted';\n  created_at: string;\n  updated_at: string;\n}\n\n// Project creation type\nexport interface CreateProjectPayload {\n  name: string;\n  description?: string;\n  organization_id?: string;\n  tags?: string[];\n  status?: 'Active' | 'Development' | 'Maintenance' | 'Archived';\n}\n\n// Application creation type\nexport interface CreateApplicationPayload {\n  name: string;\n  description?: string;\n  organization_id?: string;\n  project_id?: string;\n  category?: string;\n  tags?: string[];\n  status?: string;\n}\n\n// Server creation type\nexport interface CreateServerPayload {\n  name: string;\n  description?: string;\n  organization_id?: string;\n  project_id?: string;\n  type?: string;\n  status?: string;\n}\n\n// AI Tool creation type\nexport interface CreateToolPayload {\n  name: string;\n  description?: string;\n  organization_id?: string;\n  server_id?: string;\n  category?: string;\n  tags?: string[];\n  status?: string;\n}\n\n// Organization selection dropdown\nexport interface OrganizationSelectorProps {\n  onOrganizationChange: (orgId: string) => void;\n  selectedOrgId?: string;\n  includeGlobal?: boolean;\n  className?: string;\n}\n\n// Utility function to generate a valid slug from a name\nexport function generateSlug(name: string): string {\n  // Convert to lowercase\n  let slug = name.toLowerCase();\n  \n  // Replace spaces with dashes\n  slug = slug.replace(/\\s+/g, '-');\n  \n  // Remove special characters and ensure it follows DNS label standard\n  slug = slug.replace(/[^a-z0-9-]/g, '');\n  \n  // Ensure it starts with an alphabetic character\n  if (!/^[a-z]/.test(slug)) {\n    slug = 'a-' + slug;\n  }\n  \n  // Ensure it ends with an alphanumeric character\n  if (!/[a-z0-9]$/.test(slug)) {\n    slug = slug + '0';\n  }\n  \n  // Limit to 63 characters\n  slug = slug.slice(0, 63);\n  \n  return slug;\n}\n","\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { \n  Form, \n  FormControl, \n  FormDescription, \n  FormField, \n  FormItem, \n  FormLabel, \n  FormMessage \n} from '@/components/ui/form';\nimport { useNavigate } from 'react-router';\nimport { toast } from 'sonner';\nimport { CreateApplicationPayload, generateSlug } from '@/types/organization';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/integrations/supabase/client';\n\nexport function CreateApplicationForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  const { session } = useAuth();\n  \n  const form = useForm<CreateApplicationPayload>({\n    defaultValues: {\n      name: '',\n      description: '',\n      category: 'Web',\n      status: 'Development',\n      tags: [],\n    },\n  });\n\n  const onSubmit = async (data: CreateApplicationPayload) => {\n    if (!session?.user) {\n      toast.error(\"You need to be logged in to create an application\");\n      return;\n    }\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Get organization from localStorage\n      const organizationId = localStorage.getItem('selectedOrganizationId');\n      \n      if (!organizationId) {\n        toast.error(\"Please select an organization from the top navigation bar\");\n        setIsSubmitting(false);\n        return;\n      }\n      \n      // Generate slug from name\n      const slug = generateSlug(data.name);\n      \n      // Important: We need to explicitly set user_id to match the current user's ID\n      // This is required by the RLS policy we just created\n      const { data: newApp, error } = await supabase\n        .from('applications')\n        .insert({\n          name: data.name,\n          slug: slug,\n          description: data.description,\n          category: data.category,\n          status: data.status,\n          tags: data.tags,\n          user_id: session.user.id, // This is crucial for RLS\n          organization_id: organizationId,\n        })\n        .select()\n        .single();\n\n      if (error) {\n        console.error('Error creating application:', error);\n        throw error;\n      }\n      \n      toast.success('Application created successfully');\n      \n      // Navigate to the new application using the slug-based URL\n      if (newApp) {\n        // Fetch the organization slug\n        const { data: org } = await supabase\n          .from('organizations')\n          .select('slug')\n          .eq('id', organizationId)\n          .single();\n          \n        if (org) {\n          navigate(`/apps/${org.slug}@${slug}`);\n        } else {\n          navigate(`/apps/${newApp.id}`);\n        }\n      } else {\n        navigate('/applications');\n      }\n    } catch (error: any) {\n      console.error('Error creating application:', error);\n      toast.error(`Failed to create application: ${error.message || 'Unknown error'}`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Application Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter application name\" {...field} />\n              </FormControl>\n              <FormDescription>\n                The name of your application.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea \n                  placeholder=\"Describe your application\" \n                  className=\"min-h-[120px]\" \n                  {...field} \n                />\n              </FormControl>\n              <FormDescription>\n                A brief description of what this application does.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"category\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Category</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g., Web, Mobile, Desktop\" {...field} />\n              </FormControl>\n              <FormDescription>\n                The category this application belongs to.\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <div className=\"flex justify-end space-x-4\">\n          <Button \n            type=\"button\" \n            variant=\"outline\" \n            onClick={() => navigate('/applications')}\n          >\n            Cancel\n          </Button>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? 'Creating...' : 'Create Application'}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n\nexport default CreateApplicationForm;\n","\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft } from 'lucide-react';\nimport { Link } from 'react-router';\nimport CreateApplicationForm from '@/components/forms/CreateApplicationForm';\n\nexport default function NewApplicationPage() {\n  return (\n    <div className=\"container py-6 space-y-6\">\n      <Button variant=\"ghost\" asChild>\n        <Link to=\"/applications\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Applications\n        </Link>\n      </Button>\n      \n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Create New Application</h1>\n        <p className=\"text-muted-foreground\">\n          Set up a new application in your AI ecosystem\n        </p>\n      </div>\n      \n      <Card>\n        <CardHeader>\n          <CardTitle>Application Details</CardTitle>\n          <CardDescription>\n            Fill in the details to create your new application\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <CreateApplicationForm />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":["generateSlug","name","slug","CreateApplicationForm","isSubmitting","setIsSubmitting","useState","navigate","useNavigate","session","useAuth","form","useForm","onSubmit","data","toast","organizationId","newApp","error","supabase","org","jsx","Form","jsxs","FormField","field","FormItem","FormLabel","FormControl","Input","FormDescription","FormMessage","Textarea","Button","NewApplicationPage","Link","ArrowLeft","Card","CardHeader","CardTitle","CardDescription","CardContent"],"mappings":"w3BAkFO,SAASA,EAAaC,EAAsB,CAE7C,IAAAC,EAAOD,EAAK,YAAY,EAGrB,OAAAC,EAAAA,EAAK,QAAQ,OAAQ,GAAG,EAGxBA,EAAAA,EAAK,QAAQ,cAAe,EAAE,EAGhC,SAAS,KAAKA,CAAI,IACrBA,EAAO,KAAOA,GAIX,YAAY,KAAKA,CAAI,IACxBA,EAAOA,EAAO,KAITA,EAAAA,EAAK,MAAM,EAAG,EAAE,EAEhBA,CACT,CCrFO,SAASC,GAAwB,CACtC,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,EAAK,EAChDC,EAAWC,EAAY,EACvB,CAAE,QAAAC,CAAQ,EAAIC,EAAQ,EAEtBC,EAAOC,EAAkC,CAC7C,cAAe,CACb,KAAM,GACN,YAAa,GACb,SAAU,MACV,OAAQ,cACR,KAAM,CAAA,CAAC,CACT,CACD,EAEKC,EAAW,MAAOC,GAAmC,CACrD,GAAA,EAACL,GAAA,MAAAA,EAAS,MAAM,CAClBM,EAAM,MAAM,mDAAmD,EAC/D,MAAA,CAGFV,EAAgB,EAAI,EAEhB,GAAA,CAEI,MAAAW,EAAiB,aAAa,QAAQ,wBAAwB,EAEpE,GAAI,CAACA,EAAgB,CACnBD,EAAM,MAAM,2DAA2D,EACvEV,EAAgB,EAAK,EACrB,MAAA,CAII,MAAAH,EAAOF,EAAac,EAAK,IAAI,EAI7B,CAAE,KAAMG,EAAQ,MAAAC,CAAM,EAAI,MAAMC,EACnC,KAAK,cAAc,EACnB,OAAO,CACN,KAAML,EAAK,KACX,KAAAZ,EACA,YAAaY,EAAK,YAClB,SAAUA,EAAK,SACf,OAAQA,EAAK,OACb,KAAMA,EAAK,KACX,QAASL,EAAQ,KAAK,GACtB,gBAAiBO,CAAA,CAClB,EACA,OAAO,EACP,OAAO,EAEV,GAAIE,EACM,cAAA,MAAM,8BAA+BA,CAAK,EAC5CA,EAMR,GAHAH,EAAM,QAAQ,kCAAkC,EAG5CE,EAAQ,CAEV,KAAM,CAAE,KAAMG,CAAA,EAAQ,MAAMD,EACzB,KAAK,eAAe,EACpB,OAAO,MAAM,EACb,GAAG,KAAMH,CAAc,EACvB,OAAO,EAGRT,EADEa,EACO,SAASA,EAAI,IAAI,IAAIlB,CAAI,GAEzB,SAASe,EAAO,EAAE,EAFS,CAGtC,MAEAV,EAAS,eAAe,QAEnBW,EAAY,CACX,QAAA,MAAM,8BAA+BA,CAAK,EAClDH,EAAM,MAAM,iCAAiCG,EAAM,SAAW,eAAe,EAAE,CAAA,QAC/E,CACAb,EAAgB,EAAK,CAAA,CAEzB,EAEA,OACGgB,EAAAA,IAAAC,EAAA,CAAM,GAAGX,EACR,SAACY,EAAAA,KAAA,OAAA,CAAK,SAAUZ,EAAK,aAAaE,CAAQ,EAAG,UAAU,YACrD,SAAA,CAAAQ,EAAA,IAACG,EAAA,CACC,QAASb,EAAK,QACd,KAAK,OACL,OAAQ,CAAC,CAAE,MAAAc,CAAM,WACdC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAgB,kBAAA,CAAA,EAC3BN,EAAAA,IAACO,GACC,SAACP,MAAAQ,EAAA,CAAM,YAAY,yBAA0B,GAAGJ,EAAO,CACzD,CAAA,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,+BAAA,CAAA,QACCC,EAAY,CAAA,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EAEAV,EAAA,IAACG,EAAA,CACC,QAASb,EAAK,QACd,KAAK,cACL,OAAQ,CAAC,CAAE,MAAAc,CAAM,WACdC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAW,aAAA,CAAA,QACrBC,EACC,CAAA,SAAAP,EAAA,IAACW,EAAA,CACC,YAAY,4BACZ,UAAU,gBACT,GAAGP,CAAA,CAAA,EAER,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,oDAAA,CAAA,QACCC,EAAY,CAAA,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EAEAV,EAAA,IAACG,EAAA,CACC,QAASb,EAAK,QACd,KAAK,WACL,OAAQ,CAAC,CAAE,MAAAc,CAAM,WACdC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAQ,UAAA,CAAA,EACnBN,EAAAA,IAACO,GACC,SAACP,MAAAQ,EAAA,CAAM,YAAY,6BAA8B,GAAGJ,EAAO,CAC7D,CAAA,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,2CAAA,CAAA,QACCC,EAAY,CAAA,CAAA,CAAA,CACf,CAAA,CAAA,CAEJ,EAEAR,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAF,EAAA,IAACY,EAAA,CACC,KAAK,SACL,QAAQ,UACR,QAAS,IAAM1B,EAAS,eAAe,EACxC,SAAA,QAAA,CAED,EACAc,EAAAA,IAACY,GAAO,KAAK,SAAS,SAAU7B,EAC7B,SAAAA,EAAe,cAAgB,oBAClC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,CC5KA,SAAwB8B,GAAqB,CAEzC,OAAAX,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACF,EAAAA,IAAAY,EAAA,CAAO,QAAQ,QAAQ,QAAO,GAC7B,SAACV,EAAA,KAAAY,EAAA,CAAK,GAAG,gBACP,SAAA,CAACd,EAAAA,IAAAe,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,uBAAA,CAAA,CACxC,CACF,CAAA,SAEC,MACC,CAAA,SAAA,CAACf,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAsB,yBAAA,EACvEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,+CAAA,CAAA,CAAA,EACF,SAECgB,EACC,CAAA,SAAA,CAAAd,OAACe,EACC,CAAA,SAAA,CAAAjB,EAAAA,IAACkB,GAAU,SAAmB,qBAAA,CAAA,EAC9BlB,EAAAA,IAACmB,GAAgB,SAEjB,oDAAA,CAAA,CAAA,EACF,EACCnB,EAAA,IAAAoB,EAAA,CACC,SAACpB,EAAAA,IAAAlB,EAAA,CAAA,CAAsB,CACzB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ"}