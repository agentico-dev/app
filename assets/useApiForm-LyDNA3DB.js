import{c as K,u as C,b as Q,s as A,d as f}from"./index-CcMg1OWm.js";import{u as R,p as L,q as S,t as x,r as v,x as V}from"./react-vendor-pyaEZ1K4.js";import{t as $,z as u}from"./form-components-imyStfQC.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const O=K("SquarePen",[["path",{d:"M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7",key:"1m0v6g"}],["path",{d:"M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z",key:"ohrbg2"}]]);function G(){const{session:o}=C(),{toast:r}=Q(),l=L(),m=!!o.user,{data:i,isLoading:d,error:y}=R({queryKey:["applications"],queryFn:async()=>{const t=A.from("applications").select("*").order("created_at",{ascending:!1}),{data:e,error:c}=await t;if(c)throw c;return e}}),q=S({mutationFn:async t=>{if(!o.user)throw new Error("Authentication required");const{data:e,error:c}=await A.from("applications").insert({name:t.name,description:t.description,category:t.category,status:t.status||"Development",organization_id:t.organization_id,user_id:o.user.id,tags:t.tags||[]}).select().single();if(c)throw c;return e},onSuccess:()=>{l.invalidateQueries({queryKey:["applications"]}),r({title:"Application created",description:"Your new application has been created successfully."})},onError:t=>{r({title:"Error creating application",description:t.message,variant:"destructive"})}}),b=S({mutationFn:async({id:t,...e})=>{if(!o.user)throw new Error("Authentication required");const{data:c,error:p}=await A.from("applications").update({name:e.name,description:e.description,category:e.category,status:e.status,tags:e.tags,updated_at:new Date().toISOString()}).eq("id",t).eq("user_id",o.user.id).select().single();if(p)throw p;return c},onSuccess:()=>{l.invalidateQueries({queryKey:["applications"]}),r({title:"Application updated",description:"The application has been updated successfully."})},onError:t=>{r({title:"Error updating application",description:t.message,variant:"destructive"})}}),F=S({mutationFn:async t=>{if(!o.user)throw new Error("Authentication required");const{error:e}=await A.from("applications").delete().eq("id",t).eq("user_id",o.user.id);if(e)throw e;return t},onSuccess:t=>{l.invalidateQueries({queryKey:["applications"]}),r({title:"Application deleted",description:"The application has been deleted successfully."})},onError:t=>{r({title:"Error deleting application",description:t.message,variant:"destructive"})}}),n=S({mutationFn:async({id:t,favorite:e})=>{if(!o.user)throw new Error("Authentication required");const{data:c,error:p}=await A.from("applications").update({favorite:e}).eq("id",t).eq("user_id",o.user.id).select().single();if(p)throw p;return c},onSuccess:()=>{l.invalidateQueries({queryKey:["applications"]})},onError:t=>{r({title:"Error updating favorite status",description:t.message,variant:"destructive"})}});return{applications:i,isLoading:d,error:y,isAuthenticated:m,createApplication:q,updateApplication:b,deleteApplication:F,toggleFavorite:n}}function H(o){const{session:r}=C();return R({queryKey:["application",o],queryFn:async()=>{if(!o)return null;const{data:l,error:m}=await A.from("applications").select("*").eq("id",o).single();if(m)throw m;return l},enabled:!!o})}async function I(o){console.log("Fetching content from URI:",o);try{let r;const l={Accept:"application/json, application/yaml, text/yaml, text/plain","User-Agent":"Agentico/0.1.0"};if(o.startsWith(window.location.origin)||o.startsWith("data:"))r=await fetch(o,{headers:l});else{const q=`https://corsproxy.io/?${encodeURIComponent(o)}`;r=await fetch(q,{headers:l})}if(!r.ok)throw new Error(`Failed to fetch content: ${r.status} ${r.statusText}`);const i=r.headers.get("content-type")||"",d=await r.text();console.log("Response content type:",i),console.log("Response content length:",d.length);let y="json";return i.includes("yaml")||i.includes("yml")?y="yaml":i.includes("json")||(d.trim().startsWith("{")||d.trim().startsWith("[")?y="json":d.includes(":")&&(d.includes("- ")||/^\s*\w+:\s*\w+/m.test(d))&&(y="yaml")),console.log("Detected format:",y),{content:d,format:y}}catch(r){throw console.error("Error fetching content from URI:",r),r}}function k(o){const{session:r}=C(),l=L(),m=!!(r!=null&&r.user),{data:i,isLoading:d,error:y}=R({queryKey:["application-apis",o],queryFn:async()=>{if(!o)return[];const{data:n,error:t}=await A.from("application_apis").select("*").eq("application_id",o).order("created_at",{ascending:!1});if(t)throw t;return n},enabled:!!o}),q=S({mutationFn:async n=>{if(!(r!=null&&r.user))throw new Error("Authentication required");const{fetchContent:t,...e}=n;let c=e.source_content||"",p=e.content_format||"json";if(t&&e.source_uri)try{const{content:w,format:P}=await I(e.source_uri);c=w,p=P}catch(w){console.error("Failed to fetch content from URI:",w),f.error(`Failed to fetch content from URI: ${w.message}`)}const{data:s,error:g}=await A.from("application_apis").insert({name:e.name,description:e.description,application_id:e.application_id,status:e.status||"active",version:e.version,source_uri:e.source_uri,source_content:c,content_format:p,tags:e.tags||[]}).select();if(g)throw console.error("Error creating API:",g),g;const _=Array.isArray(s)?s[0]:s;if(_.source_content)try{_.source_content=c}catch(w){console.error("Error with returned source_content:",w),_.source_content=""}return _},onSuccess:()=>{l.invalidateQueries({queryKey:["application-apis",o]}),f.success("API created successfully")},onError:n=>{f.error("Error creating API: "+n.message)}}),b=S({mutationFn:async({id:n,fetchContent:t=!1,...e})=>{if(!(r!=null&&r.user))throw new Error("Authentication required");console.log("Updating API with data:",{id:n,fetchContent:t,...e});let c=e.source_content,p=e.content_format||"json";if(t&&e.source_uri)try{const{content:_,format:w}=await I(e.source_uri);c=_,p=w}catch(_){console.error("Failed to fetch content from URI:",_),f.error(`Failed to fetch content from URI: ${_.message}`)}const s={};e.name!==void 0&&(s.name=e.name),e.description!==void 0&&(s.description=e.description),e.status!==void 0&&(s.status=e.status),e.version!==void 0&&(s.version=e.version),e.source_uri!==void 0&&(s.source_uri=e.source_uri),e.tags!==void 0&&(s.tags=e.tags),e.endpoint_url!==void 0&&(s.endpoint_url=e.endpoint_url),e.documentation_url!==void 0&&(s.documentation_url=e.documentation_url),e.protocol!==void 0&&(s.protocol=e.protocol),e.is_public!==void 0&&(s.is_public=e.is_public),c?(s.source_content=c,s.content_format=p):s.source_content=null,s.updated_at=new Date().toISOString(),console.log("Final update data to be sent to Supabase:",s);const{error:g}=await A.from("application_apis").update(s).eq("id",n);if(g)throw console.error("Error updating API:",g),g;return console.log("API updated successfully in Supabase"),{id:n,...e,...s}},onSuccess:n=>{console.log("Update successful, invalidating queries",n),l.invalidateQueries({queryKey:["application-apis",o]}),l.invalidateQueries({queryKey:["application-api",n.id]}),f.success("API updated successfully")},onError:n=>{console.error("Update API error:",n),f.error("Error updating API: "+n.message)}}),F=S({mutationFn:async n=>{if(!(r!=null&&r.user))throw new Error("Authentication required");const{error:t}=await A.from("application_apis").delete().eq("id",n);if(t)throw t;return n},onSuccess:n=>{l.invalidateQueries({queryKey:["application-apis",o]}),f.success("API deleted successfully")},onError:n=>{f.error("Error deleting API: "+n.message)}});return{apis:i,isLoading:d,error:y,isAuthenticated:m,createApi:q,updateApi:b,deleteApi:F}}const D=u.object({name:u.string().min(2,{message:"API Name must be at least 2 characters."}),description:u.string().optional(),version:u.string().optional(),status:u.enum(["active","inactive","deprecated","archived"]).default("active"),tags:u.array(u.string()).optional(),source_uri:u.string().url({message:"Please enter a valid URL."}).optional().or(u.string().length(0)),source_content:u.string().optional(),content_format:u.enum(["json","yaml"]).optional(),protocol:u.enum(["REST","gRPC","WebSockets","GraphQL"]).optional(),endpoint_url:u.string().url({message:"Please enter a valid URL."}).optional().or(u.string().length(0)),documentation_url:u.string().url({message:"Please enter a valid URL."}).optional().or(u.string().length(0)),fetchContent:u.boolean().optional()});function Y({applicationId:o,apiId:r}){const l=x(),m=!!r,[i,d]=v.useState(null),[y,q]=v.useState(!1),[b,F]=v.useState(!1),[n,t]=v.useState(),[e,c]=v.useState("json"),[p,s]=v.useState(!1),{apis:g,isLoading:_,error:w,createApi:P,updateApi:T}=k(o||""),E=V({resolver:$(D),defaultValues:{name:"",description:"",version:"",status:"active",tags:[],source_uri:"",source_content:"",content_format:"json",protocol:"REST",endpoint_url:"",documentation_url:""},mode:"onChange"});v.useEffect(()=>{if(console.log("APIs:",g),g&&m){const a=g.find(h=>h.id===r);a&&(d(a),a.source_content?t("content"):a.source_uri&&t("uri"),a.content_format&&c(a.content_format))}else d(null),t(void 0)},[g,m,r]),v.useEffect(()=>{i&&E.reset({name:i.name||"",description:i.description||"",version:i.version||"",status:i.status||"active",tags:i.tags||[],source_uri:i.source_uri||"",source_content:i.source_content||"",content_format:i.content_format||"json",protocol:i.protocol||"REST"})},[i,E]);const j=v.useCallback(async()=>{const a=E.getValues("source_uri");if(a){F(!0);try{const{content:h,format:U}=await I(a);E.setValue("source_content",h),E.setValue("content_format",U),c(U),f.success("Content fetched successfully")}catch(h){f.error("Error fetching content: "+h.message)}finally{F(!1)}}},[E]);return{form:E,isEditMode:m,isSubmitting:y,isApiLoading:_,apiError:w,sourceType:n,setSourceType:t,codeLanguage:e,setCodeLanguage:c,handleFetchContent:j,shouldFetchContent:p,setShouldFetchContent:s,initialValues:i,onSubmit:async a=>{try{q(!0);const h={name:a.name,description:a.description,version:a.version,status:a.status,tags:a.tags,source_uri:a.source_uri,content_format:a.content_format,protocol:a.protocol};if(a.source_content&&(h.source_content=a.source_content),m)await T.mutateAsync({id:r,...h,fetchContent:p}),f.success("API updated successfully");else{if(!o)throw new Error("Application ID is missing for create operation.");await P.mutateAsync({application_id:o,...h,fetchContent:p}),f.success("API created successfully")}l(`/applications/${o}`)}catch(h){console.error("Error saving API:",h),f.error("Error saving API: "+h.message)}finally{q(!1)}},isContentLoading:b}}export{O as S,G as a,Y as b,I as f,H as u};
