{"version":3,"file":"ApiFormPage-D1d26-4K.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check-big.js","../../node_modules/lucide-react/dist/esm/icons/file-json.js","../../node_modules/lucide-react/dist/esm/icons/message-square.js","../../src/components/ErrorBoundary.tsx","../../src/components/applications/TagSelector.tsx","../../src/components/editor/CodeEditor.tsx","../../src/pages/applications/api/components/api-source/UriSourceSection.tsx","../../src/pages/applications/api/components/api-source/utils.ts","../../src/pages/applications/api/components/api-source/ApiSourceSection.tsx","../../src/pages/applications/api/components/form-details/ApiFormDetails.tsx","../../src/pages/applications/api/components/ApiServicesList.tsx","../../src/pages/applications/api/components/ApiMessagesList.tsx","../../src/pages/applications/api/components/ApiForm.tsx","../../src/pages/applications/api/components/ApiFormStatus.tsx","../../src/pages/applications/api/ApiFormController.tsx","../../src/pages/applications/api/ApiFormPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleCheckBig = createLucideIcon(\"CircleCheckBig\", [\n  [\"path\", { d: \"M21.801 10A10 10 0 1 1 17 3.335\", key: \"yps3ct\" }],\n  [\"path\", { d: \"m9 11 3 3L22 4\", key: \"1pflzl\" }]\n]);\n\nexport { CircleCheckBig as default };\n//# sourceMappingURL=circle-check-big.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst FileJson = createLucideIcon(\"FileJson\", [\n  [\"path\", { d: \"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\", key: \"1rqfz7\" }],\n  [\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\", key: \"tnqrlb\" }],\n  [\n    \"path\",\n    { d: \"M10 12a1 1 0 0 0-1 1v1a1 1 0 0 1-1 1 1 1 0 0 1 1 1v1a1 1 0 0 0 1 1\", key: \"1oajmo\" }\n  ],\n  [\n    \"path\",\n    { d: \"M14 18a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1 1 1 0 0 1-1-1v-1a1 1 0 0 0-1-1\", key: \"mpwhp6\" }\n  ]\n]);\n\nexport { FileJson as default };\n//# sourceMappingURL=file-json.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst MessageSquare = createLucideIcon(\"MessageSquare\", [\n  [\"path\", { d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\", key: \"1lielz\" }]\n]);\n\nexport { MessageSquare as default };\n//# sourceMappingURL=message-square.js.map\n","import React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype State = {\n  hasError: boolean;\n};\n\nexport default class ErrorBoundary extends React.Component<Props, State> {\n  state: State = { hasError: false };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error) {\n    console.error('ErrorBoundary caught an error:', error);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <div>Something went wrong. Please try again later.</div>;\n    }\n    return this.props.children;\n  }\n}\n","\nimport React, { useState } from 'react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { PlusCircle } from 'lucide-react';\nimport { TagBadge } from './TagBadge';\n\ninterface TagsSelectorProps {\n  selectedTags: string[];\n  onChange: (tags: string[]) => void;\n}\n\nfunction TagsSelector({ selectedTags = [], onChange }: TagsSelectorProps) {\n  const [newTag, setNewTag] = useState('');\n\n  const handleAddTag = () => {\n    if (newTag.trim() && !selectedTags.includes(newTag.trim())) {\n      const updatedTags = [...selectedTags, newTag.trim()];\n      onChange(updatedTags);\n      setNewTag('');\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleAddTag();\n    }\n  };\n\n  const handleRemoveTag = (tag: string) => {\n    onChange(selectedTags.filter(t => t !== tag));\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex gap-2\">\n        <Input\n          value={newTag}\n          onChange={(e) => setNewTag(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Add a tag\"\n          className=\"flex-1\"\n        />\n        <Button \n          type=\"button\" \n          variant=\"outline\" \n          size=\"icon\"\n          onClick={handleAddTag}\n          disabled={!newTag.trim()}\n        >\n          <PlusCircle className=\"h-4 w-4\" />\n        </Button>\n      </div>\n      \n      {selectedTags.length > 0 && (\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          {selectedTags.map((tag, index) => (\n            <TagBadge\n              key={index}\n              name={tag}\n              onRemove={() => handleRemoveTag(tag)}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TagsSelector;\n","\nimport { ChangeEvent, useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { Check, Copy, FileJson, FileText } from 'lucide-react';\n\ninterface CodeEditorProps {\n  value: string;\n  onChange: (value: string) => void;\n  language?: 'json' | 'yaml';\n  className?: string;\n  readOnly?: boolean;\n}\n\nexport function CodeEditor({ value, onChange, language = 'json', className, readOnly = false }: CodeEditorProps) {\n  const [copied, setCopied] = useState(false);\n  const [localValue, setLocalValue] = useState(value || '');\n\n  // Update local state when the parent value changes\n  useEffect(() => {\n    if (value !== undefined && value !== localValue) {\n      setLocalValue(value);\n    }\n  }, [value]);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(localValue);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const newValue = e.target.value;\n    setLocalValue(newValue);\n    onChange(newValue);\n  };\n\n  const formatCode = () => {\n    if (readOnly) return;\n    \n    try {\n      if (language === 'json') {\n        const formatted = JSON.stringify(JSON.parse(localValue || '{}'), null, 2);\n        setLocalValue(formatted);\n        onChange(formatted);\n      }\n      // For YAML we would need to use a library like js-yaml which requires installation\n    } catch (error) {\n      console.error(\"Failed to format code:\", error);\n    }\n  };\n\n  return (\n    <div className={cn(\"relative border rounded-md\", className, readOnly ? \"opacity-75\" : \"\")}>\n      <div className=\"flex items-center justify-between p-2 bg-muted border-b\">\n        <div className=\"flex items-center space-x-2\">\n          {language === 'json' ? (\n            <FileJson className=\"h-4 w-4 text-muted-foreground\" />\n          ) : (\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          )}\n          <span className=\"text-xs font-medium\">{language.toUpperCase()}</span>\n          {readOnly && <span className=\"text-xs text-muted-foreground ml-2\">(Read Only)</span>}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {!readOnly && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"h-7 px-2\"\n              onClick={formatCode}\n              title=\"Format code\"\n              type=\"button\" // Important to avoid submitting the form\n              disabled={readOnly}\n            >\n              Format\n            </Button>\n          )}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-7 px-2\"\n            onClick={handleCopy}\n            title={copied ? \"Copied!\" : \"Copy to clipboard\"}\n            type=\"button\" // Important to avoid submitting the form\n          >\n            {copied ? (\n              <Check className=\"h-3 w-3\" />\n            ) : (\n              <Copy className=\"h-3 w-3\" />\n            )}\n          </Button>\n        </div>\n      </div>\n      <textarea\n        value={localValue}\n        onChange={handleChange}\n        className={cn(\n          \"font-mono text-sm p-3 w-full min-h-[200px] outline-none focus:ring-0 resize-y\",\n          readOnly && \"bg-muted cursor-not-allowed\"\n        )}\n        spellCheck=\"false\"\n        data-gramm=\"false\"\n        readOnly={readOnly}\n      />\n    </div>\n  );\n}\n\nexport default CodeEditor;\n","\nimport * as React from 'react';\nimport { FormField, FormItem, FormLabel, FormControl, FormDescription, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { CodeEditor } from '@/components/editor/CodeEditor';\nimport { UseFormReturn } from 'react-hook-form';\nimport { ApplicationAPI } from '@/types/application';\nimport { Button } from '@/components/ui/button';\nimport { AlertCircle, Download } from 'lucide-react';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\n\ninterface UriSourceSectionProps {\n  form: UseFormReturn<Partial<ApplicationAPI> & { fetchContent?: boolean }>;\n  isUriValid: boolean;\n  onFetchContent?: () => void;\n  shouldFetchContent?: boolean;\n  setShouldFetchContent?: (value: boolean) => void;\n  isContentMode: boolean;\n  codeLanguage: 'json' | 'yaml';\n  sourceUri?: string;\n}\n\nexport const UriSourceSection: React.FC<UriSourceSectionProps> = ({\n  form,\n  isUriValid,\n  onFetchContent,\n  shouldFetchContent,\n  setShouldFetchContent,\n  isContentMode,\n  codeLanguage,\n  sourceUri\n}) => {\n  const [isGeneratedURI, setIsGeneratedURI] = React.useState(false);\n\n  // Validate URI when it changes\n  React.useEffect(() => {\n    sourceUri?.length > 0 && sourceUri?.startsWith('urn:') ? setIsGeneratedURI(true) : setIsGeneratedURI(false);\n  }, [form.watch('source_uri')]);\n\n  React.useEffect(() => {\n    // if content is cleared, set the source_uri to empty\n    if (sourceUri?.startsWith('urn:') && !isContentMode) {\n      form.setValue('source_uri', '');\n    }\n  }, [isContentMode]);\n\n  return (\n    <div className=\"space-y-4\">\n      <FormField\n        control={form.control}\n        name=\"source_uri\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Source URI</FormLabel>\n            <div className=\"flex space-x-2\">\n              <TooltipProvider>\n                <Tooltip open={!isUriValid}>\n                  <TooltipTrigger asChild>\n                    <FormControl>\n                      <Input\n                        placeholder=\"https://example.com/api-spec.json\"\n                        {...field}\n                        readOnly={isContentMode}\n                        // If the URI is generated, make it read-only - red border if invalid\n                        className={`w-full ${isGeneratedURI ? 'bg-muted' : ''} ${!isUriValid ? 'border-red-500 focus-visible:ring-red-500' : ''}`}\n                      // className={!isUriValid ? \"border-red-500 focus-visible:ring-red-500\" : isGeneratedURI ? 'bg-muted' : ''}\n                      />\n                    </FormControl>\n                  </TooltipTrigger>\n                  <TooltipContent className=\"bg-red-500 text-white\">\n                    <p>Please enter a valid URL (https://example.com/spec.json, urn:agentico:apis:[ORG]:[APP]:[SLUG]:[VERSION])</p>\n                  </TooltipContent>\n                </Tooltip>\n              </TooltipProvider>\n              {onFetchContent && (\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={onFetchContent}\n                  title=\"Fetch and load content from URI\"\n                  disabled={isContentMode || !isUriValid}\n                >\n                  <Download className=\"h-4 w-4 mr-2\" /> Fetch\n                </Button>\n              )}\n            </div>\n            <FormDescription>\n              Link to the API specification file (OpenAPI, Swagger, etc.)\n            </FormDescription>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      {setShouldFetchContent && (\n        <div className=\"flex items-center space-x-2 mt-2\">\n          <Checkbox\n            id=\"fetch-on-save\"\n            checked={shouldFetchContent}\n            onCheckedChange={(checked) => setShouldFetchContent(checked as boolean)}\n            disabled={isContentMode || !isUriValid}\n          />\n          <label\n            htmlFor=\"fetch-on-save\"\n            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer\"\n          >\n            Fetch content from URI when saving\n          </label>\n        </div>\n      )}\n\n      <FormField\n        control={form.control}\n        name=\"source_content\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Source Content</FormLabel>\n            {!field.value && !isContentMode && isUriValid && (\n              <Alert className=\"mb-3 bg-yellow-50 border-yellow-200\">\n                <AlertCircle className=\"h-4 w-4 text-yellow-600\" />\n                <AlertDescription className=\"text-yellow-700\">\n                  The content is empty. Click the \"Fetch\" button above to load content from the URI, or check \"Fetch content from URI when saving\".\n                </AlertDescription>\n              </Alert>\n            )}\n            <FormControl>\n              <CodeEditor\n                value={field.value || ''}\n                onChange={field.onChange}\n                language={codeLanguage}\n                className=\"min-h-[300px]\"\n                readOnly={!isContentMode && (sourceUri?.length > 0) && !isGeneratedURI}\n              />\n            </FormControl>\n            <FormDescription>\n              {/* If content is empty, no URI or URN */}\n              {isContentMode || (!(sourceUri?.length > 0) || sourceUri?.startsWith('urn:')) ? 'Paste or write your API specification (OpenAPI, Swagger, gRPC, etc.)' : 'Fetched API specification (read-only)'}\n            </FormDescription>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n    </div>\n  );\n};\n","\nimport { UseFormReturn } from 'react-hook-form';\nimport { ApplicationAPI } from '@/types/application';\n\n/**\n * Generates a standardized URN for API content\n */\nexport function generateURN(\n  form: UseFormReturn<Partial<ApplicationAPI> & { fetchContent?: boolean; }>, \n  apiSlug: string, \n  organizationSlug: string, \n  applicationSlug: string, \n  apiVersion: string\n) {\n  const name = form.getValues('name') || '';\n  // Use apiSlug if provided, otherwise generate from name\n  const slug = apiSlug || name.toLowerCase().replace(/[^a-z0-9]/g, '-');\n  // Generate the URN\n  const urn = `urn:agentico:apis:${organizationSlug}:${applicationSlug || 'app'}:${slug}:${apiVersion}`;\n  console.log('Generated URN:', urn);\n  // Set the URN as source_uri\n  form.setValue('source_uri', urn);\n}\n","import * as React from 'react';\nimport { UseFormReturn } from 'react-hook-form';\nimport { ApplicationAPI } from '@/types/application';\nimport { UriSourceSection } from './UriSourceSection';\nimport { generateURN } from './utils';\n\ninterface ApiSourceSectionProps {\n  form: UseFormReturn<Partial<ApplicationAPI> & { fetchContent?: boolean }>;\n  sourceType: 'uri' | 'content' | undefined;\n  setSourceType: (type: 'uri' | 'content') => void;\n  codeLanguage: 'json' | 'yaml';\n  setCodeLanguage: (language: 'json' | 'yaml') => void;\n  onFetchContent?: () => void;\n  shouldFetchContent?: boolean;\n  setShouldFetchContent?: (value: boolean) => void;\n  applicationSlug?: string;\n  organizationSlug?: string;\n  apiVersion?: string;\n  apiSlug?: string;\n}\n\nexport const ApiSourceSection: React.FC<ApiSourceSectionProps> = ({\n  form,\n  sourceType,\n  setSourceType,\n  codeLanguage,\n  setCodeLanguage,\n  onFetchContent,\n  shouldFetchContent,\n  setShouldFetchContent,\n  applicationSlug,\n  organizationSlug = 'global',\n  apiVersion = '1.0.0',\n  apiSlug\n}) => {\n  const [isUriValid, setIsUriValid] = React.useState(true);\n  const [isContentMode, setIsContentMode] = React.useState(false);\n\n  // Function to validate URI\n  function isValidUri(uri: string): boolean {\n    try {\n      new URL(uri);\n      return true;\n    } catch (e) {\n      // Allow URNs (they're valid internally) - but urn must follow the accepted format\n      // NOT empty parts (RFC 1035): urn:agentico:apis:[ORG]:[APP]:[SLUG]:[VERSION]\n      const urnRegex = /^urn:agentico:apis:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]+$/;\n      // Check if the URI is a valid URN\n      return urnRegex.test(uri);// || uri.startsWith('urn:');\n    }\n  }\n\n  // Watch form values\n  const sourceUri = form.watch('source_uri');\n  const sourceContent = form.watch('source_content');\n  const apiName = form.watch('name');\n  const apiVersionFromForm = form.watch('version');\n\n  // Check URI and source modes when values change\n  React.useEffect(() => {\n    // Check URI validity\n    setIsUriValid(isValidUri(sourceUri));\n\n    // Check if we're in content mode\n    const newIsContentMode = sourceContent?.length > 0 ? true : false;\n    setIsContentMode(newIsContentMode);\n  }, [sourceUri, sourceContent]);\n\n  React.useEffect(() => {\n    console.log('Updated Source mode:', {\n      isContentMode,\n      sourceUri,\n      sourceContent,\n      sourceType\n    });\n  }, [isContentMode, sourceUri, sourceContent, sourceType]);\n\n  // Generate URN when in content mode and content exists\n  React.useEffect(() => {\n    // Only generate URN when in content mode, content exists, and either no URI exists or it's not already a URN\n    if (isContentMode &&\n      sourceContent.length > 0 &&\n      (!sourceUri || !sourceUri.startsWith('urn:'))) {\n\n      // Get the current version from form or use default\n      const currentVersion = apiVersionFromForm || apiVersion;\n\n      // Generate the URN\n      generateURN(form, apiSlug, organizationSlug, applicationSlug, currentVersion);\n\n      console.log('Generated URN based on content change');\n    }\n  }, [\n    sourceType,\n    sourceContent,\n    apiName, // Also regenerate if name changes (since it impacts the URN)\n    apiVersionFromForm, // Also regenerate if version changes\n    sourceUri,\n    apiSlug,\n    organizationSlug,\n    applicationSlug,\n    apiVersion,\n    form // Include form in dependencies for consistency\n  ]);\n\n  return (\n    <div className=\"space-y-4 border p-4 rounded-md\">\n      <h3 className=\"text-lg font-medium\">API Source</h3>\n      <UriSourceSection\n        form={form}\n        isUriValid={isUriValid}\n        onFetchContent={onFetchContent}\n        shouldFetchContent={shouldFetchContent}\n        setShouldFetchContent={setShouldFetchContent}\n        isContentMode={isContentMode}\n        codeLanguage={codeLanguage}\n        sourceUri={sourceUri}\n      />\n    </div>\n  );\n};\n","\nimport React from 'react';\nimport { UseFormReturn } from 'react-hook-form';\nimport { FormField, FormItem, FormLabel, FormControl, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport TagsSelector from '@/components/applications/TagSelector';\nimport { Save, ArrowLeft } from 'lucide-react';\nimport { ApiSourceSection } from '../api-source';\nimport { ApiFormValues } from '@/hooks/application-apis/useApiForm';\n\ninterface ApiFormDetailsProps {\n  form: UseFormReturn<ApiFormValues>;\n  isSubmitting: boolean;\n  isNew: boolean;\n  sourceType: 'uri' | 'content' | undefined;\n  setSourceType: (type: 'uri' | 'content') => void;\n  codeLanguage: 'json' | 'yaml';\n  setCodeLanguage: (lang: 'json' | 'yaml') => void;\n  onFetchContent?: () => void;\n  shouldFetchContent?: boolean;\n  setShouldFetchContent?: (value: boolean) => void;\n  applicationSlug?: string;\n  organizationSlug?: string;\n  apiVersion?: string;\n  apiSlug?: string;\n  onCancel: () => void;\n}\n\nexport function ApiFormDetails({\n  form,\n  isSubmitting,\n  isNew,\n  sourceType,\n  setSourceType,\n  codeLanguage,\n  setCodeLanguage,\n  onFetchContent,\n  shouldFetchContent,\n  setShouldFetchContent,\n  applicationSlug,\n  organizationSlug,\n  apiVersion,\n  apiSlug,\n  onCancel\n}: ApiFormDetailsProps) {\n  // Watch form values for changes to pass to ApiSourceSection\n  const formVersion = form.watch('version');\n  const currentApiVersion = formVersion || apiVersion || '1.0.0';\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>API Name *</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter API name\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"version\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>API Version</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g. 1.0, v2, etc.\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      </div>\n\n      <FormField\n        control={form.control}\n        name=\"description\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Description</FormLabel>\n            <FormControl>\n              <Textarea \n                placeholder=\"Describe the purpose and functionality of this API\"\n                className=\"min-h-[100px]\"\n                {...field} \n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      <FormField\n        control={form.control}\n        name=\"status\"\n        render={({ field }) => (\n          <FormItem className=\"space-y-3\">\n            <FormLabel>Status</FormLabel>\n            <FormControl>\n              <RadioGroup\n                onValueChange={field.onChange}\n                defaultValue={field.value}\n                value={field.value}\n                className=\"flex flex-col space-y-1\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"active\" id=\"active\" />\n                  <Label htmlFor=\"active\">Active</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"inactive\" id=\"inactive\" />\n                  <Label htmlFor=\"inactive\">Inactive</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"deprecated\" id=\"deprecated\" />\n                  <Label htmlFor=\"deprecated\">Deprecated</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value=\"archived\" id=\"archived\" />\n                  <Label htmlFor=\"archived\">Archived</Label>\n                </div>\n              </RadioGroup>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      <FormField\n        control={form.control}\n        name=\"tags\"\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel>Tags</FormLabel>\n            <FormControl>\n              <TagsSelector\n                selectedTags={field.value || []}\n                onChange={field.onChange}\n              />\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      <div className=\"space-y-4\">\n        <ApiSourceSection\n          form={form}\n          sourceType={sourceType}\n          setSourceType={setSourceType}\n          codeLanguage={codeLanguage}\n          setCodeLanguage={setCodeLanguage}\n          onFetchContent={onFetchContent}\n          shouldFetchContent={shouldFetchContent}\n          setShouldFetchContent={setShouldFetchContent}\n          applicationSlug={applicationSlug}\n          organizationSlug={organizationSlug}\n          apiVersion={currentApiVersion}\n          apiSlug={apiSlug}\n        />\n      </div>\n      \n      <div className=\"flex justify-between pt-6\">\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Cancel\n        </Button>\n        <Button type=\"submit\" disabled={isSubmitting}>\n          <Save className=\"mr-2 h-4 w-4\" />\n          {isSubmitting ? 'Saving...' : isNew ? 'Create API' : 'Update API'}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useApplicationServices } from '@/hooks/useApplicationServices';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Badge } from '@/components/ui/badge';\nimport { Edit, Trash2, PlusCircle, Loader2 } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Input } from '@/components/ui/input';\nimport { ApplicationService } from '@/types/application';\n\ninterface ApiServicesListProps {\n  apiId?: string;\n  applicationId: string;\n}\n\nexport default function ApiServicesList({ apiId, applicationId }: ApiServicesListProps) {\n  const navigate = useNavigate();\n  // Pass both applicationId and apiId to the hook\n  const { services, isLoading, error, deleteService } = useApplicationServices(applicationId, apiId);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [serviceToDelete, setServiceToDelete] = useState<ApplicationService | null>(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Filter services based on search term\n  const filteredServices = services?.filter(service => \n    searchTerm === '' || \n    service.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    (service.description && service.description.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const handleDeleteConfirm = async () => {\n    if (serviceToDelete) {\n      setIsDeleting(true);\n      try {\n        await deleteService.mutateAsync(serviceToDelete.id);\n      } finally {\n        setIsDeleting(false);\n        setServiceToDelete(null);\n      }\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    }).format(date);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-500';\n      case 'inactive':\n        return 'bg-gray-500';\n      case 'maintenance':\n        return 'bg-amber-500';\n      default:\n        return 'bg-blue-500';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <Skeleton className=\"h-10 w-64\" />\n          <Skeleton className=\"h-10 w-40\" />\n        </div>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {Array.from({ length: 6 }).map((_, i) => (\n            <Card key={i}>\n              <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                  <Skeleton className=\"h-6 w-1/2\" />\n                  <Skeleton className=\"h-4 w-16 rounded-full\" />\n                </div>\n                <Skeleton className=\"h-5 w-24 mt-2\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-4 w-full mb-2\" />\n                <Skeleton className=\"h-4 w-2/3 mb-4\" />\n                <div className=\"flex flex-wrap gap-1 mt-3\">\n                  <Skeleton className=\"h-5 w-16 rounded-full\" />\n                  <Skeleton className=\"h-5 w-20 rounded-full\" />\n                </div>\n                <Skeleton className=\"h-4 w-36 mt-4\" />\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Skeleton className=\"h-9 w-20\" />\n                <Skeleton className=\"h-9 w-20\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8 border rounded-lg bg-muted/10\">\n        <h3 className=\"text-lg font-medium\">Error loading services</h3>\n        <p className=\"text-muted-foreground mb-4\">\n          There was a problem loading the service list. Please try again.\n        </p>\n        <Button onClick={() => window.location.reload()}>\n          Retry\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <Input\n          placeholder=\"Search services...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"max-w-sm\"\n        />\n        <Button onClick={() => navigate(`/applications/${applicationId}/services/new?api_id=${apiId}`)}>\n          <PlusCircle className=\"h-4 w-4 mr-2\" /> New Service\n        </Button>\n      </div>\n\n      {filteredServices && filteredServices.length > 0 ? (\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {filteredServices.map((service) => (\n            <Card key={service.id} className=\"overflow-hidden\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex justify-between items-start\">\n                  <CardTitle className=\"text-lg font-medium\">{service.name}</CardTitle>\n                  <div className=\"flex items-center space-x-1\">\n                    <span className={`rounded-full h-2 w-2 ${getStatusColor(service.status || 'active')}`} />\n                    <span className=\"text-xs capitalize\">{service.status || 'active'}</span>\n                  </div>\n                </div>\n                {service.service_type && (\n                  <Badge variant=\"outline\" className=\"mt-1\">{service.service_type}</Badge>\n                )}\n              </CardHeader>\n              <CardContent className=\"pb-3\">\n                <p className=\"text-sm text-muted-foreground line-clamp-2\">\n                  {service.description || \"No description provided\"}\n                </p>\n                \n                {service.method && service.path && (\n                  <div className=\"mt-3 flex items-center space-x-2\">\n                    <Badge variant=\"outline\" className=\"uppercase font-mono\">\n                      {service.method}\n                    </Badge>\n                    <span className=\"text-xs font-mono truncate\">{service.path}</span>\n                  </div>\n                )}\n                \n                <div className=\"mt-4 flex flex-wrap gap-1\">\n                  {service.tags && service.tags.map((tag, i) => (\n                    <Badge key={i} variant=\"secondary\" className=\"text-xs\">\n                      {tag}\n                    </Badge>\n                  ))}\n                </div>\n                <p className=\"mt-4 text-xs text-muted-foreground\">\n                  Created: {formatDate(service.created_at)}\n                </p>\n              </CardContent>\n              <CardFooter className=\"flex justify-between pt-0\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => navigate(`/applications/${applicationId}/services/${service.id}?api_id=${apiId}`)}\n                >\n                  <Edit className=\"h-4 w-4 mr-1\" /> Edit\n                </Button>\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => setServiceToDelete(service)}\n                >\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12 border rounded-lg bg-muted/10\">\n          <h3 className=\"text-lg font-medium\">No services found</h3>\n          <p className=\"text-muted-foreground mb-4\">\n            {searchTerm ? \"No services match your search criteria.\" : \"This API doesn't have any services yet.\"}\n          </p>\n          <Button onClick={() => navigate(`/applications/${applicationId}/services/new?api_id=${apiId}`)}>\n            Create your first service\n          </Button>\n        </div>\n      )}\n\n      <AlertDialog open={!!serviceToDelete} onOpenChange={(open) => !open && setServiceToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure you want to delete this service?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the service\n              \"{serviceToDelete?.name}\" and all its associated data.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={isDeleting}>Cancel</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleDeleteConfirm} \n              disabled={isDeleting}\n              className=\"relative\"\n            >\n              {isDeleting ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Deleting...\n                </>\n              ) : (\n                'Delete'\n              )}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useApplicationMessages } from '@/hooks/useApplicationMessages';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Badge } from '@/components/ui/badge';\nimport { Edit, Trash2, MessageSquare, CheckCircle, PlusCircle, Loader2 } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Input } from '@/components/ui/input';\nimport { ApplicationMessage } from '@/types/application';\n\ninterface ApiMessagesListProps {\n  apiId?: string;\n  applicationId: string;\n}\n\nexport default function ApiMessagesList({ apiId, applicationId }: ApiMessagesListProps) {\n  const navigate = useNavigate();\n  const { messages, isLoading, error, deleteMessage, markAsRead } = useApplicationMessages(applicationId, apiId);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [messageToDelete, setMessageToDelete] = useState<ApplicationMessage | null>(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isMarkingAsRead, setIsMarkingAsRead] = useState<string | null>(null);\n\n  const filteredMessages = messages?.filter(message => \n    searchTerm === '' || \n    message.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    message.content.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleDeleteConfirm = async () => {\n    if (messageToDelete) {\n      setIsDeleting(true);\n      try {\n        await deleteMessage.mutateAsync(messageToDelete.id);\n      } finally {\n        setIsDeleting(false);\n        setMessageToDelete(null);\n      }\n    }\n  };\n\n  const handleMarkAsRead = async (id: string) => {\n    setIsMarkingAsRead(id);\n    try {\n      await markAsRead.mutateAsync(id);\n    } finally {\n      setIsMarkingAsRead(null);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(date);\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'notification':\n        return <MessageSquare className=\"h-4 w-4 text-blue-500\" />;\n      case 'alert':\n        return <MessageSquare className=\"h-4 w-4 text-red-500\" />;\n      case 'info':\n        return <MessageSquare className=\"h-4 w-4 text-green-500\" />;\n      default:\n        return <MessageSquare className=\"h-4 w-4\" />;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <Skeleton className=\"h-10 w-64\" />\n          <Skeleton className=\"h-10 w-40\" />\n        </div>\n        <div className=\"space-y-4\">\n          {Array.from({ length: 3 }).map((_, i) => (\n            <Card key={i} className=\"overflow-hidden\">\n              <CardHeader>\n                <div className=\"flex justify-between\">\n                  <Skeleton className=\"h-6 w-1/3\" />\n                  <Skeleton className=\"h-6 w-20\" />\n                </div>\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-4 w-full mb-2\" />\n                <Skeleton className=\"h-4 w-2/3 mb-2\" />\n                <Skeleton className=\"h-4 w-1/2 mb-4\" />\n                <Skeleton className=\"h-4 w-32 mt-4\" />\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <div className=\"flex space-x-2\">\n                  <Skeleton className=\"h-9 w-20\" />\n                  <Skeleton className=\"h-9 w-28\" />\n                </div>\n                <Skeleton className=\"h-9 w-20\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8 border rounded-lg bg-muted/10\">\n        <h3 className=\"text-lg font-medium\">Error loading messages</h3>\n        <p className=\"text-muted-foreground mb-4\">\n          There was a problem loading the message list. Please try again.\n        </p>\n        <Button onClick={() => window.location.reload()}>\n          Retry\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <Input\n          placeholder=\"Search messages...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"max-w-sm\"\n        />\n        <Button onClick={() => navigate(`/applications/${applicationId}/messages/new?api_id=${apiId}`)}>\n          <PlusCircle className=\"h-4 w-4 mr-2\" /> New Message\n        </Button>\n      </div>\n\n      {filteredMessages && filteredMessages.length > 0 ? (\n        <div className=\"space-y-4\">\n          {filteredMessages.map((message) => (\n            <Card key={message.id} className={`overflow-hidden ${message.status === 'unread' ? 'border-blue-300' : ''}`}>\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex items-center gap-2\">\n                    {getTypeIcon(message.message_type)}\n                    <CardTitle className=\"text-lg font-medium\">{message.title}</CardTitle>\n                  </div>\n                  <Badge variant={message.status === 'unread' ? 'default' : 'outline'}>\n                    {message.status}\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent className=\"pb-3\">\n                <p className=\"text-sm text-muted-foreground whitespace-pre-line\">\n                  {message.content}\n                </p>\n                <p className=\"mt-4 text-xs text-muted-foreground\">\n                  {formatDate(message.created_at)}\n                </p>\n              </CardContent>\n              <CardFooter className=\"flex justify-between pt-0\">\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => navigate(`/applications/${applicationId}/messages/${message.id}?api_id=${apiId}`)}\n                  >\n                    <Edit className=\"h-4 w-4 mr-1\" /> Edit\n                  </Button>\n                  {message.status === 'unread' && (\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleMarkAsRead(message.id)}\n                      disabled={isMarkingAsRead === message.id}\n                    >\n                      {isMarkingAsRead === message.id ? (\n                        <Loader2 className=\"h-4 w-4 mr-1 animate-spin\" />\n                      ) : (\n                        <CheckCircle className=\"h-4 w-4 mr-1\" />\n                      )}\n                      Mark as Read\n                    </Button>\n                  )}\n                </div>\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => setMessageToDelete(message)}\n                >\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12 border rounded-lg bg-muted/10\">\n          <h3 className=\"text-lg font-medium\">No messages found</h3>\n          <p className=\"text-muted-foreground mb-4\">\n            {searchTerm ? \"No messages match your search criteria.\" : \"This API doesn't have any messages yet.\"}\n          </p>\n          <Button onClick={() => navigate(`/applications/${applicationId}/messages/new?api_id=${apiId}`)}>\n            Create your first message\n          </Button>\n        </div>\n      )}\n\n      <AlertDialog open={!!messageToDelete} onOpenChange={(open) => !open && setMessageToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure you want to delete this message?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the message\n              \"{messageToDelete?.title}\".\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={isDeleting}>Cancel</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleDeleteConfirm} \n              disabled={isDeleting}\n              className=\"relative\"\n            >\n              {isDeleting ? (\n                <>\n                  <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                  Deleting...\n                </>\n              ) : (\n                'Delete'\n              )}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n","\nimport { UseFormReturn } from 'react-hook-form';\nimport { useNavigate } from 'react-router';\nimport { ApiFormDetails } from './form-details';\nimport ApiServicesList from './ApiServicesList';\nimport ApiMessagesList from './ApiMessagesList';\nimport { ApiFormValues } from '@/hooks/application-apis/useApiForm';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\ninterface ApiFormProps {\n  form: UseFormReturn<ApiFormValues>;\n  isSubmitting: boolean;\n  isNew: boolean;\n  applicationId: string;\n  sourceType: 'uri' | 'content';\n  setSourceType: (type: 'uri' | 'content') => void;\n  codeLanguage: 'json' | 'yaml';\n  setCodeLanguage: (lang: 'json' | 'yaml') => void;\n  onFetchContent?: () => void;\n  shouldFetchContent?: boolean;\n  setShouldFetchContent?: (value: boolean) => void;\n  applicationSlug?: string;\n  organizationSlug?: string;\n  apiVersion?: string;\n  apiSlug?: string;\n  activeTab?: string;\n  setActiveTab?: (tab: string) => void;\n  apiId?: string;\n}\n\nexport function ApiForm({\n  form,\n  isSubmitting,\n  isNew,\n  applicationId,\n  sourceType,\n  setSourceType,\n  codeLanguage,\n  setCodeLanguage,\n  onFetchContent,\n  shouldFetchContent,\n  setShouldFetchContent,\n  applicationSlug,\n  organizationSlug,\n  apiVersion,\n  apiSlug,\n  activeTab = 'details',\n  setActiveTab,\n  apiId\n}: ApiFormProps) {\n  const navigate = useNavigate();\n  \n  // Determine if we should show the services and messages tabs\n  const hasSourceContent = form.watch('source_content') ? true : false;\n\n  const handleCancel = () => {\n    navigate(`/applications/${applicationId}`);\n  };\n\n  // For new APIs, just show the form details\n  if (isNew) {\n    return (\n      <div>\n        <ApiFormDetails\n          form={form}\n          isSubmitting={isSubmitting}\n          isNew={isNew}\n          sourceType={sourceType}\n          setSourceType={setSourceType}\n          codeLanguage={codeLanguage}\n          setCodeLanguage={setCodeLanguage}\n          onFetchContent={onFetchContent}\n          shouldFetchContent={shouldFetchContent}\n          setShouldFetchContent={setShouldFetchContent}\n          applicationSlug={applicationSlug}\n          organizationSlug={organizationSlug}\n          apiVersion={apiVersion}\n          apiSlug={apiSlug}\n          onCancel={handleCancel}\n        />\n      </div>\n    );\n  }\n\n  // For existing APIs, show the tabs\n  return (\n    <div className=\"space-y-6\">\n      <Tabs \n        defaultValue={activeTab} \n        onValueChange={setActiveTab ? setActiveTab : () => {}}\n        className=\"w-full\"\n      >\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"details\">API Details</TabsTrigger>\n          <TabsTrigger value=\"services\">Services</TabsTrigger>\n          <TabsTrigger value=\"messages\">Messages</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"details\" className=\"pt-4\">\n          <ApiFormDetails\n            form={form}\n            isSubmitting={isSubmitting}\n            isNew={isNew}\n            sourceType={sourceType}\n            setSourceType={setSourceType}\n            codeLanguage={codeLanguage}\n            setCodeLanguage={setCodeLanguage}\n            onFetchContent={onFetchContent}\n            shouldFetchContent={shouldFetchContent}\n            setShouldFetchContent={setShouldFetchContent}\n            applicationSlug={applicationSlug}\n            organizationSlug={organizationSlug}\n            apiVersion={apiVersion}\n            apiSlug={apiSlug}\n            onCancel={handleCancel}\n          />\n        </TabsContent>\n        \n        <TabsContent value=\"services\" className=\"pt-4\">\n          <ApiServicesList apiId={apiId} applicationId={applicationId} />\n        </TabsContent>\n        \n        <TabsContent value=\"messages\" className=\"pt-4\">\n          <ApiMessagesList apiId={apiId} applicationId={applicationId} />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n","\nimport React from 'react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2 } from 'lucide-react';\n\ninterface ApiFormStatusProps {\n  isLoading: boolean;\n  error?: Error | null;\n  applicationMissing: boolean;\n}\n\nexport const ApiFormStatus: React.FC<ApiFormStatusProps> = ({ \n  isLoading, \n  error, \n  applicationMissing \n}) => {\n  if (isLoading) {\n    return (\n      <Alert>\n        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n        <AlertDescription>\n          Loading API data...\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertDescription>\n          Error loading API data: {error.message}\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (applicationMissing) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertDescription>\n          Application not found.\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  return null;\n};\n","\nimport React, { useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form } from '@/components/ui/form';\nimport { useApplications } from '@/hooks';\nimport { useOrganizations } from '@/hooks/useOrganizations';\nimport ErrorBoundary from '@/components/ErrorBoundary';\nimport { ApiForm } from './components/ApiForm';\nimport { ApiFormStatus } from './components/ApiFormStatus';\nimport { useApiForm } from '@/hooks/application-apis/useApiForm';\n\nexport function ApiFormController() {\n  const { applicationId, apiId } = useParams<{ applicationId: string; apiId: string }>();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const tabParam = searchParams.get('tab');\n  const [activeTab, setActiveTab] = useState(tabParam || 'details');\n  \n  // Get application data\n  const { applications, isLoading: isAppLoading } = useApplications();\n  const application = applications?.find(app => app.id === applicationId);\n  \n  // Get organization data\n  const { organizations, isLoading: isOrgLoading } = useOrganizations();\n  const organization = organizations?.find(org => \n    application?.organization_id ? org.id === application.organization_id : false\n  );\n  \n  // Use our new hook for API form handling\n  const {\n    form,\n    isEditMode,\n    isSubmitting,\n    isApiLoading,\n    apiError,\n    sourceType,\n    setSourceType,\n    codeLanguage,\n    setCodeLanguage,\n    handleFetchContent,\n    shouldFetchContent,\n    setShouldFetchContent,\n    initialValues,\n    onSubmit\n  } = useApiForm({ applicationId, apiId });\n\n  // Handle tab change and update URL\n  const handleTabChange = (value: string) => {\n    setActiveTab(value);\n    setSearchParams({ tab: value });\n  };\n\n  // The combined loading state includes both applications and organizations\n  const isLoading = isAppLoading || isOrgLoading || isApiLoading;\n\n  return (\n    <ErrorBoundary>\n      <Card>\n        <CardHeader>\n          <CardTitle>{isEditMode ? 'Edit API' : 'Create API'}</CardTitle>\n          <CardDescription>\n            {isEditMode ? 'Edit the API details below.' : 'Create a new API for your application.'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ApiFormStatus \n            isLoading={isLoading}\n            error={apiError}\n            applicationMissing={!application}\n          />\n          \n          {application && (\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <ApiForm\n                  form={form}\n                  isSubmitting={isSubmitting}\n                  isNew={!isEditMode}\n                  applicationId={applicationId || ''}\n                  sourceType={sourceType}\n                  setSourceType={setSourceType}\n                  codeLanguage={codeLanguage}\n                  setCodeLanguage={setCodeLanguage}\n                  onFetchContent={handleFetchContent}\n                  shouldFetchContent={shouldFetchContent}\n                  setShouldFetchContent={setShouldFetchContent}\n                  applicationSlug={application?.slug}\n                  organizationSlug={organization?.slug}\n                  apiVersion={form.watch('version')}\n                  apiSlug={initialValues?.slug}\n                  activeTab={activeTab}\n                  setActiveTab={handleTabChange}\n                  apiId={apiId}\n                />\n              </form>\n            </Form>\n          )}\n        </CardContent>\n      </Card>\n    </ErrorBoundary>\n  );\n}\n\nexport default ApiFormController;\n","\nimport React from 'react';\nimport ApiFormController from './ApiFormController';\n\nconst ApiFormPage = () => {\n  return <ApiFormController />;\n};\n\nexport default ApiFormPage;\n"],"names":["CircleCheckBig","createLucideIcon","FileJson","MessageSquare","ErrorBoundary","React","__publicField","error","jsx","TagsSelector","selectedTags","onChange","newTag","setNewTag","useState","handleAddTag","updatedTags","handleKeyDown","e","handleRemoveTag","tag","t","jsxs","Input","Button","PlusCircle","index","TagBadge","CodeEditor","value","language","className","readOnly","copied","setCopied","localValue","setLocalValue","useEffect","handleCopy","handleChange","newValue","formatCode","formatted","cn","FileText","Check","Copy","UriSourceSection","form","isUriValid","onFetchContent","shouldFetchContent","setShouldFetchContent","isContentMode","codeLanguage","sourceUri","isGeneratedURI","setIsGeneratedURI","React.useState","React.useEffect","FormField","field","FormItem","FormLabel","TooltipProvider","Tooltip","TooltipTrigger","FormControl","TooltipContent","Download","FormDescription","FormMessage","Checkbox","checked","Alert","AlertCircle","AlertDescription","generateURN","apiSlug","organizationSlug","applicationSlug","apiVersion","name","slug","urn","ApiSourceSection","sourceType","setSourceType","setCodeLanguage","setIsUriValid","setIsContentMode","isValidUri","uri","sourceContent","apiName","apiVersionFromForm","newIsContentMode","ApiFormDetails","isSubmitting","isNew","onCancel","currentApiVersion","Textarea","RadioGroup","RadioGroupItem","Label","ArrowLeft","Save","ApiServicesList","apiId","applicationId","navigate","useNavigate","services","isLoading","deleteService","useApplicationServices","searchTerm","setSearchTerm","serviceToDelete","setServiceToDelete","isDeleting","setIsDeleting","filteredServices","service","handleDeleteConfirm","formatDate","dateString","date","getStatusColor","status","Skeleton","_","i","Card","CardHeader","CardContent","CardFooter","CardTitle","Badge","Edit","Trash2","AlertDialog","open","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","Fragment","Loader2","ApiMessagesList","messages","deleteMessage","markAsRead","useApplicationMessages","messageToDelete","setMessageToDelete","isMarkingAsRead","setIsMarkingAsRead","filteredMessages","message","handleMarkAsRead","id","getTypeIcon","type","CheckCircle","ApiForm","activeTab","setActiveTab","handleCancel","Tabs","TabsList","TabsTrigger","TabsContent","ApiFormStatus","applicationMissing","ApiFormController","useParams","searchParams","setSearchParams","useSearchParams","tabParam","applications","isAppLoading","useApplications","application","app","organizations","isOrgLoading","useOrganizations","organization","org","isEditMode","isApiLoading","apiError","handleFetchContent","initialValues","onSubmit","useApiForm","handleTabChange","CardDescription","Form","ApiFormPage"],"mappings":"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","x_google_ignoreList":[0,1,2]}