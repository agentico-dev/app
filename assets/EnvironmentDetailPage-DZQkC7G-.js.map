{"version":3,"file":"EnvironmentDetailPage-DZQkC7G-.js","sources":["../../src/pages/settings/EnvironmentDetailPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { toast } from 'sonner';\nimport { ArrowLeft, Save, Trash } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\n\nconst EnvironmentDetailPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  \n  // In a real app you would fetch this data\n  const [environment, setEnvironment] = useState({\n    id: id,\n    name: id === '1' ? 'Development' : id === '2' ? 'Staging' : 'Production',\n    key: id === '1' ? 'dev' : id === '2' ? 'staging' : 'prod',\n    isDefault: id === '1',\n  });\n\n  const [variables, setVariables] = useState([\n    { key: 'API_URL', value: 'https://api.example.com', isSecret: false },\n    { key: 'DEBUG_MODE', value: 'true', isSecret: false },\n    { key: 'API_KEY', value: '********', isSecret: true },\n  ]);\n\n  const [newVar, setNewVar] = useState({ key: '', value: '', isSecret: false });\n\n  const handleSave = () => {\n    // In a real app, you would save the changes to your backend\n    toast.success('Environment settings saved!');\n  };\n\n  const addVariable = () => {\n    if (newVar.key && newVar.value) {\n      setVariables([...variables, { ...newVar }]);\n      setNewVar({ key: '', value: '', isSecret: false });\n    } else {\n      toast.error('Both key and value are required');\n    }\n  };\n\n  const removeVariable = (indexToRemove: number) => {\n    setVariables(variables.filter((_, index) => index !== indexToRemove));\n  };\n\n  return (\n    <div className=\"container mx-auto py-6\">\n      <Button \n        variant=\"ghost\" \n        className=\"mb-6\"\n        onClick={() => navigate('/settings/environments')}\n      >\n        <ArrowLeft className=\"mr-2 h-4 w-4\" />\n        Back to Environments\n      </Button>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Environment: {environment.name}</CardTitle>\n          <CardDescription>Configure settings for this environment</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"general\">\n            <TabsList className=\"mb-4\">\n              <TabsTrigger value=\"general\">General</TabsTrigger>\n              <TabsTrigger value=\"variables\">Environment Variables</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"general\">\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"name\">Environment Name</Label>\n                  <Input \n                    id=\"name\" \n                    value={environment.name} \n                    onChange={(e) => setEnvironment({...environment, name: e.target.value})}\n                  />\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"key\">Environment Key</Label>\n                  <Input \n                    id=\"key\" \n                    value={environment.key} \n                    onChange={(e) => setEnvironment({...environment, key: e.target.value})}\n                  />\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    This key is used in configuration files to reference this environment.\n                  </p>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox \n                    id=\"isDefault\"\n                    checked={environment.isDefault}\n                    onCheckedChange={(checked) => \n                      setEnvironment({...environment, isDefault: checked as boolean})\n                    }\n                  />\n                  <label\n                    htmlFor=\"isDefault\"\n                    className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                  >\n                    Set as default environment\n                  </label>\n                </div>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"variables\">\n              <div className=\"space-y-4\">\n                <div className=\"border p-4 rounded-md\">\n                  <h3 className=\"font-medium mb-2\">Add New Variable</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div>\n                      <Label htmlFor=\"var-key\">Key</Label>\n                      <Input \n                        id=\"var-key\" \n                        value={newVar.key} \n                        onChange={(e) => setNewVar({...newVar, key: e.target.value})}\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"var-value\">Value</Label>\n                      <Input \n                        id=\"var-value\" \n                        value={newVar.value} \n                        onChange={(e) => setNewVar({...newVar, value: e.target.value})}\n                      />\n                    </div>\n                    <div className=\"flex items-end\">\n                      <div className=\"flex items-center space-x-2 mr-4\">\n                        <Checkbox \n                          id=\"isSecret\"\n                          checked={newVar.isSecret}\n                          onCheckedChange={(checked) => \n                            setNewVar({...newVar, isSecret: checked as boolean})\n                          }\n                        />\n                        <label\n                          htmlFor=\"isSecret\"\n                          className=\"text-sm font-medium leading-none\"\n                        >\n                          Secret\n                        </label>\n                      </div>\n                      <Button onClick={addVariable}>Add</Button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div>\n                  <h3 className=\"font-medium mb-2\">Environment Variables</h3>\n                  <div className=\"border rounded-md overflow-hidden\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-muted\">\n                        <tr>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">Key</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">Value</th>\n                          <th className=\"px-4 py-2 text-left text-xs font-medium text-muted-foreground uppercase tracking-wider\">Type</th>\n                          <th className=\"px-4 py-2 text-right text-xs font-medium text-muted-foreground uppercase tracking-wider\">Actions</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-card divide-y divide-gray-200\">\n                        {variables.map((variable, index) => (\n                          <tr key={index}>\n                            <td className=\"px-4 py-2 whitespace-nowrap\">{variable.key}</td>\n                            <td className=\"px-4 py-2 whitespace-nowrap\">{variable.isSecret ? '********' : variable.value}</td>\n                            <td className=\"px-4 py-2 whitespace-nowrap\">\n                              {variable.isSecret ? (\n                                <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800 border-blue-300\">\n                                  Secret\n                                </Badge>\n                              ) : (\n                                <Badge variant=\"outline\">Plain</Badge>\n                              )}\n                            </td>\n                            <td className=\"px-4 py-2 whitespace-nowrap text-right\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\"\n                                onClick={() => removeVariable(index)}\n                              >\n                                <Trash className=\"h-4 w-4 text-destructive\" />\n                              </Button>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n        <CardFooter className=\"justify-end\">\n          <Button onClick={handleSave}>\n            <Save className=\"mr-2 h-4 w-4\" />\n            Save Changes\n          </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n};\n\nexport default EnvironmentDetailPage;\n"],"names":["EnvironmentDetailPage","id","useParams","navigate","useNavigate","environment","setEnvironment","useState","variables","setVariables","newVar","setNewVar","handleSave","toast","addVariable","removeVariable","indexToRemove","_","index","jsxs","Button","jsx","ArrowLeft","Card","CardHeader","CardTitle","CardDescription","CardContent","Tabs","TabsList","TabsTrigger","TabsContent","Label","Input","e","Checkbox","checked","variable","Badge","Trash","CardFooter","Save"],"mappings":"8/BAYA,MAAMA,EAAwB,IAAM,CAC5B,KAAA,CAAE,GAAAC,CAAG,EAAIC,EAAU,EACnBC,EAAWC,EAAY,EAGvB,CAACC,EAAaC,CAAc,EAAIC,WAAS,CAC7C,GAAAN,EACA,KAAMA,IAAO,IAAM,cAAgBA,IAAO,IAAM,UAAY,aAC5D,IAAKA,IAAO,IAAM,MAAQA,IAAO,IAAM,UAAY,OACnD,UAAWA,IAAO,GAAA,CACnB,EAEK,CAACO,EAAWC,CAAY,EAAIF,WAAS,CACzC,CAAE,IAAK,UAAW,MAAO,0BAA2B,SAAU,EAAM,EACpE,CAAE,IAAK,aAAc,MAAO,OAAQ,SAAU,EAAM,EACpD,CAAE,IAAK,UAAW,MAAO,WAAY,SAAU,EAAK,CAAA,CACrD,EAEK,CAACG,EAAQC,CAAS,EAAIJ,EAAS,SAAA,CAAE,IAAK,GAAI,MAAO,GAAI,SAAU,EAAA,CAAO,EAEtEK,EAAa,IAAM,CAEvBC,EAAM,QAAQ,6BAA6B,CAC7C,EAEMC,EAAc,IAAM,CACpBJ,EAAO,KAAOA,EAAO,OACvBD,EAAa,CAAC,GAAGD,EAAW,CAAE,GAAGE,CAAQ,CAAA,CAAC,EAC1CC,EAAU,CAAE,IAAK,GAAI,MAAO,GAAI,SAAU,GAAO,GAEjDE,EAAM,MAAM,iCAAiC,CAEjD,EAEME,EAAkBC,GAA0B,CAChDP,EAAaD,EAAU,OAAO,CAACS,EAAGC,IAAUA,IAAUF,CAAa,CAAC,CACtE,EAGE,OAAAG,EAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,EAAA,KAACC,EAAA,CACC,QAAQ,QACR,UAAU,OACV,QAAS,IAAMjB,EAAS,wBAAwB,EAEhD,SAAA,CAACkB,EAAAA,IAAAC,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,sBAAA,CAAA,CAExC,SAECC,EACC,CAAA,SAAA,CAAAJ,OAACK,EACC,CAAA,SAAA,CAAAL,OAACM,EAAU,CAAA,SAAA,CAAA,gBAAcpB,EAAY,IAAA,EAAK,EAC1CgB,EAAAA,IAACK,GAAgB,SAAuC,yCAAA,CAAA,CAAA,EAC1D,EACCL,MAAAM,EAAA,CACC,SAACR,EAAAA,KAAAS,EAAA,CAAK,aAAa,UACjB,SAAA,CAACT,EAAAA,KAAAU,EAAA,CAAS,UAAU,OAClB,SAAA,CAACR,EAAA,IAAAS,EAAA,CAAY,MAAM,UAAU,SAAO,UAAA,EACnCT,EAAA,IAAAS,EAAA,CAAY,MAAM,YAAY,SAAqB,uBAAA,CAAA,CAAA,EACtD,QAECC,EAAY,CAAA,MAAM,UACjB,SAACZ,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAAW,EAAA,CAAM,QAAQ,OAAO,SAAgB,mBAAA,EACtCX,EAAA,IAACY,EAAA,CACC,GAAG,OACH,MAAO5B,EAAY,KACnB,SAAW6B,GAAM5B,EAAe,CAAC,GAAGD,EAAa,KAAM6B,EAAE,OAAO,KAAM,CAAA,CAAA,CAAA,CACxE,EACF,SAEC,MACC,CAAA,SAAA,CAACb,EAAA,IAAAW,EAAA,CAAM,QAAQ,MAAM,SAAe,kBAAA,EACpCX,EAAA,IAACY,EAAA,CACC,GAAG,MACH,MAAO5B,EAAY,IACnB,SAAW6B,GAAM5B,EAAe,CAAC,GAAGD,EAAa,IAAK6B,EAAE,OAAO,KAAM,CAAA,CAAA,CACvE,EACCb,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAqC,SAElD,wEAAA,CAAA,CAAA,EACF,EAEAF,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAE,EAAA,IAACc,EAAA,CACC,GAAG,YACH,QAAS9B,EAAY,UACrB,gBAAkB+B,GAChB9B,EAAe,CAAC,GAAGD,EAAa,UAAW+B,CAAmB,CAAA,CAAA,CAElE,EACAf,EAAA,IAAC,QAAA,CACC,QAAQ,YACR,UAAU,6FACX,SAAA,4BAAA,CAAA,CAED,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QAECU,EAAY,CAAA,MAAM,YACjB,SAACZ,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACb,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAgB,mBAAA,EACjDF,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAAW,EAAA,CAAM,QAAQ,UAAU,SAAG,MAAA,EAC5BX,EAAA,IAACY,EAAA,CACC,GAAG,UACH,MAAOvB,EAAO,IACd,SAAWwB,GAAMvB,EAAU,CAAC,GAAGD,EAAQ,IAAKwB,EAAE,OAAO,KAAM,CAAA,CAAA,CAAA,CAC7D,EACF,SACC,MACC,CAAA,SAAA,CAACb,EAAA,IAAAW,EAAA,CAAM,QAAQ,YAAY,SAAK,QAAA,EAChCX,EAAA,IAACY,EAAA,CACC,GAAG,YACH,MAAOvB,EAAO,MACd,SAAWwB,GAAMvB,EAAU,CAAC,GAAGD,EAAQ,MAAOwB,EAAE,OAAO,KAAM,CAAA,CAAA,CAAA,CAC/D,EACF,EACAf,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAE,EAAA,IAACc,EAAA,CACC,GAAG,WACH,QAASzB,EAAO,SAChB,gBAAkB0B,GAChBzB,EAAU,CAAC,GAAGD,EAAQ,SAAU0B,CAAmB,CAAA,CAAA,CAEvD,EACAf,EAAA,IAAC,QAAA,CACC,QAAQ,WACR,UAAU,mCACX,SAAA,QAAA,CAAA,CAED,EACF,EACCA,EAAA,IAAAD,EAAA,CAAO,QAASN,EAAa,SAAG,KAAA,CAAA,CAAA,CACnC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACO,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAqB,wBAAA,QACrD,MAAI,CAAA,UAAU,oCACb,SAACF,EAAA,KAAA,QAAA,CAAM,UAAU,sCACf,SAAA,CAAAE,MAAC,QAAM,CAAA,UAAU,WACf,SAAAF,EAAA,KAAC,KACC,CAAA,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,yFAAyF,SAAG,MAAA,EACzGA,EAAA,IAAA,KAAA,CAAG,UAAU,yFAAyF,SAAK,QAAA,EAC3GA,EAAA,IAAA,KAAA,CAAG,UAAU,yFAAyF,SAAI,OAAA,EAC1GA,EAAA,IAAA,KAAA,CAAG,UAAU,0FAA0F,SAAO,SAAA,CAAA,CAAA,CAAA,CACjH,CACF,CAAA,EACAA,EAAAA,IAAC,QAAM,CAAA,UAAU,mCACd,SAAAb,EAAU,IAAI,CAAC6B,EAAUnB,IACxBC,EAAA,KAAC,KACC,CAAA,SAAA,CAAAE,EAAA,IAAC,KAAG,CAAA,UAAU,8BAA+B,SAAAgB,EAAS,IAAI,EAC1DhB,EAAAA,IAAC,MAAG,UAAU,8BAA+B,WAAS,SAAW,WAAagB,EAAS,KAAM,CAAA,QAC5F,KAAG,CAAA,UAAU,8BACX,SAASA,EAAA,eACPC,EAAM,CAAA,QAAQ,UAAU,UAAU,4CAA4C,iBAE/E,CAAA,EAEAjB,EAAAA,IAACiB,GAAM,QAAQ,UAAU,iBAAK,CAElC,CAAA,EACAjB,EAAAA,IAAC,KAAG,CAAA,UAAU,yCACZ,SAAAA,EAAA,IAACD,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAML,EAAeG,CAAK,EAEnC,SAAAG,EAAAA,IAACkB,EAAM,CAAA,UAAU,0BAA2B,CAAA,CAAA,CAAA,CAEhD,CAAA,CAAA,CApBO,EAAArB,CAqBT,CACD,CACH,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,QACCsB,EAAW,CAAA,UAAU,cACpB,SAACrB,EAAA,KAAAC,EAAA,CAAO,QAASR,EACf,SAAA,CAACS,EAAAA,IAAAoB,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,cAAA,CAAA,CAEnC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ"}