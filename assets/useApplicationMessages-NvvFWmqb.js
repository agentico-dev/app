import{u as l,b as v,d as c}from"./data-management-CvhHSD84.js";import{u as d,b as K,s as u}from"./index-CXZKCkms.js";function M(i,n){const{session:o}=d(),{toast:r}=K(),t=v(),g=!!o.user,{data:y,isLoading:m,error:f}=l({queryKey:["application-messages",i,n],queryFn:async()=>{if(!o.user)return[];let e=u.from("application_messages").select("*");n?e=e.eq("api_id",n):i&&(e=e.eq("application_id",i));const{data:s,error:a}=await e.order("created_at",{ascending:!1});if(a)throw a;return s},enabled:!!o.user}),_=c({mutationFn:async e=>{if(!o.user)throw new Error("Authentication required");const{data:s,error:a}=await u.from("application_messages").insert({title:e.title,content:e.content,application_id:e.application_id,api_id:e.api_id,message_type:e.message_type||"notification",status:e.status||"unread"}).select().single();if(a)throw a;return s},onSuccess:(e,s)=>{s.application_id&&t.invalidateQueries({queryKey:["application-messages",s.application_id]}),s.api_id&&t.invalidateQueries({queryKey:["application-messages",i,s.api_id]}),t.invalidateQueries({queryKey:["application-messages"]}),r({title:"Message created",description:"The message has been created successfully."})},onError:e=>{r({title:"Error creating message",description:e.message,variant:"destructive"})}}),q=c({mutationFn:async({id:e,...s})=>{if(!o.user)throw new Error("Authentication required");const{data:a,error:p}=await u.from("application_messages").update({title:s.title,content:s.content,message_type:s.message_type,api_id:s.api_id,status:s.status,updated_at:new Date().toISOString()}).eq("id",e).select().single();if(p)throw p;return a},onSuccess:e=>{e.application_id&&t.invalidateQueries({queryKey:["application-messages",e.application_id]}),e.api_id&&t.invalidateQueries({queryKey:["application-messages",i,e.api_id]}),t.invalidateQueries({queryKey:["application-messages"]}),r({title:"Message updated",description:"The message has been updated successfully."})},onError:e=>{r({title:"Error updating message",description:e.message,variant:"destructive"})}}),h=c({mutationFn:async e=>{if(!o.user)throw new Error("Authentication required");const{error:s}=await u.from("application_messages").delete().eq("id",e);if(s)throw s;return e},onSuccess:(e,s)=>{i&&t.invalidateQueries({queryKey:["application-messages",i]}),n&&t.invalidateQueries({queryKey:["application-messages",i,n]}),t.invalidateQueries({queryKey:["application-messages"]}),r({title:"Message deleted",description:"The message has been deleted successfully."})},onError:e=>{r({title:"Error deleting message",description:e.message,variant:"destructive"})}}),w=c({mutationFn:async e=>{if(!o.user)throw new Error("Authentication required");const{data:s,error:a}=await u.from("application_messages").update({status:"read"}).eq("id",e).select().single();if(a)throw a;return s},onSuccess:e=>{e.application_id&&t.invalidateQueries({queryKey:["application-messages",e.application_id]}),e.api_id&&t.invalidateQueries({queryKey:["application-messages",i,e.api_id]}),t.invalidateQueries({queryKey:["application-messages"]})},onError:e=>{r({title:"Error updating message status",description:e.message,variant:"destructive"})}});return{messages:y,isLoading:m,error:f,isAuthenticated:g,createMessage:_,updateMessage:q,deleteMessage:h,markAsRead:w}}function A(i){const{session:n}=d();return l({queryKey:["application-message",i],queryFn:async()=>{if(!i)return null;const{data:o,error:r}=await u.from("application_messages").select("*").eq("id",i).single();if(r)throw r;return o},enabled:!!i&&!!(n!=null&&n.user)})}export{A as a,M as u};
