{"version":3,"file":"ApplicationDetailPage-Dy0u0uKm.js","sources":["../../src/hooks/application-apis/utils.ts","../../src/hooks/application-apis/useApplicationApis.tsx","../../src/components/applications/APIsList.tsx","../../src/components/applications/ApplicationSettings.tsx","../../src/components/ui/breadcrumb.tsx","../../src/components/layout/BreadcrumbNav.tsx","../../src/pages/applications/ApplicationDetailPage.tsx"],"sourcesContent":["\nimport { ApplicationAPI } from '@/types/application';\nimport { \n  fetchContentFromUri \n} from '@/utils/apiContentUtils';\n\n/**\n * Fetches and compresses content from a URI if needed\n */\nexport async function fetchContent(\n  shouldFetchContent: boolean = false,\n  data: Partial<ApplicationAPI>\n): Promise<{\n  contentToSave: string;\n  contentFormat: 'json' | 'yaml';\n}> {\n  let contentToSave = data.source_content || '';\n  let contentFormat = data.content_format || 'json';\n\n  // If fetchContent is true and we have a source_uri, fetch the content\n  if (shouldFetchContent && data.source_uri) {\n    try {\n      const { content, format } = await fetchContentFromUri(data.source_uri);\n      contentToSave = content;\n      contentFormat = format;\n      \n      // Log success for debugging\n      console.log('Successfully fetched content from URI:', {\n        uri: data.source_uri,\n        format: format,\n        contentLength: content.length\n      });\n    } catch (error: any) {\n      console.error('Failed to fetch content from URI:', error);\n      throw new Error(`Failed to fetch content from URI: ${error.message}`);\n    }\n  }\n\n  return { contentToSave, contentFormat };\n}\n\n/**\n * Validates if the source content is present and valid\n */\nexport function hasValidSourceContent(api?: Partial<ApplicationAPI>): boolean {\n  if (!api) return false;\n  \n  // Check if source_content exists and is not empty\n  return !!(api.source_content && api.source_content.trim().length > 0);\n}\n","\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useAuth } from '../useAuth';\nimport { toast } from 'sonner';\nimport type { ApplicationAPI } from '@/types/application';\nimport { fetchContent } from './utils';\n\n/**\n * Hook for managing APIs for a specific application\n */\nexport function useApplicationApis(applicationId?: string) {\n  const { session } = useAuth();\n  const queryClient = useQueryClient();\n\n  const isAuthenticated = !!session?.user;\n\n  // Fetch all APIs for an application\n  const { data: apis, isLoading, error } = useQuery({\n    queryKey: ['application-apis', applicationId],\n    queryFn: async () => {\n      if (!applicationId) return [];\n\n      const { data, error } = await supabase\n        .from('application_apis')\n        .select('*')\n        .eq('application_id', applicationId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;      \n      // Process the APIs to handle binary data\n      return data;\n    },\n    enabled: !!applicationId,\n  });\n\n  // Create a new API\n  const createApi = useMutation({\n    mutationFn: async (apiData: Partial<ApplicationAPI> & { shouldFetchContent?: boolean }) => {\n      if (!session?.user) throw new Error('Authentication required');\n\n      const { shouldFetchContent, ...restData } = apiData;\n      \n      // Handle content fetching and compression\n      const { contentToSave, contentFormat } = \n        await fetchContent(shouldFetchContent, restData);\n\n      const { data, error } = await supabase\n        .from('application_apis')\n        .insert({\n          name: restData.name,\n          description: restData.description,\n          application_id: restData.application_id,\n          status: restData.status || 'active',\n          version: restData.version,\n          source_uri: restData.source_uri,\n          source_content: restData.source_content || contentToSave,\n          content_format: contentFormat,\n          tags: restData.tags || [],\n        })\n        .select();\n\n      if (error) {\n        console.error('Error creating API:', error);\n        throw error;\n      }\n\n      // Return the first item if data is an array\n      const createdApi = Array.isArray(data) ? data[0] : data;\n\n      // Return the data with decompressed content for immediate use\n      if (createdApi.source_content) {\n        try {\n          createdApi.source_content = contentToSave;\n        } catch (err) {\n          console.error('Error with returned source_content:', err);\n          createdApi.source_content = '';\n        }\n      }\n\n      return createdApi;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['application-apis', applicationId] });\n      toast.success('API created successfully');\n    },\n    onError: (error) => {\n      toast.error('Error creating API: ' + error.message);\n    },\n  });\n\n  // Update an API\n  const updateApi = useMutation({\n    mutationFn: async ({\n      id,\n      fetchContent: shouldFetchContent = false,\n      ...data\n    }: Partial<ApplicationAPI> & { id: string, fetchContent?: boolean }) => {\n      if (!session?.user) throw new Error('Authentication required');\n\n      console.log('Updating API with data:', { id, fetchContent: shouldFetchContent, ...data });\n\n      // Handle content fetching and compression\n      const { contentToSave, contentFormat } = \n        await fetchContent(shouldFetchContent, data);\n\n      // Create update object with only fields we want to update\n      const updateData: Record<string, any> = {};\n      \n      // Only include fields that are defined\n      if (data.name !== undefined) updateData.name = data.name;\n      if (data.description !== undefined) updateData.description = data.description;\n      if (data.status !== undefined) updateData.status = data.status;\n      if (data.version !== undefined) updateData.version = data.version;\n      if (data.source_uri !== undefined) updateData.source_uri = data.source_uri;\n      if (data.tags !== undefined) updateData.tags = data.tags;\n      if (data.protocol !== undefined) updateData.protocol = data.protocol;\n      if (data.is_public !== undefined) updateData.is_public = data.is_public;\n      \n      // Add compressed content to update data if it exists\n      if (contentToSave !== undefined) {\n        updateData.source_content = contentToSave;\n        updateData.content_format = contentFormat;\n      }\n\n      // Add updated_at field\n      updateData.updated_at = new Date().toISOString();\n      \n      console.log('Final update data to be sent to Supabase:', updateData);\n\n      // Update the API\n      const { error } = await supabase\n        .from('application_apis')\n        .update(updateData)\n        .eq('id', id);\n\n      if (error) {\n        console.error('Error updating API:', error);\n        throw error;\n      }\n\n      console.log('API updated successfully in Supabase');\n\n      // Return the updated data for optimistic updates\n      return { id, ...data, ...updateData };\n    },\n    onSuccess: (data) => {\n      console.log('Update successful, invalidating queries', data);\n      queryClient.invalidateQueries({ queryKey: ['application-apis', applicationId] });\n      // Also invalidate the specific API query\n      queryClient.invalidateQueries({ queryKey: ['application-api', data.id] });\n      toast.success('API updated successfully');\n    },\n    onError: (error) => {\n      console.error('Update API error:', error);\n      toast.error('Error updating API: ' + error.message);\n    },\n  });\n\n  // Delete an API\n  const deleteApi = useMutation({\n    mutationFn: async (id: string) => {\n      if (!session?.user) throw new Error('Authentication required');\n\n      const { error } = await supabase\n        .from('application_apis')\n        .delete()\n        .eq('id', id);\n\n      if (error) throw error;\n      return id;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['application-apis', applicationId] });\n      toast.success('API deleted successfully');\n    },\n    onError: (error) => {\n      toast.error('Error deleting API: ' + error.message);\n    },\n  });\n\n  return {\n    apis,\n    isLoading,\n    error,\n    isAuthenticated,\n    createApi,\n    updateApi,\n    deleteApi,\n  };\n}\n","\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useApplicationApis } from '@/hooks/application-apis';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Badge } from '@/components/ui/badge';\nimport { Edit, Trash2, ExternalLink } from 'lucide-react';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from '@/components/ui/alert-dialog';\nimport { Input } from '@/components/ui/input';\nimport { ApplicationAPI } from '@/types/application';\n\ninterface APIsListProps {\n  applicationId: string;\n}\n\nexport default function APIsList({ applicationId }: APIsListProps) {\n  const navigate = useNavigate();\n  const { apis, isLoading, error, deleteApi } = useApplicationApis(applicationId);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [apiToDelete, setApiToDelete] = useState<ApplicationAPI | null>(null);\n\n  const filteredApis = apis?.filter(api => \n    api.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    (api.description && api.description.toLowerCase().includes(searchTerm.toLowerCase()))\n  );\n\n  const handleDeleteConfirm = () => {\n    if (apiToDelete) {\n      deleteApi.mutate(apiToDelete.id);\n      setApiToDelete(null);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    }).format(date);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-500';\n      case 'inactive':\n        return 'bg-gray-500';\n      case 'deprecated':\n        return 'bg-amber-500';\n      default:\n        return 'bg-blue-500';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {Array.from({ length: 3 }).map((_, i) => (\n          <Card key={i}>\n            <CardHeader>\n              <Skeleton className=\"h-5 w-1/3\" />\n            </CardHeader>\n            <CardContent>\n              <Skeleton className=\"h-4 w-full\" />\n              <Skeleton className=\"h-4 w-2/3 mt-2\" />\n            </CardContent>\n            <CardFooter>\n              <Skeleton className=\"h-10 w-20\" />\n            </CardFooter>\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-center py-8\">\n        <h3 className=\"text-lg font-medium\">Error loading APIs</h3>\n        <p className=\"text-muted-foreground\">\n          There was a problem loading the API list. Please try again.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <Input\n          placeholder=\"Search APIs...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"max-w-sm\"\n        />\n      </div>\n\n      {filteredApis && filteredApis.length > 0 ? (\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {filteredApis.map((api) => (\n            <Card key={api.id} className=\"overflow-hidden\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex justify-between items-start\">\n                  <CardTitle className=\"text-lg font-medium\">{api.name}</CardTitle>\n                  <div className=\"flex items-center space-x-1\">\n                    <span className={`rounded-full h-2 w-2 ${getStatusColor(api.status)}`} />\n                    <span className=\"text-xs capitalize\">{api.status}</span>\n                  </div>\n                </div>\n                {api.version && (\n                  <Badge variant=\"outline\" className=\"mt-1\">v{api.version}</Badge>\n                )}\n              </CardHeader>\n              <CardContent className=\"pb-3\">\n                <p className=\"text-sm text-muted-foreground line-clamp-2\">\n                  {api.description || \"No description provided\"}\n                </p>\n                {api.endpoint_url && (\n                  <div className=\"mt-3 flex items-center text-sm\">\n                    <ExternalLink className=\"h-3 w-3 mr-1\" />\n                    <a \n                      href={api.endpoint_url} \n                      target=\"_blank\" \n                      rel=\"noopener noreferrer\"\n                      className=\"text-blue-500 hover:underline truncate\"\n                    >\n                      {api.endpoint_url}\n                    </a>\n                  </div>\n                )}\n                <div className=\"mt-4 flex flex-wrap gap-1\">\n                  {api.tags && api.tags.map((tag, i) => (\n                    <Badge key={i} variant=\"secondary\" className=\"text-xs\">\n                      {tag}\n                    </Badge>\n                  ))}\n                </div>\n                <p className=\"mt-4 text-xs text-muted-foreground\">\n                  Created: {formatDate(api.created_at)}\n                </p>\n              </CardContent>\n              <CardFooter className=\"flex justify-between pt-0\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => navigate(`/applications/${applicationId}/apis/${api.id}`)}\n                >\n                  <Edit className=\"h-4 w-4 mr-1\" /> Edit\n                </Button>\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => setApiToDelete(api)}\n                >\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-12 border rounded-lg bg-muted/10\">\n          <h3 className=\"text-lg font-medium\">No APIs found</h3>\n          <p className=\"text-muted-foreground mb-4\">\n            {searchTerm ? \"No APIs match your search criteria.\" : \"This application doesn't have any APIs yet.\"}\n          </p>\n          <Button onClick={() => navigate(`/applications/${applicationId}/apis/new`)}>\n            Create your first API\n          </Button>\n        </div>\n      )}\n\n      <AlertDialog open={!!apiToDelete} onOpenChange={(open) => !open && setApiToDelete(null)}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Are you sure you want to delete this API?</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action cannot be undone. This will permanently delete the API\n              \"{apiToDelete?.name}\" and all its associated data.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={handleDeleteConfirm}>Delete</AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { toast } from 'sonner';\nimport { Application } from '@/types/application';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\n\ninterface ApplicationSettingsProps {\n  application: Application;\n}\n\nexport function useUpdateApplication() {\n  return {\n    mutate: async (application: Application) => {\n      // This is a placeholder hook that would normally be in useApplications.tsx\n      return Promise.resolve();\n    }\n  };\n}\n\nexport function useDeleteApplication() {\n  return {\n    mutate: async (id: string) => {\n      // This is a placeholder hook that would normally be in useApplications.tsx\n      return Promise.resolve();\n    }\n  };\n}\n\nexport default function ApplicationSettings({ application }: ApplicationSettingsProps) {\n  const navigate = useNavigate();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const updateApplication = useUpdateApplication();\n  const deleteApplication = useDeleteApplication();\n  const [formValues, setFormValues] = useState({\n    name: application.name,\n    description: application.description || '',\n    category: application.category || '',\n    status: application.status,\n  });\n\n  const form = useForm({\n    defaultValues: formValues\n  });\n\n  useEffect(() => {\n    setFormValues({\n      name: application.name,\n      description: application.description || '',\n      category: application.category || '',\n      status: application.status,\n    });\n    form.reset({\n      name: application.name,\n      description: application.description || '',\n      category: application.category || '',\n      status: application.status,\n    });\n  }, [application, form]);\n\n  const onSubmit = async (data: any) => {\n    setIsSubmitting(true);\n    try {\n      await updateApplication.mutate({\n        ...application,\n        ...data,\n      });\n      toast.success('Application updated successfully');\n    } catch (error) {\n      console.error('Error updating application:', error);\n      toast.error('Failed to update application');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await deleteApplication.mutate(application.id);\n      toast.success('Application deleted successfully');\n      navigate('/applications');\n    } catch (error) {\n      console.error('Error deleting application:', error);\n      toast.error('Failed to delete application');\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Application Name</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description</FormLabel>\n                <FormControl>\n                  <Textarea {...field} />\n                </FormControl>\n                <FormDescription>\n                  A brief description of what this application does.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"category\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Category</FormLabel>\n                <FormControl>\n                  <Input {...field} />\n                </FormControl>\n                <FormDescription>\n                  The category this application belongs to.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"status\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Status</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                  value={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select a status\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"active\">Active</SelectItem>\n                    <SelectItem value=\"development\">Development</SelectItem>\n                    <SelectItem value=\"maintenance\">Maintenance</SelectItem>\n                    <SelectItem value=\"archived\">Archived</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormDescription>\n                  The current status of this application.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <div className=\"flex justify-end\">\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </div>\n        </form>\n      </Form>\n\n      <div className=\"border-t pt-6\">\n        <h3 className=\"text-lg font-medium text-destructive\">Danger Zone</h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          Once you delete an application, there is no going back. Please be certain.\n        </p>\n        \n        <AlertDialog>\n          <AlertDialogTrigger asChild>\n            <Button variant=\"destructive\">Delete Application</Button>\n          </AlertDialogTrigger>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n              <AlertDialogDescription>\n                This action cannot be undone. This will permanently delete the\n                application \"{application.name}\" and all of its associated data.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\n              <AlertDialogAction onClick={handleDelete}>\n                Yes, delete application\n              </AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","import React from 'react';\nimport { useLocation, Link } from 'react-router';\nimport { \n  Breadcrumb, \n  BreadcrumbList, \n  BreadcrumbItem, \n  BreadcrumbLink, \n  BreadcrumbSeparator,\n  BreadcrumbPage\n} from '@/components/ui/breadcrumb';\nimport { Home } from 'lucide-react';\n\ninterface BreadcrumbItem {\n  label: string;\n  path?: string;\n  icon?: React.ReactNode;\n}\n\ninterface BreadcrumbNavProps {\n  items: BreadcrumbItem[];\n}\n\nexport function BreadcrumbNav({ items }: BreadcrumbNavProps) {\n  return (\n    <Breadcrumb className=\"mb-4\">\n      <BreadcrumbList>\n        <BreadcrumbItem>\n          <BreadcrumbLink asChild>\n            <Link to=\"/\">\n              {/* <Home className=\"h-4 w-4 mr-1\" /> */}\n              Home\n            </Link>\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n        <BreadcrumbSeparator />\n        \n        {items.map((item, index) => {\n          const isLastItem = index === items.length - 1;\n          \n          return (\n            <React.Fragment key={`breadcrumb-item-${index}`}>\n              {isLastItem ? (\n                <BreadcrumbItem>\n                  <BreadcrumbPage>\n                    {item.icon && <span className=\"mr-1\">{item.icon}</span>}\n                    {item.label}\n                  </BreadcrumbPage>\n                </BreadcrumbItem>\n              ) : (\n                <>\n                  <BreadcrumbItem>\n                    <BreadcrumbLink asChild>\n                      <Link to={item.path || '#'}>\n                        {item.icon && <span className=\"mr-1\">{item.icon}</span>}\n                        {item.label}\n                      </Link>\n                    </BreadcrumbLink>\n                  </BreadcrumbItem>\n                  <BreadcrumbSeparator />\n                </>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </BreadcrumbList>\n    </Breadcrumb>\n  );\n}\n\nexport default BreadcrumbNav;\n","\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft, PlusCircle, Settings, Code } from 'lucide-react';\nimport { useApplication } from '@/hooks/useApplications';\nimport APIsList from '@/components/applications/APIsList';\nimport ApplicationSettings from '@/components/applications/ApplicationSettings';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/components/ui/use-toast';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useQuery } from '@tanstack/react-query';\nimport { Application } from '@/types/application';\nimport { BreadcrumbNav } from '@/components/layout/BreadcrumbNav';\n\nexport default function ApplicationDetailPage() {\n  const { id, orgSlug, appSlug } = useParams<{ id?: string; orgSlug?: string; appSlug?: string }>();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState('apis');\n  \n  // Function to get application by slug\n  const getApplicationBySlug = async () => {\n    console.log('Fetching application by slug:', orgSlug, appSlug);\n    if (!orgSlug || !appSlug) return null;\n    \n    // First, get the organization ID from the slug\n    const { data: org, error: orgError } = await supabase\n      .from('organizations')\n      .select('id')\n      .eq('slug', orgSlug)\n      .single();\n      \n    if (orgError) throw orgError;\n    \n    // Then get the application using org ID and app slug\n    const { data: app, error: appError } = await supabase\n      .from('applications')\n      .select('*')\n      .eq('organization_id', org.id)\n      .eq('slug', appSlug)\n      .single();\n      \n    if (appError) throw appError;\n    \n    return app as Application;\n  };\n  \n  // Query by ID if id is provided\n  const { data: applicationById, isLoading: isLoadingById, error: errorById } = useApplication(id);\n  \n  // Query by slug if orgSlug and appSlug are provided\n  const { data: applicationBySlug, isLoading: isLoadingBySlug, error: errorBySlug } = useQuery({\n    queryKey: ['application', orgSlug, appSlug],\n    queryFn: getApplicationBySlug,\n    enabled: !id && !!orgSlug && !!appSlug,\n  });\n  \n  // Combine the results\n  const application = applicationById || applicationBySlug;\n  const isLoading = isLoadingById || isLoadingBySlug;\n  const error = errorById || errorBySlug;\n\n  useEffect(() => {\n    if (error) {\n      toast({\n        title: 'Error loading application',\n        description: error.message,\n        variant: 'destructive',\n      });\n      navigate('/apps');\n    }\n  }, [error, navigate, toast]);\n\n  // Determine the correct URL format for the application\n  const getApplicationUrl = () => {\n    if (orgSlug && appSlug) {\n      return `/apps/${orgSlug}@${appSlug}`;\n    }\n    if (application?.organization_slug && application?.slug) {\n      return `/apps/${application.organization_slug}@${application.slug}`;\n    }\n    return '/apps';\n  };\n\n  const breadcrumbItems = [\n    { label: 'Applications', path: '/applications' },\n    { label: application?.name || 'Application Details', path: getApplicationUrl() }\n  ];\n\n  return (\n    <div className=\"container py-6 space-y-6\">\n      <BreadcrumbNav items={breadcrumbItems} />\n      \n      <Button variant=\"ghost\" asChild>\n        <div onClick={() => navigate('/apps')}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Applications\n        </div>\n      </Button>\n      \n      {isLoading ? (\n        <div className=\"space-y-4\">\n          <Skeleton className=\"h-8 w-1/3\" />\n          <Skeleton className=\"h-4 w-1/2\" />\n          <Skeleton className=\"h-[400px] w-full\" />\n        </div>\n      ) : application ? (\n        <>\n          <div>\n            <h1 className=\"text-3xl font-bold tracking-tight\">{application.name}</h1>\n            <p className=\"text-muted-foreground\">{application.description}</p>\n          </div>\n          \n          <Tabs defaultValue={activeTab} onValueChange={setActiveTab}>\n            <TabsList className=\"grid grid-cols-2 w-full max-w-md\">\n              <TabsTrigger value=\"apis\">\n                <Code className=\"h-4 w-4 mr-2\" /> APIs\n              </TabsTrigger>\n              <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"apis\" className=\"space-y-4 mt-4\">\n              <div className=\"flex justify-between items-center\">\n                <h2 className=\"text-xl font-bold tracking-tight bg-gradient-to-r from-primary to-accent-500 bg-clip-text text-transparent\">Application APIs</h2>\n                <Button onClick={() => {\n                  if (orgSlug && appSlug) {\n                    navigate(`/apps/${orgSlug}@${appSlug}/apis/new`);\n                  } else if (id) {\n                    navigate(`/applications/${id}/apis/new`);\n                  }\n                }}>\n                  <PlusCircle className=\"h-4 w-4 mr-2\" /> New API\n                </Button>\n              </div>\n              <APIsList applicationId={application.id} />\n            </TabsContent>\n            \n            <TabsContent value=\"settings\" className=\"space-y-4 mt-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Application Settings</CardTitle>\n                  <CardDescription>\n                    Manage your application settings and preferences\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <ApplicationSettings application={application} />\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </>\n      ) : (\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-xl font-semibold\">Application not found</h2>\n          <p className=\"text-muted-foreground\">\n            The application you're looking for doesn't exist or you don't have access to it.\n          </p>\n          <Button className=\"mt-4\" onClick={() => navigate('/apps')}>\n            Go to Applications\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["fetchContent","shouldFetchContent","data","contentToSave","contentFormat","content","format","fetchContentFromUri","error","useApplicationApis","applicationId","session","useAuth","queryClient","useQueryClient","isAuthenticated","apis","isLoading","useQuery","supabase","createApi","useMutation","apiData","restData","createdApi","err","toast","updateApi","id","updateData","deleteApi","APIsList","navigate","useNavigate","searchTerm","setSearchTerm","useState","apiToDelete","setApiToDelete","filteredApis","api","handleDeleteConfirm","formatDate","dateString","date","getStatusColor","status","_","i","Card","jsx","CardHeader","Skeleton","CardContent","CardFooter","jsxs","Input","e","CardTitle","Badge","ExternalLink","tag","Button","Edit","Trash2","AlertDialog","open","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","useUpdateApplication","application","useDeleteApplication","ApplicationSettings","isSubmitting","setIsSubmitting","updateApplication","deleteApplication","formValues","setFormValues","form","useForm","useEffect","onSubmit","handleDelete","Form","FormField","field","FormItem","FormLabel","FormControl","FormMessage","Textarea","FormDescription","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","AlertDialogTrigger","Breadcrumb","React.forwardRef","props","ref","BreadcrumbList","className","cn","BreadcrumbItem","BreadcrumbLink","asChild","Comp","Slot","BreadcrumbPage","BreadcrumbSeparator","children","ChevronRight","BreadcrumbNav","items","Link","item","index","isLastItem","React","Fragment","ApplicationDetailPage","orgSlug","appSlug","useParams","useToast","activeTab","setActiveTab","getApplicationBySlug","org","orgError","app","appError","applicationById","isLoadingById","errorById","useApplication","applicationBySlug","isLoadingBySlug","errorBySlug","getApplicationUrl","breadcrumbItems","ArrowLeft","Tabs","TabsList","TabsTrigger","Code","TabsContent","PlusCircle","CardDescription"],"mappings":"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"}