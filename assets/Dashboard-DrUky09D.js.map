{"version":3,"file":"Dashboard-DrUky09D.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-down-right.js","../../node_modules/lucide-react/dist/esm/icons/arrow-up-right.js","../../node_modules/lucide-react/dist/esm/icons/minus.js","../../src/hooks/useDashboardMetrics.ts","../../src/components/dashboard/MetricCard.tsx","../../src/components/dashboard/DashboardMetrics.tsx","../../src/components/dashboard/ProjectsList.tsx","../../src/components/dashboard/ActivityList.tsx","../../src/pages/Dashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowDownRight = createLucideIcon(\"ArrowDownRight\", [\n  [\"path\", { d: \"m7 7 10 10\", key: \"1fmybs\" }],\n  [\"path\", { d: \"M17 7v10H7\", key: \"6fjiku\" }]\n]);\n\nexport { ArrowDownRight as default };\n//# sourceMappingURL=arrow-down-right.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowUpRight = createLucideIcon(\"ArrowUpRight\", [\n  [\"path\", { d: \"M7 7h10v10\", key: \"1tivn9\" }],\n  [\"path\", { d: \"M7 17 17 7\", key: \"1vkiza\" }]\n]);\n\nexport { ArrowUpRight as default };\n//# sourceMappingURL=arrow-up-right.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Minus = createLucideIcon(\"Minus\", [[\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }]]);\n\nexport { Minus as default };\n//# sourceMappingURL=minus.js.map\n","\nimport { useQuery } from '@tanstack/react-query';\nimport { supabase } from '@/integrations/supabase/client';\n\ninterface MetricSummary {\n  count: number;\n  trend: string;\n  trendUp: boolean | null;\n}\n\nexport interface DashboardMetrics {\n  projects: MetricSummary;\n  applications: MetricSummary;\n  servers: MetricSummary;\n  aiTools: MetricSummary;\n}\n\n// Helper to format date ranges for Supabase queries\nconst getDateRanges = () => {\n  const now = new Date();\n  const currentMonth = now.getMonth();\n  const currentYear = now.getFullYear();\n  \n  // Current month range (start to now)\n  const currentMonthStart = new Date(currentYear, currentMonth, 1).toISOString();\n  const currentMonthEnd = now.toISOString();\n  \n  // Previous month range\n  const prevMonthStart = new Date(currentYear, currentMonth - 1, 1).toISOString();\n  const prevMonthEnd = new Date(currentYear, currentMonth, 0, 23, 59, 59, 999).toISOString();\n  \n  return { currentMonthStart, currentMonthEnd, prevMonthStart, prevMonthEnd };\n};\n\nexport function useDashboardMetrics() {\n  return useQuery({\n    queryKey: ['dashboard', 'metrics'],\n    queryFn: async (): Promise<DashboardMetrics> => {\n      try {\n        const { currentMonthStart, currentMonthEnd, prevMonthStart, prevMonthEnd } = getDateRanges();\n        \n        // Current month metrics\n        const { count: projectsCount, error: projectsError } = await supabase\n          .from('projects')\n          .select('*', { count: 'exact', head: true });\n          \n        // Previous month metrics\n        const { count: prevProjectsCount, error: prevProjectsError } = await supabase\n          .from('projects')\n          .select('*', { count: 'exact', head: true })\n          .lt('created_at', prevMonthEnd);\n          \n        if (projectsError) throw projectsError;\n        if (prevProjectsError) throw prevProjectsError;\n\n        // Applications metrics\n        const { count: applicationsCount, error: applicationsError } = await supabase\n          .from('applications')\n          .select('*', { count: 'exact', head: true });\n          \n        const { count: prevApplicationsCount, error: prevApplicationsError } = await supabase\n          .from('applications')\n          .select('*', { count: 'exact', head: true })\n          .lt('created_at', prevMonthEnd);\n          \n        if (applicationsError) throw applicationsError;\n        if (prevApplicationsError) throw prevApplicationsError;\n\n        // Servers metrics\n        const { count: serversCount, error: serversError } = await supabase\n          .from('servers')\n          .select('*', { count: 'exact', head: true });\n          \n        const { count: prevServersCount, error: prevServersError } = await supabase\n          .from('servers')\n          .select('*', { count: 'exact', head: true })\n          .lt('created_at', prevMonthEnd);\n          \n        if (serversError) throw serversError;\n        if (prevServersError) throw prevServersError;\n\n        // AI tools metrics\n        const { count: aiToolsCount, error: aiToolsError } = await supabase\n          .from('ai_tools')\n          .select('*', { count: 'exact', head: true });\n          \n        const { count: prevAiToolsCount, error: prevAiToolsError } = await supabase\n          .from('ai_tools')\n          .select('*', { count: 'exact', head: true })\n          .lt('created_at', prevMonthEnd);\n          \n        if (aiToolsError) throw aiToolsError;\n        if (prevAiToolsError) throw prevAiToolsError;\n\n        // Calculate real trends\n        const calculateTrend = (current: number, previous: number): { trend: string; trendUp: boolean | null } => {\n          if (current === 0) return { trend: 'No data yet', trendUp: null };\n          \n          if (previous === 0) {\n            if (current > 0) return { trend: 'New this month', trendUp: true };\n            return { trend: 'No change', trendUp: null };\n          }\n          \n          const diff = current - previous;\n          if (diff === 0) return { trend: 'No change', trendUp: null };\n          \n          const percentage = Math.round((diff / previous) * 100);\n          \n          if (diff > 0) {\n            return { \n              trend: `+${diff} (${percentage}%) this month`, \n              trendUp: true \n            };\n          } else {\n            return { \n              trend: `${diff} (${Math.abs(percentage)}%) this month`, \n              trendUp: false \n            };\n          }\n        };\n\n        // New items this month calculation\n        const newProjectsThisMonth = projectsCount - prevProjectsCount;\n        const newAppsThisMonth = applicationsCount - prevApplicationsCount;\n        const newServersThisMonth = serversCount - prevServersCount;\n        const newToolsThisMonth = aiToolsCount - prevAiToolsCount;\n\n        return {\n          projects: { \n            count: projectsCount || 0, \n            ...calculateTrend(projectsCount || 0, prevProjectsCount || 0) \n          },\n          applications: { \n            count: applicationsCount || 0, \n            ...calculateTrend(applicationsCount || 0, prevApplicationsCount || 0) \n          },\n          servers: { \n            count: serversCount || 0, \n            ...calculateTrend(serversCount || 0, prevServersCount || 0) \n          },\n          aiTools: { \n            count: aiToolsCount || 0, \n            ...calculateTrend(aiToolsCount || 0, prevAiToolsCount || 0) \n          }\n        };\n      } catch (error) {\n        console.error('Error fetching dashboard metrics:', error);\n        throw error;\n      }\n    },\n    // Refresh every 5 minutes\n    refetchInterval: 5 * 60 * 1000,\n  });\n}\n","\nimport React from 'react';\nimport { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card';\nimport { Link } from 'react-router';\nimport { ArrowUpRight, ArrowDownRight, Minus } from 'lucide-react';\n\ninterface MetricCardProps {\n  title: string;\n  value: string;\n  description: string;\n  icon: React.ElementType;\n  trend: string;\n  trendUp: boolean | null;\n}\n\nexport function MetricCard({ title, value, description, icon: Icon, trend, trendUp }: MetricCardProps) {\n  return (\n    <Card className=\"overflow-hidden bg-gradient-to-br from-card to-background/80 backdrop-blur-sm border-opacity-40 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1\">\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        <div className=\"h-8 w-8 rounded-full bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center shadow-sm\">\n          <Icon className=\"h-4 w-4 text-primary\" />\n        </div>\n      </CardHeader>\n      <CardContent>\n        <Link to={`/${title.toLowerCase()}`} className=\"text-sm font-medium text-muted-foreground hover:text-primary transition-colors duration-200\">\n          <div className=\"text-2xl font-bold bg-gradient-to-r from-primary to-accent-500 bg-clip-text text-transparent\">{value}</div>\n          <p className=\"text-xs text-muted-foreground\">{description}</p>\n          {trend && (\n            <div className={`mt-2 flex items-center gap-1 text-xs ${\n              trendUp === true ? 'text-green-500' :\n              trendUp === false ? 'text-red-500' : 'text-muted-foreground'\n            }`}>\n              {trendUp === true && <ArrowUpRight className=\"h-3 w-3\" />}\n              {trendUp === false && <ArrowDownRight className=\"h-3 w-3\" />}\n              {trendUp === null && <Minus className=\"h-3 w-3\" />}\n              <span>{trend}</span>\n            </div>\n          )}\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","\nimport React from 'react';\nimport { Briefcase, AppWindow, Server, Wrench } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { MetricCard } from './MetricCard';\nimport { DashboardMetrics } from '@/hooks/useDashboardMetrics';\n\n// Animation variants for staggered children animations\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, y: 20 },\n  show: { \n    opacity: 1, \n    y: 0,\n    transition: { \n      type: \"spring\", \n      stiffness: 300, \n      damping: 24 \n    } \n  }\n};\n\ninterface DashboardMetricsGridProps {\n  metrics: DashboardMetrics;\n}\n\nexport function DashboardMetricsGrid({ metrics }: DashboardMetricsGridProps) {\n  return (\n    <motion.div \n      className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      animate=\"show\"\n    >\n      <motion.div variants={itemVariants}>\n        <MetricCard\n          title=\"Projects\"\n          value={metrics.projects.count.toString()}\n          description=\"Total projects\"\n          icon={Briefcase}\n          trend={metrics.projects.trend}\n          trendUp={metrics.projects.trendUp}\n        />\n      </motion.div>\n      <motion.div variants={itemVariants}>\n        <MetricCard\n          title=\"Applications\"\n          value={metrics.applications.count.toString()}\n          description=\"Deployed applications\"\n          icon={AppWindow}\n          trend={metrics.applications.trend}\n          trendUp={metrics.applications.trendUp}\n        />\n      </motion.div>\n      <motion.div variants={itemVariants}>\n        <MetricCard\n          title=\"Servers\"\n          value={metrics.servers.count.toString()}\n          description=\"Active servers\"\n          icon={Server}\n          trend={metrics.servers.trend}\n          trendUp={metrics.servers.trendUp}\n        />\n      </motion.div>\n      <motion.div variants={itemVariants}>\n        <MetricCard\n          title=\"Tools\"\n          value={metrics.aiTools.count.toString()}\n          description=\"Total AI tools\"\n          icon={Wrench}\n          trend={metrics.aiTools.trend}\n          trendUp={metrics.aiTools.trendUp}\n        />\n      </motion.div>\n    </motion.div>\n  );\n}\n","\nimport React from 'react';\nimport { Card, CardHeader, CardContent, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Link } from 'react-router';\nimport { ArrowUpRight, Briefcase } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface ProjectData {\n  id: string;\n  name: string;\n  slug?: string;\n  tools_count: number;\n  servers_count: number;\n  status: string;\n}\n\ninterface ProjectsListProps {\n  projects: ProjectData[];\n}\n\nexport function ProjectsList({ projects }: ProjectsListProps) {\n  return (\n    <Card className=\"h-full bg-gradient-to-br from-card to-background/80 backdrop-blur-sm border-opacity-40 shadow-lg\">\n      <CardHeader>\n        <CardTitle>Recent Projects</CardTitle>\n        <CardDescription>\n          Your recently updated projects\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {projects.length > 0 ? projects.map((project, index) => (\n            <motion.div \n              key={project.id} \n              className=\"flex items-center justify-between space-x-4 p-2 hover:bg-background/50 rounded-md transition-all duration-300\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 * index, duration: 0.3 }}\n            >\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"h-9 w-9 rounded-full bg-gradient-to-br from-primary/20 to-accent/20 flex items-center justify-center shadow-sm\">\n                  <Briefcase className=\"h-5 w-5 text-primary\" />\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium leading-none\">{project.name}</p>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {project.tools_count} tools · {project.servers_count} servers\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center\">\n                <Badge variant=\"outline\" className={`mr-2 ${\n                  project.status === 'Active' ? 'bg-green-100 text-green-800 border-green-300' : \n                  project.status === 'Development' ? 'bg-blue-100 text-blue-800 border-blue-300' : \n                  'bg-amber-100 text-amber-800 border-amber-300'\n                }`}>\n                  {project.status}\n                </Badge>\n                <Button variant=\"ghost\" size=\"icon\" asChild className=\"hover:bg-primary/10 transition-colors duration-300\">\n                  <Link to={`/projects/${project.slug ? project.slug : project.id}`}>\n                    <ArrowUpRight className=\"h-4 w-4\" />\n                    <span className=\"sr-only\">View project</span>\n                  </Link>\n                </Button>\n              </div>\n            </motion.div>\n          )) : (\n            <div className=\"text-center py-8\">\n              <p className=\"text-muted-foreground\">No projects yet</p>\n              <Button variant=\"outline\" className=\"mt-2\" asChild>\n                <Link to=\"/projects/new\">Create your first project</Link>\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","\nimport React from 'react';\nimport { Card, CardHeader, CardContent, CardTitle, CardDescription } from '@/components/ui/card';\nimport { motion } from 'framer-motion';\n\ninterface ActivityData {\n  icon: React.ElementType;\n  description: string;\n  time: string;\n}\n\ninterface ActivityListProps {\n  activities: ActivityData[];\n}\n\nexport function ActivityList({ activities }: ActivityListProps) {\n  return (\n    <Card className=\"h-full bg-gradient-to-br from-card to-background/80 backdrop-blur-sm border-opacity-40 shadow-lg\">\n      <CardHeader>\n        <CardTitle>Recent Activity</CardTitle>\n        <CardDescription>\n          Latest actions in your workspace\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {activities.length > 0 ? activities.map((activity, index) => (\n            <motion.div \n              key={index} \n              className=\"flex items-start gap-4 p-2 hover:bg-background/50 rounded-md transition-all duration-300\"\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 * index, duration: 0.3 }}\n            >\n              <div className=\"mt-0.5 h-8 w-8 rounded-full bg-gradient-to-br from-secondary/30 to-background flex items-center justify-center shadow-sm\">\n                <activity.icon className=\"h-4 w-4 text-muted-foreground\" />\n              </div>\n              <div className=\"space-y-1\">\n                <p className=\"text-sm\">{activity.description}</p>\n                <p className=\"text-xs text-muted-foreground\">{activity.time}</p>\n              </div>\n            </motion.div>\n          )) : (\n            <p className=\"text-center py-8 text-muted-foreground\">No recent activity</p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","\nimport React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Link } from 'react-router';\nimport { Button } from '@/components/ui/button';\nimport { Shield, Users, Wrench, Megaphone, AppWindow, Server, Briefcase } from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { motion } from 'framer-motion';\nimport { useDashboardMetrics } from '@/hooks/useDashboardMetrics';\nimport { useAuth } from '@/hooks/useAuth';\nimport { supabase } from '@/integrations/supabase/client';\nimport { DashboardMetricsGrid } from '@/components/dashboard/DashboardMetrics';\nimport { ProjectsList } from '@/components/dashboard/ProjectsList';\nimport { ActivityList } from '@/components/dashboard/ActivityList';\n\ninterface ProjectData {\n  id: string;\n  name: string;\n  tools_count: number;\n  servers_count: number;\n  status: string;\n}\n\ninterface ActivityData {\n  icon: React.ElementType;\n  description: string;\n  time: string;\n}\n\ninterface NotificationData {\n  type?: string;\n  message: string;\n  created_at: string;\n}\n\nexport function Dashboard() {\n  const { session } = useAuth();\n  const isAuthenticated = !!session.user;\n\n  // Fetch metrics from Supabase\n  const { data: metricsData, isLoading: metricsLoading } = useDashboardMetrics();\n\n  const { data: projectsData, isLoading: projectsLoading } = useQuery({\n    queryKey: ['dashboard', 'projects'],\n    queryFn: async () => {\n      if (!isAuthenticated) return [];\n\n      const { data, error } = await supabase\n        .from('projects')\n        .select('id, name, slug, tools_count, servers_count, status')\n        .order('updated_at', { ascending: false })\n        .limit(4);\n\n      if (error) {\n        console.error('Error fetching recent projects:', error);\n        throw error;\n      }\n\n      return data || [];\n    },\n    enabled: isAuthenticated,\n  });\n\n  const { data: activityData, isLoading: activityLoading } = useQuery({\n    queryKey: ['dashboard', 'activity'],\n    queryFn: async () => {\n      if (!isAuthenticated) return [];\n\n      // In a real app, we would fetch actual activity from a dedicated table\n      // For now, we'll use mock data\n      return [\n        {\n          icon: Wrench,\n          description: 'New AI Tool \"Text Summarizer\" was created',\n          time: '2 hours ago',\n        },\n        {\n          icon: Server,\n          description: 'Server \"NLP-Processor-01\" was restarted',\n          time: '4 hours ago',\n        },\n        {\n          icon: Users,\n          description: 'User \"Alex Kim\" was added to \"Data Analysis Pipeline\" project',\n          time: '6 hours ago',\n        },\n        {\n          icon: AppWindow,\n          description: 'Application \"Customer Portal\" deployed to production',\n          time: '1 day ago',\n        },\n      ];\n    },\n    enabled: isAuthenticated,\n  });\n\n  // Fallback to mock data if real data isn't available yet\n  const mockStats = {\n    projects: { count: 0, trend: 'No data yet', trendUp: null },\n    applications: { count: 0, trend: 'No data yet', trendUp: null },\n    servers: { count: 0, trend: 'No data yet', trendUp: null },\n    aiTools: { count: 0, trend: 'No data yet', trendUp: null },\n  };\n\n  const stats = metricsLoading || !metricsData ? mockStats : metricsData;\n  const projects = projectsLoading || !projectsData ? [] : projectsData;\n  const activity = activityLoading || !activityData ? [] : activityData;\n\n  const transformNotificationToActivity = (notification: NotificationData): ActivityData => {\n    const getIcon = () => {\n      const type = notification.type || 'info';\n      switch (type) {\n        case 'project': return Briefcase;\n        case 'application': return AppWindow;\n        case 'server': return Server;\n        case 'user': return Users;\n        default: return Megaphone;\n      }\n    };\n\n    return {\n      icon: getIcon(),\n      description: notification.message,\n      time: new Date(notification.created_at).toLocaleDateString()\n    };\n  };\n\n  return (\n    <motion.div\n      className=\"space-y-8\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <div className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.2, duration: 0.5 }}\n        >\n          <h2 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-accent-500 bg-clip-text text-transparent\">Dashboard</h2>\n          <p className=\"text-muted-foreground\">\n            Welcome to your AI Tools Hub dashboard\n          </p>\n        </motion.div>\n        <motion.div\n          className=\"flex items-center gap-2\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.3, duration: 0.5 }}\n        >\n          <Button \n            asChild\n                    className=\"w-full sm:w-auto bg-gradient-to-r from-white to-white/90 text-primary hover:from-white/90 hover:to-white/70 shadow-lg hover:shadow-primary/25 transition-all duration-300 hover:translate-y-[-2px] font-medium\"\n          >\n            <Link to={isAuthenticated ? \"/projects/new\" : \"/login\"}>Create new project</Link>\n          </Button>\n        </motion.div>\n      </div>\n        {!isAuthenticated && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.4, duration: 0.5 }}\n          >\n            <Alert variant=\"default\" className=\"bg-gradient-to-r from-amber-50 to-amber-100 border-amber-200\">\n              <Shield className=\"h-4 w-4 text-amber-500\" />\n              <AlertDescription>\n                You are currently in limited access mode. Some features may be restricted.\n              </AlertDescription>\n            </Alert>\n          </motion.div>\n        )}\n\n      <DashboardMetricsGrid metrics={stats} />\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        <motion.div \n          className=\"col-span-2\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.5 }}\n        >\n          <ProjectsList projects={projects} />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.7, duration: 0.5 }}\n        >\n          <ActivityList activities={activity} />\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n}\n\nexport default Dashboard;\n"],"names":["ArrowDownRight","createLucideIcon","ArrowUpRight","Minus","getDateRanges","now","currentMonth","currentYear","currentMonthStart","currentMonthEnd","prevMonthStart","prevMonthEnd","useDashboardMetrics","useQuery","projectsCount","projectsError","supabase","prevProjectsCount","prevProjectsError","applicationsCount","applicationsError","prevApplicationsCount","prevApplicationsError","serversCount","serversError","prevServersCount","prevServersError","aiToolsCount","aiToolsError","prevAiToolsCount","prevAiToolsError","calculateTrend","current","previous","diff","percentage","newProjectsThisMonth","newAppsThisMonth","newServersThisMonth","newToolsThisMonth","error","MetricCard","title","value","description","Icon","trend","trendUp","jsxs","Card","CardHeader","jsx","CardTitle","CardContent","Link","containerVariants","itemVariants","DashboardMetricsGrid","metrics","motion","Briefcase","AppWindow","Server","Wrench","ProjectsList","projects","CardDescription","project","index","Badge","Button","ActivityList","activities","activity","Dashboard","session","useAuth","isAuthenticated","metricsData","metricsLoading","projectsData","projectsLoading","data","activityData","activityLoading","Users","stats","Alert","Shield","AlertDescription"],"mappings":"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","x_google_ignoreList":[0,1,2]}