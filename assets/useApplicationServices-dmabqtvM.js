import{u as p,p as g,q as u}from"./react-vendor-pyaEZ1K4.js";import{u as d,b as S,s as o}from"./index-CcMg1OWm.js";function E(i,n){const{session:t}=d(),{toast:s}=S(),a=g(),y=!!(t!=null&&t.user),{data:v,isLoading:f,error:m}=p({queryKey:["application-services",i,n],queryFn:async()=>{if(!i&&!n)return[];let e=o.from("application_services").select("*");n?e=e.eq("api_id",n):i&&(e=e.eq("application_id",i));const{data:r,error:c}=await e.order("created_at",{ascending:!1});if(c)throw c;return r},enabled:!!(i||n)}),_=u({mutationFn:async e=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{data:r,error:c}=await o.from("application_services").insert({name:e.name,description:e.description,application_id:e.application_id,api_id:e.api_id,status:e.status||"active",service_type:e.service_type,tags:e.tags||[],method:e.method,path:e.path,summary:e.summary}).select().single();if(c)throw c;return r},onSuccess:(e,r)=>{r.application_id&&a.invalidateQueries({queryKey:["application-services",r.application_id]}),r.api_id&&a.invalidateQueries({queryKey:["application-services",i,r.api_id]}),a.invalidateQueries({queryKey:["application-services"]}),s({title:"Service created",description:"The service has been created successfully."})},onError:e=>{s({title:"Error creating service",description:e.message,variant:"destructive"})}}),h=u({mutationFn:async({id:e,...r})=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{data:c,error:l}=await o.from("application_services").update({name:r.name,description:r.description,status:r.status,service_type:r.service_type,api_id:r.api_id,tags:r.tags,method:r.method,path:r.path,summary:r.summary,updated_at:new Date().toISOString()}).eq("id",e).select().single();if(l)throw l;return c},onSuccess:e=>{e.application_id&&a.invalidateQueries({queryKey:["application-services",e.application_id]}),e.api_id&&a.invalidateQueries({queryKey:["application-services",i,e.api_id]}),a.invalidateQueries({queryKey:["application-services"]}),s({title:"Service updated",description:"The service has been updated successfully."})},onError:e=>{s({title:"Error updating service",description:e.message,variant:"destructive"})}}),q=u({mutationFn:async e=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{error:r}=await o.from("application_services").delete().eq("id",e);if(r)throw r;return e},onSuccess:(e,r)=>{i&&a.invalidateQueries({queryKey:["application-services",i]}),n&&a.invalidateQueries({queryKey:["application-services",i,n]}),a.invalidateQueries({queryKey:["application-services"]}),s({title:"Service deleted",description:"The service has been deleted successfully."})},onError:e=>{s({title:"Error deleting service",description:e.message,variant:"destructive"})}}),{data:w}=p({queryKey:["all-services"],queryFn:async()=>{const{data:e,error:r}=await o.from("application_services").select("*, application:application_id(name)").order("created_at",{ascending:!1});if(r)throw r;return e}});return{services:v,allServices:w,isLoading:f,error:m,isAuthenticated:y,createService:_,updateService:h,deleteService:q}}function A(i){const{session:n}=d();return p({queryKey:["application-service",i],queryFn:async()=>{if(!i)return null;const{data:t,error:s}=await o.from("application_services").select("*").eq("id",i).single();if(s)throw s;return t},enabled:!!i})}export{A as a,E as u};
