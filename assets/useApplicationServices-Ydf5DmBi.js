import{u as d,p as w,q as u}from"./react-vendor-TyuC8qxg.js";import{u as p,f as b,s as o}from"./index-D5uhiMQB.js";try{let i=typeof window<"u"?window:typeof global<"u"?global:typeof globalThis<"u"?globalThis:typeof self<"u"?self:{},s=new i.Error().stack;s&&(i._sentryDebugIds=i._sentryDebugIds||{},i._sentryDebugIds[s]="5e9b4a7b-5519-4826-b0cb-71ab74de881c",i._sentryDebugIdIdentifier="sentry-dbid-5e9b4a7b-5519-4826-b0cb-71ab74de881c")}catch{}function Q(i,s){const{session:t}=p(),{toast:n}=b(),a=w(),y=!!(t!=null&&t.user),{data:f,isLoading:v,error:_}=d({queryKey:["application-services",i,s],queryFn:async()=>{if(!i&&!s)return[];let e=o.from("application_services").select("*");s?e=e.eq("api_id",s):i&&(e=e.eq("application_id",i));const{data:r,error:c}=await e.order("created_at",{ascending:!1});if(c)throw c;return r},enabled:!!(i||s)}),m=u({mutationFn:async e=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{data:r,error:c}=await o.from("application_services").insert({name:e.name,description:e.description,application_id:e.application_id,api_id:e.api_id,status:e.status||"active",service_type:e.service_type,tags:e.tags||[],method:e.method,path:e.path,summary:e.summary}).select().single();if(c)throw c;return r},onSuccess:(e,r)=>{r.application_id&&a.invalidateQueries({queryKey:["application-services",r.application_id]}),r.api_id&&a.invalidateQueries({queryKey:["application-services",i,r.api_id]}),a.invalidateQueries({queryKey:["application-services"]}),n({title:"Service created",description:"The service has been created successfully."})},onError:e=>{n({title:"Error creating service",description:e.message,variant:"destructive"})}}),h=u({mutationFn:async({id:e,...r})=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{data:c,error:l}=await o.from("application_services").update({name:r.name,description:r.description,status:r.status,service_type:r.service_type,api_id:r.api_id,tags:r.tags,method:r.method,path:r.path,summary:r.summary,updated_at:new Date().toISOString()}).eq("id",e).select().single();if(l)throw l;return c},onSuccess:e=>{e.application_id&&a.invalidateQueries({queryKey:["application-services",e.application_id]}),e.api_id&&a.invalidateQueries({queryKey:["application-services",i,e.api_id]}),a.invalidateQueries({queryKey:["application-services"]}),n({title:"Service updated",description:"The service has been updated successfully."})},onError:e=>{n({title:"Error updating service",description:e.message,variant:"destructive"})}}),q=u({mutationFn:async e=>{if(!(t!=null&&t.user))throw new Error("Authentication required");const{error:r}=await o.from("application_services").delete().eq("id",e);if(r)throw r;return e},onSuccess:(e,r)=>{i&&a.invalidateQueries({queryKey:["application-services",i]}),s&&a.invalidateQueries({queryKey:["application-services",i,s]}),a.invalidateQueries({queryKey:["application-services"]}),n({title:"Service deleted",description:"The service has been deleted successfully."})},onError:e=>{n({title:"Error deleting service",description:e.message,variant:"destructive"})}}),{data:g}=d({queryKey:["all-services"],queryFn:async()=>{const{data:e,error:r}=await o.from("application_services").select("*, application:application_id(name)").order("created_at",{ascending:!1});if(r)throw r;return e}});return{services:f,allServices:g,isLoading:v,error:_,isAuthenticated:y,createService:m,updateService:h,deleteService:q}}function E(i){const{session:s}=p();return d({queryKey:["application-service",i],queryFn:async()=>{if(!i)return null;const{data:t,error:n}=await o.from("application_services").select("*").eq("id",i).single();if(n)throw n;return t},enabled:!!i})}export{E as a,Q as u};
//# sourceMappingURL=useApplicationServices-Ydf5DmBi.js.map
