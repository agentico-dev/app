{"version":3,"file":"ResourceTabs-ZgbyuqWI.js","sources":["../../src/components/detail/DetailPageLayout.tsx","../../src/components/detail/ResourceHeader.tsx","../../src/components/detail/ResourceInfoCards.tsx","../../src/components/detail/ResourceTabs.tsx"],"sourcesContent":["\nimport { ArrowLeft } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ReactNode } from 'react';\n\ninterface DetailPageLayoutProps {\n  isLoading: boolean;\n  resource: any | null;\n  resourceType: string;\n  onGoBack: () => void;\n  renderLoading?: () => ReactNode;\n  renderNotFound?: () => ReactNode;\n  renderResource: () => ReactNode;\n}\n\nexport function DetailPageLayout({\n  isLoading,\n  resource,\n  resourceType,\n  onGoBack,\n  renderLoading,\n  renderNotFound,\n  renderResource\n}: DetailPageLayoutProps) {\n  const defaultLoadingRenderer = () => (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-10 w-3/4\" />\n      <Skeleton className=\"h-6 w-1/2\" />\n      <Skeleton className=\"h-40 w-full\" />\n    </div>\n  );\n\n  const defaultNotFoundRenderer = () => (\n    <div className=\"text-center p-10\">\n      <h2 className=\"text-2xl font-bold mb-2\">{resourceType} Not Found</h2>\n      <p className=\"text-muted-foreground mb-4\">\n        The {resourceType.toLowerCase()} you're looking for does not exist or has been removed.\n      </p>\n      <Button onClick={onGoBack}>Return to {resourceType}s</Button>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 animate-fade-in\">\n      <Button variant=\"ghost\" onClick={onGoBack}>\n        <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to {resourceType}s\n      </Button>\n      \n      {isLoading ? (\n        renderLoading ? renderLoading() : defaultLoadingRenderer()\n      ) : resource ? (\n        renderResource()\n      ) : (\n        renderNotFound ? renderNotFound() : defaultNotFoundRenderer()\n      )}\n    </div>\n  );\n}\n","\nimport React from 'react';\nimport { Star } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useNavigate } from 'react-router';\nimport { \n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger\n} from '@/components/ui/alert-dialog';\nimport { \n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle, \n  DialogTrigger\n} from '@/components/ui/dialog';\nimport { toast } from 'sonner';\n\ninterface ResourceHeaderProps {\n  title: string;\n  description: string | null;\n  isFavorite?: boolean;\n  status?: string;\n  tags?: string[] | React.ReactNode[];\n  statusColorClass?: string;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  resourceId?: string;\n  resourceType?: 'Project' | 'Server';\n  resourceSlug?: string;\n}\n\nexport function ResourceHeader({\n  title,\n  description,\n  isFavorite = false,\n  status,\n  tags = [],\n  statusColorClass = '',\n  onEdit,\n  onDelete,\n  resourceId,\n  resourceType,\n  resourceSlug\n}: ResourceHeaderProps) {\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  const handleEdit = () => {\n    if (onEdit) {\n      onEdit();\n    } else if (resourceType && (resourceSlug || resourceId)) {\n      // Redirect to the appropriate edit page based on resourceType\n      // Prefer slug over ID when available\n      const resourceIdentifier = resourceSlug || resourceId;\n      switch (resourceType) {\n        case 'Project':\n          navigate(`/projects/${resourceIdentifier}/edit`);\n          break;\n        case 'Server':\n          navigate(`/servers/${resourceIdentifier}/edit`);\n          break;\n      }\n    }\n  };\n\n  const handleDelete = async () => {\n    if (onDelete) {\n      onDelete();\n    } else if (resourceType && resourceId) {\n      try {\n        // Different logic based on resourceType\n        switch (resourceType) {\n          case 'Project':\n            // Navigate back to projects list after deletion\n            toast.success('Project deleted successfully');\n            navigate('/projects');\n            break;\n          case 'Server':\n            // Navigate back to servers list after deletion\n            toast.success('Server deleted successfully');\n            navigate('/servers');\n            break;\n        }\n      } catch (error) {\n        console.error(`Error deleting ${resourceType}:`, error);\n        toast.error(`Failed to delete ${resourceType}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col md:flex-row justify-between gap-4\">\n      <div>\n        <div className=\"flex items-center gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight\">{title}</h1>\n          {isFavorite && <Star className=\"h-5 w-5 fill-yellow-400 text-yellow-400\" />}\n        </div>\n        <p className=\"text-muted-foreground mt-1\">{description || 'No description provided'}</p>\n        \n        {(status || tags.length > 0) && (\n          <div className=\"flex flex-wrap gap-2 my-3\">\n            {status && (\n              <Badge className={statusColorClass}>\n                {status}\n              </Badge>\n            )}\n            {tags.map((tag, index) => (\n              typeof tag === 'string' ? (\n                <Badge key={index} variant=\"outline\">{tag}</Badge>\n              ) : (\n                <React.Fragment key={index}>{tag}</React.Fragment>\n              )\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <div className=\"flex gap-2\">\n        <Button \n          variant=\"outline\" \n          onClick={handleEdit}\n        >\n          Edit\n        </Button>\n\n        <AlertDialog>\n          <AlertDialogTrigger asChild>\n            <Button variant=\"destructive\">Delete</Button>\n          </AlertDialogTrigger>\n          <AlertDialogContent>\n            <AlertDialogHeader>\n              <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n              <AlertDialogDescription>\n                This action cannot be undone. This will permanently delete the {resourceType?.toLowerCase() || 'resource'} \n                and all associated data.\n              </AlertDialogDescription>\n            </AlertDialogHeader>\n            <AlertDialogFooter>\n              <AlertDialogCancel>Cancel</AlertDialogCancel>\n              <AlertDialogAction onClick={handleDelete}>Delete</AlertDialogAction>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialog>\n      </div>\n    </div>\n  );\n}\n","\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ReactNode } from 'react';\n\nexport interface InfoCardItem {\n  icon: ReactNode;\n  label: string;\n  value: string | number | ReactNode;\n}\n\ninterface ResourceInfoCardProps {\n  title: string;\n  items: InfoCardItem[];\n}\n\nexport function ResourceInfoCard({ title, items }: ResourceInfoCardProps) {\n  return (\n    <Card>\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-2\">\n          {items.map((item, index) => (\n            <div key={index} className=\"flex justify-between items-center\">\n              <div className=\"flex items-center\">\n                {item.icon}\n                <span>{item.label}</span>\n              </div>\n              <span className=\"font-medium\">{item.value}</span>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\ninterface ResourceInfoCardsProps {\n  cards: {\n    title: string;\n    items: InfoCardItem[];\n  }[];\n}\n\nexport function ResourceInfoCards({ cards }: ResourceInfoCardsProps) {\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      {cards.map((card, index) => (\n        <ResourceInfoCard key={index} title={card.title} items={card.items} />\n      ))}\n    </div>\n  );\n}\n","\nimport { ReactNode } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\nexport interface TabItem {\n  value: string;\n  label: string;\n  content: ReactNode;\n  description?: string;\n}\n\ninterface ResourceTabsProps {\n  tabs: TabItem[];\n  defaultTab?: string;\n}\n\nexport function ResourceTabs({ tabs, defaultTab }: ResourceTabsProps) {\n  return (\n    <Tabs defaultValue={defaultTab || tabs[0]?.value}>\n      <TabsList>\n        {tabs.map(tab => (\n          <TabsTrigger key={tab.value} value={tab.value}>{tab.label}</TabsTrigger>\n        ))}\n      </TabsList>\n      \n      {tabs.map(tab => (\n        <TabsContent key={tab.value} value={tab.value} className=\"mt-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{tab.label}</CardTitle>\n              {tab.description && <CardDescription>{tab.description}</CardDescription>}\n            </CardHeader>\n            <CardContent>\n              {tab.content}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      ))}\n    </Tabs>\n  );\n}\n"],"names":["DetailPageLayout","isLoading","resource","resourceType","onGoBack","renderLoading","renderNotFound","renderResource","defaultLoadingRenderer","jsxs","jsx","Skeleton","defaultNotFoundRenderer","Button","ArrowLeft","ResourceHeader","title","description","isFavorite","status","tags","statusColorClass","onEdit","onDelete","resourceId","resourceSlug","navigate","useNavigate","handleEdit","resourceIdentifier","handleDelete","toast","error","Star","Badge","tag","index","React","AlertDialog","AlertDialogTrigger","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","ResourceInfoCard","items","Card","CardHeader","CardTitle","CardContent","item","ResourceInfoCards","cards","card","ResourceTabs","tabs","defaultTab","Tabs","_a","TabsList","tab","TabsTrigger","TabsContent","CardDescription"],"mappings":"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"}