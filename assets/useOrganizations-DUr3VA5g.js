import{f as d,k as y,u as l,b as m}from"./index-CcMg1OWm.js";import{u as g,p as _,q as p}from"./react-vendor-pyaEZ1K4.js";function w(){return g({queryKey:["organizations"],queryFn:async()=>{const{data:t,error:n}=await d("organizations").select("*").order("name");if(n)throw n;return t.map(e=>({id:e.id,name:e.name,slug:e.slug||"",description:e.description||"",logo_url:e.logo_url,created_at:e.created_at,updated_at:e.updated_at,is_global:!!e.is_global}))}})}function b(t){return g({queryKey:["userOrganizations",t],queryFn:async()=>{const n=await y();if(!t)return n?[{...n,role:"member"}]:[];const{data:a,error:e}=await d("organization_members").select(`
          role,
          organization_id
        `).eq("user_id",t);if(e)throw e;if(!a||a.length===0)return n?[{...n,role:"member"}]:[];const r=a.map(i=>i.organization_id),{data:s,error:o}=await d("organizations").select("*").in("id",r);if(o)throw o;let u=s.map(i=>{const c=a.find(z=>z.organization_id===i.id);return{id:i.id,name:i.name,slug:i.slug||"",description:i.description||"",logo_url:i.logo_url,created_at:i.created_at,updated_at:i.updated_at,role:(c==null?void 0:c.role)||"member",is_global:!!i.is_global}});return n&&!u.some(i=>i.id===n.id)&&u.push({...n,role:"member"}),u},enabled:!0})}function f(t){return g({queryKey:["organization-members",t],queryFn:async()=>{if(!t)return[];const{data:n,error:a}=await d("organization_members").select("*").eq("organization_id",t);if(a)throw a;return n.map(r=>({id:r.id,organization_id:r.organization_id,user_id:r.user_id,role:r.role,created_at:r.created_at}))},enabled:!!t})}function h(){const t=_(),{session:n}=l(),{toast:a}=m();return p({mutationFn:async e=>{var i;if(console.log("Starting organization creation in mutation...",e),!n.user)throw new Error("Authentication required");const{data:r,error:s}=await d("organizations").insert({name:e.name||"",slug:e.slug||((i=e.name)==null?void 0:i.toLowerCase().replace(/\s+/g,"-"))||"",description:e.description||null,logo_url:e.logo_url||null}).select().single();if(console.log("Organization creation completed:",r),s)throw s;if(!r)throw new Error("Failed to create organization");console.log("Adding current user as owner...");const{error:o}=await d("organization_members").insert({organization_id:r.id,user_id:n.user.id,role:"owner"});if(console.log("Member added:",o),o)throw o;return{id:r.id,name:r.name,slug:r.slug||"",description:r.description||"",logo_url:r.logo_url,created_at:r.created_at,updated_at:r.updated_at}},onSuccess:()=>{t.invalidateQueries({queryKey:["organizations"]}),t.invalidateQueries({queryKey:["userOrganizations"]}),a({title:"Organization created",description:"Your new organization has been created successfully."})},onError:e=>{console.error("Error in createOrganization mutation:",e),a({title:"Error creating organization",description:e.message,variant:"destructive"})}})}function O(t){const n=_(),{session:a}=l(),{toast:e}=m();return p({mutationFn:async({email:r,role:s})=>{if(!a.user)throw new Error("Authentication required");if(!t)throw new Error("Organization ID is required");const{data:o,error:u}=await d("users").select("id").eq("email",r).single();if(u)throw new Error("User not found");if(!o)throw new Error("User not found");const{data:i,error:c}=await d("organization_members").insert({organization_id:t,user_id:o.id,role:s}).select();if(c)throw c;return i},onSuccess:()=>{n.invalidateQueries({queryKey:["organization-members"]}),e({title:"Member added",description:"The member has been added to the organization."})},onError:r=>{e({title:"Error adding member",description:r.message,variant:"destructive"})}})}function Q(){var u;const{session:t}=l(),n=!!t.user,{data:a,isLoading:e,error:r}=w(),{data:s}=b((u=t.user)==null?void 0:u.id),o=h();return{organizations:a,userOrganizations:s,isLoading:e,error:r,isAuthenticated:n,createOrganization:o}}function v(t){const{session:n}=l(),a=!!n.user,{data:e,isLoading:r,error:s}=f(t),o=O(t);return{members:e,isLoading:r,error:s,isAuthenticated:a,addMember:o}}export{v as a,Q as u};
