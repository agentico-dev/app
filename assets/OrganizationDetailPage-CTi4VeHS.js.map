{"version":3,"file":"OrganizationDetailPage-CTi4VeHS.js","sources":["../../node_modules/lucide-react/dist/esm/icons/building-2.js","../../node_modules/lucide-react/dist/esm/icons/credit-card.js","../../node_modules/lucide-react/dist/esm/icons/folder-plus.js","../../node_modules/lucide-react/dist/esm/icons/user-plus.js","../../src/components/organizations/OrganizationTeamsTab.tsx","../../src/components/organizations/OrganizationBillingTab.tsx","../../src/components/organizations/OrganizationProjectsTab.tsx","../../src/pages/OrganizationDetailPage.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Building2 = createLucideIcon(\"Building2\", [\n  [\"path\", { d: \"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\", key: \"1b4qmf\" }],\n  [\"path\", { d: \"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\", key: \"i71pzd\" }],\n  [\"path\", { d: \"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\", key: \"10jefs\" }],\n  [\"path\", { d: \"M10 6h4\", key: \"1itunk\" }],\n  [\"path\", { d: \"M10 10h4\", key: \"tcdvrf\" }],\n  [\"path\", { d: \"M10 14h4\", key: \"kelpxr\" }],\n  [\"path\", { d: \"M10 18h4\", key: \"1ulq68\" }]\n]);\n\nexport { Building2 as default };\n//# sourceMappingURL=building-2.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CreditCard = createLucideIcon(\"CreditCard\", [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"5\", rx: \"2\", key: \"ynyp8z\" }],\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"10\", y2: \"10\", key: \"1b3vmo\" }]\n]);\n\nexport { CreditCard as default };\n//# sourceMappingURL=credit-card.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst FolderPlus = createLucideIcon(\"FolderPlus\", [\n  [\"path\", { d: \"M12 10v6\", key: \"1bos4e\" }],\n  [\"path\", { d: \"M9 13h6\", key: \"1uhe8q\" }],\n  [\n    \"path\",\n    {\n      d: \"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z\",\n      key: \"1kt360\"\n    }\n  ]\n]);\n\nexport { FolderPlus as default };\n//# sourceMappingURL=folder-plus.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserPlus = createLucideIcon(\"UserPlus\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"8\", y2: \"14\", key: \"1bvyxn\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"11\", y2: \"11\", key: \"1shjgl\" }]\n]);\n\nexport { UserPlus as default };\n//# sourceMappingURL=user-plus.js.map\n","\nimport React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { PlusCircle, UserPlus } from 'lucide-react';\nimport { Organization, OrganizationMember } from '@/types/organization';\nimport { useOrganizationMembers } from '@/hooks/useOrganizations';\n\ninterface OrganizationTeamsTabProps {\n  organization: Organization;\n  members: OrganizationMember[];\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  isOrgMember: boolean;\n}\n\nexport function OrganizationTeamsTab({ \n  organization, \n  members, \n  isLoading, \n  isAuthenticated, \n  isOrgMember \n}: OrganizationTeamsTabProps) {\n  const { addMember } = useOrganizationMembers(organization.id);\n  const [open, setOpen] = React.useState(false);\n  const [newMember, setNewMember] = React.useState({\n    email: '',\n    role: 'member' as 'admin' | 'member',\n  });\n\n  const handleAddMember = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await addMember.mutateAsync(newMember);\n      setOpen(false);\n      setNewMember({ email: '', role: 'member' });\n    } catch (error) {\n      console.error('Error adding member:', error);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Team Members</CardTitle>\n          <CardDescription>Manage your organization's team members.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {[1, 2, 3].map(i => (\n              <div key={i} className=\"flex items-center gap-4\">\n                <div className=\"w-10 h-10 rounded-full bg-muted\" />\n                <div className=\"space-y-1\">\n                  <div className=\"h-5 w-32 bg-muted rounded\" />\n                  <div className=\"h-4 w-24 bg-muted rounded\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader className=\"flex-row items-center justify-between\">\n        <div>\n          <CardTitle>Team Members</CardTitle>\n          <CardDescription>Manage your organization's team members.</CardDescription>\n        </div>\n        <Dialog open={open} onOpenChange={setOpen}>\n          <DialogTrigger asChild>\n            <Button disabled={!isAuthenticated || !isOrgMember}>\n              <UserPlus className=\"h-4 w-4 mr-2\" />\n              Invite Member\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Invite team member</DialogTitle>\n              <DialogDescription>\n                Add a new member to your organization. They will receive an email invitation.\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleAddMember}>\n              <div className=\"grid gap-4 py-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={newMember.email}\n                    onChange={(e) => setNewMember({ ...newMember, email: e.target.value })}\n                    placeholder=\"coworker@example.com\"\n                    required\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"role\">Role</Label>\n                  <Select \n                    value={newMember.role} \n                    onValueChange={(value: 'admin' | 'member') => setNewMember({ ...newMember, role: value })}\n                  >\n                    <SelectTrigger id=\"role\">\n                      <SelectValue placeholder=\"Select a role\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"admin\">Admin</SelectItem>\n                      <SelectItem value=\"member\">Member</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\" disabled={addMember.isPending}>\n                  {addMember.isPending ? 'Inviting...' : 'Invite Member'}\n                </Button>\n              </DialogFooter>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent>\n        {members.length === 0 ? (\n          <div className=\"text-center p-6\">\n            <UserPlus className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">No team members yet</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Invite team members to collaborate with you in this organization.\n            </p>\n            {isAuthenticated && isOrgMember && (\n              <Button onClick={() => setOpen(true)}>\n                <PlusCircle className=\"h-4 w-4 mr-2\" />\n                Invite Member\n              </Button>\n            )}\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {members.map((member) => (\n              <div key={member.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  <Avatar>\n                    <AvatarFallback>\n                      {member.user_id.substring(0, 2).toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <p className=\"font-medium\">{member.user_id}</p>\n                    <p className=\"text-sm text-muted-foreground capitalize\">{member.role}</p>\n                  </div>\n                </div>\n                {isAuthenticated && isOrgMember && member.role !== 'owner' && (\n                  <Button variant=\"outline\" size=\"sm\" disabled={!isOrgMember}>\n                    Remove\n                  </Button>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","\nimport React from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { AlertCircle, CreditCard, Zap } from 'lucide-react';\nimport { Organization } from '@/types/organization';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\ninterface OrganizationBillingTabProps {\n  organization: Organization;\n  isAuthenticated: boolean;\n  isOrgMember: boolean;\n}\n\nexport function OrganizationBillingTab({ \n  organization, \n  isAuthenticated, \n  isOrgMember \n}: OrganizationBillingTabProps) {\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Current Plan</CardTitle>\n          <CardDescription>Manage your subscription and billing information.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h3 className=\"text-xl font-semibold\">Free Plan</h3>\n              <p className=\"text-sm text-muted-foreground\">Basic features for small organizations</p>\n            </div>\n            <Badge className=\"bg-blue-100 text-blue-800 hover:bg-blue-100\">Current Plan</Badge>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <div className=\"flex items-center\">\n              <Zap className=\"h-4 w-4 mr-2 text-green-500\" />\n              <span>Up to 3 team members</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Zap className=\"h-4 w-4 mr-2 text-green-500\" />\n              <span>5 projects</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Zap className=\"h-4 w-4 mr-2 text-green-500\" />\n              <span>Basic analytics</span>\n            </div>\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button disabled={!isAuthenticated || !isOrgMember}>\n            <CreditCard className=\"h-4 w-4 mr-2\" />\n            Upgrade Plan\n          </Button>\n        </CardFooter>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Payment Methods</CardTitle>\n          <CardDescription>Manage your payment methods and billing history.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {!isAuthenticated || !isOrgMember ? (\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertTitle>Access restricted</AlertTitle>\n              <AlertDescription>\n                You need to sign in and be a member of this organization to view payment methods.\n              </AlertDescription>\n            </Alert>\n          ) : (\n            <div className=\"text-center p-6\">\n              <CreditCard className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n              <h3 className=\"text-lg font-medium mb-2\">No payment methods</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                You haven't added any payment methods yet.\n              </p>\n              <Button>\n                Add Payment Method\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useQuery } from '@tanstack/react-query';\nimport { supabase } from '@/integrations/supabase/client';\nimport { Organization } from '@/types/organization';\nimport { Badge } from '@/components/ui/badge';\nimport { Link } from 'react-router';\nimport { Folder, FolderPlus } from 'lucide-react';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { format } from 'date-fns';\nimport { useToast } from '@/components/ui/use-toast';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface Project {\n  id: string;\n  name: string;\n  description: string | null;\n  status: string;\n  created_at: string;\n  organization_id: string;\n}\n\ninterface OrganizationProjectsTabProps {\n  organization: Organization;\n  isAuthenticated: boolean;\n  isOrgMember: boolean;\n}\n\nexport function OrganizationProjectsTab({ \n  organization, \n  isAuthenticated, \n  isOrgMember \n}: OrganizationProjectsTabProps) {\n  const { toast } = useToast();\n  const [open, setOpen] = useState(false);\n  const [newProject, setNewProject] = useState({\n    name: '',\n    description: '',\n  });\n\n  const { data: projects, isLoading, refetch } = useQuery<Project[]>({\n    queryKey: ['organization-projects', organization.id],\n    queryFn: async () => {\n      console.log('Fetching projects for organization:', organization.id);\n      const { data, error } = await supabase\n        .from('projects')\n        .select('*')\n        .eq('organization_id', organization.id);\n      \n      if (error) {\n        console.error('Error fetching projects:', error);\n        toast({\n          title: 'Error fetching projects',\n          description: error.message,\n          variant: 'destructive',\n        });\n        throw error;\n      }\n      \n      console.log('Fetched projects:', data);\n      return data;\n    },\n  });\n\n  const handleCreateProject = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const { data, error } = await supabase\n        .from('projects')\n        .insert({\n          name: newProject.name,\n          description: newProject.description,\n          organization_id: organization.id,\n          status: 'active',\n        })\n        .select();\n\n      if (error) throw error;\n      \n      toast({\n        title: 'Project created',\n        description: 'Your new project has been created successfully.',\n      });\n      \n      setOpen(false);\n      setNewProject({ name: '', description: '' });\n      refetch();\n    } catch (error: any) {\n      console.error('Error creating project:', error);\n      toast({\n        title: 'Error creating project',\n        description: error.message,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Projects</CardTitle>\n          <CardDescription>Projects in this organization.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            {[1, 2, 3, 4].map(i => (\n              <Card key={i}>\n                <CardHeader className=\"p-4\">\n                  <Skeleton className=\"h-5 w-3/4\" />\n                  <Skeleton className=\"h-4 w-1/2 mt-2\" />\n                </CardHeader>\n                <CardContent className=\"p-4 pt-0\">\n                  <Skeleton className=\"h-4 w-full\" />\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader className=\"flex-row items-center justify-between\">\n        <div>\n          <CardTitle>Projects</CardTitle>\n          <CardDescription>Projects in this organization.</CardDescription>\n        </div>\n        <Dialog open={open} onOpenChange={setOpen}>\n          <DialogTrigger asChild>\n            <Button disabled={!isAuthenticated || !isOrgMember}>\n              <FolderPlus className=\"h-4 w-4 mr-2\" />\n              New Project\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Create a new project</DialogTitle>\n              <DialogDescription>\n                Add a new project to your organization.\n              </DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleCreateProject}>\n              <div className=\"grid gap-4 py-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">Project Name</Label>\n                  <Input\n                    id=\"name\"\n                    value={newProject.name}\n                    onChange={(e) => setNewProject({ ...newProject, name: e.target.value })}\n                    placeholder=\"My Awesome Project\"\n                    required\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    value={newProject.description}\n                    onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\n                    placeholder=\"Project description\"\n                    rows={3}\n                  />\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\">Create Project</Button>\n              </DialogFooter>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent>\n        {!projects || projects.length === 0 ? (\n          <div className=\"text-center p-6\">\n            <Folder className=\"h-12 w-12 mx-auto text-muted-foreground mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">No projects yet</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              This organization doesn't have any projects yet.\n            </p>\n            {isAuthenticated && isOrgMember && (\n              <Button onClick={() => setOpen(true)}>\n                <FolderPlus className=\"h-4 w-4 mr-2\" />\n                Create Project\n              </Button>\n            )}\n          </div>\n        ) : (\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            {projects.map((project) => (\n              <Card key={project.id}>\n                <CardHeader className=\"p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"text-lg\">{project.name}</CardTitle>\n                    <Badge className={\n                      project.status === 'active' ? 'bg-green-100 text-green-800' :\n                      project.status === 'archived' ? 'bg-amber-100 text-amber-800' :\n                      'bg-gray-100 text-gray-800'\n                    }>\n                      {project.status}\n                    </Badge>\n                  </div>\n                  <CardDescription className=\"line-clamp-2\">\n                    {project.description || 'No description available'}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"p-4 pt-0\">\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\n                    <span>Created {format(new Date(project.created_at), 'MMM d, yyyy')}</span>\n                  </div>\n                  <div className=\"mt-4\">\n                    <Button asChild variant=\"outline\" size=\"sm\">\n                      <Link to={`/projects/${project.id}`}>View Project</Link>\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","\nimport React from 'react';\nimport { useParams, useNavigate } from 'react-router';\nimport { useQuery } from '@tanstack/react-query';\nimport { supabase } from '@/integrations/supabase/client';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Shield, Users, CreditCard, Folder, ArrowLeft, Building2 } from 'lucide-react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useOrganizationMembers } from '@/hooks/useOrganizations';\nimport { OrganizationTeamsTab } from '@/components/organizations/OrganizationTeamsTab';\nimport { OrganizationBillingTab } from '@/components/organizations/OrganizationBillingTab';\nimport { OrganizationProjectsTab } from '@/components/organizations/OrganizationProjectsTab';\n\nexport default function OrganizationDetailPage() {\n  const { slug } = useParams<{ slug: string }>();\n  const navigate = useNavigate();\n  const { session } = useAuth();\n  const isAuthenticated = !!session.user;\n\n  const { data: organization, isLoading: orgLoading } = useQuery({\n    queryKey: ['organization', slug],\n    queryFn: async () => {\n      if (!slug) throw new Error('Organization slug is required');\n      \n      const { data, error } = await supabase\n        .from('organizations')\n        .select('*')\n        .eq('slug', slug)\n        .single();\n      \n      if (error) throw error;\n      return data;\n    },\n    enabled: !!slug,\n  });\n\n  const { members, isLoading: membersLoading } = useOrganizationMembers(organization?.id);\n\n  // Check if the current user is a member\n  const userMember = members?.find(m => m.user_id === session.user?.id);\n  const isOrgMember = !!userMember;\n\n  if (orgLoading) {\n    return (\n      <div className=\"container py-6 space-y-6\">\n        <Skeleton className=\"h-8 w-1/3\" />\n        <Skeleton className=\"h-4 w-1/4\" />\n        <Skeleton className=\"h-64 w-full\" />\n      </div>\n    );\n  }\n\n  if (!organization) {\n    return (\n      <div className=\"container py-6 space-y-6\">\n        <Button variant=\"ghost\" onClick={() => navigate('/orgs')}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Organizations\n        </Button>\n        <Card className=\"p-8 flex flex-col items-center justify-center\">\n          <Building2 className=\"h-12 w-12 text-muted-foreground mb-4\" />\n          <h3 className=\"text-xl font-semibold mb-2\">Organization not found</h3>\n          <p className=\"text-muted-foreground text-center max-w-md mb-4\">\n            The organization you're looking for doesn't exist or you don't have permission to view it.\n          </p>\n          <Button onClick={() => navigate('/orgs')}>\n            View All Organizations\n          </Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container py-6 space-y-6\">\n      <Button variant=\"ghost\" onClick={() => navigate('/orgs')}>\n        <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Organizations\n      </Button>\n      \n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{organization.name}</h1>\n          <p className=\"text-muted-foreground\">{organization.description || 'No description available'}</p>\n        </div>\n      </div>\n\n      {!isAuthenticated && (\n        <Alert variant=\"default\" className=\"bg-amber-50 border-amber-200\">\n          <Shield className=\"h-4 w-4 text-amber-500\" />\n          <AlertTitle>Limited Access Mode</AlertTitle>\n          <AlertDescription>\n            You're browsing in read-only mode. Sign in to manage this organization.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      <Tabs defaultValue=\"teams\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"teams\">\n            <Users className=\"h-4 w-4 mr-2\" />\n            Teams\n          </TabsTrigger>\n          <TabsTrigger value=\"billing\">\n            <CreditCard className=\"h-4 w-4 mr-2\" />\n            Billing\n          </TabsTrigger>\n          <TabsTrigger value=\"projects\">\n            <Folder className=\"h-4 w-4 mr-2\" />\n            Projects\n          </TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"teams\">\n          <OrganizationTeamsTab \n            organization={organization} \n            members={members || []} \n            isLoading={membersLoading}\n            isAuthenticated={isAuthenticated}\n            isOrgMember={isOrgMember}\n          />\n        </TabsContent>\n        \n        <TabsContent value=\"billing\">\n          <OrganizationBillingTab \n            organization={organization}\n            isAuthenticated={isAuthenticated} \n            isOrgMember={isOrgMember}\n          />\n        </TabsContent>\n        \n        <TabsContent value=\"projects\">\n          <OrganizationProjectsTab \n            organization={organization}\n            isAuthenticated={isAuthenticated}\n            isOrgMember={isOrgMember}\n          />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":["Building2","createLucideIcon","CreditCard","FolderPlus","UserPlus","OrganizationTeamsTab","organization","members","isLoading","isAuthenticated","isOrgMember","addMember","useOrganizationMembers","open","setOpen","React","newMember","setNewMember","handleAddMember","e","error","Card","jsxs","CardHeader","jsx","CardTitle","CardDescription","CardContent","i","Dialog","DialogTrigger","Button","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","DialogFooter","PlusCircle","member","Avatar","AvatarFallback","OrganizationBillingTab","Badge","Zap","CardFooter","Alert","AlertCircle","AlertTitle","AlertDescription","OrganizationProjectsTab","toast","useToast","useState","newProject","setNewProject","projects","refetch","useQuery","data","supabase","handleCreateProject","Skeleton","Textarea","Folder","project","format","Link","OrganizationDetailPage","slug","useParams","navigate","useNavigate","session","useAuth","orgLoading","membersLoading","m","_a","ArrowLeft","Shield","Tabs","TabsList","TabsTrigger","Users","TabsContent"],"mappings":"mpDAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAYC,EAAiB,YAAa,CAC9C,CAAC,OAAQ,CAAE,EAAG,4CAA6C,IAAK,QAAQ,CAAE,EAC1E,CAAC,OAAQ,CAAE,EAAG,0CAA2C,IAAK,QAAQ,CAAE,EACxE,CAAC,OAAQ,CAAE,EAAG,2CAA4C,IAAK,QAAQ,CAAE,EACzE,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAU,CAAA,CAC3C,CAAC,ECjBD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,EAAaD,EAAiB,aAAc,CAChD,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,QAAQ,CAAE,EAC9E,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAU,CAAA,CACnE,CAAC,ECZD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAME,EAAaF,EAAiB,aAAc,CAChD,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CACE,OACA,CACE,EAAG,yHACH,IAAK,QACX,CACA,CACA,CAAC,ECnBD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMG,EAAWH,EAAiB,WAAY,CAC5C,CAAC,OAAQ,CAAE,EAAG,4CAA6C,IAAK,QAAQ,CAAE,EAC1E,CAAC,SAAU,CAAE,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,QAAS,EACrD,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAU,CAAA,CACpE,CAAC,ECOM,SAASI,GAAqB,CACnC,aAAAC,EACA,QAAAC,EACA,UAAAC,EACA,gBAAAC,EACA,YAAAC,CACF,EAA8B,CAC5B,KAAM,CAAE,UAAAC,CAAc,EAAAC,EAAuBN,EAAa,EAAE,EACtD,CAACO,EAAMC,CAAO,EAAIC,EAAM,SAAS,EAAK,EACtC,CAACC,EAAWC,CAAY,EAAIF,EAAM,SAAS,CAC/C,MAAO,GACP,KAAM,QAAA,CACP,EAEKG,EAAkB,MAAOC,GAAuB,CACpDA,EAAE,eAAe,EACb,GAAA,CACI,MAAAR,EAAU,YAAYK,CAAS,EACrCF,EAAQ,EAAK,EACbG,EAAa,CAAE,MAAO,GAAI,KAAM,SAAU,QACnCG,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,CAE/C,EAEA,OAAIZ,SAECa,EACC,CAAA,SAAA,CAAAC,OAACC,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAU,SAAY,cAAA,CAAA,EACvBD,EAAAA,IAACE,GAAgB,SAAwC,0CAAA,CAAA,CAAA,EAC3D,QACCC,EACC,CAAA,SAAAH,EAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAC,CAAA,EAAG,EAAG,CAAC,EAAE,IAAII,GACZN,OAAA,MAAA,CAAY,UAAU,0BACrB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,iCAAkC,CAAA,EACjDF,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,2BAA4B,CAAA,EAC3CA,EAAAA,IAAC,MAAI,CAAA,UAAU,2BAA4B,CAAA,CAAA,CAC7C,CAAA,CAAA,GALQI,CAMV,CACD,CAAA,CACH,CACF,CAAA,CAAA,EACF,SAKDP,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAW,UAAU,wCACpB,SAAA,CAAAD,OAAC,MACC,CAAA,SAAA,CAAAE,EAAAA,IAACC,GAAU,SAAY,cAAA,CAAA,EACvBD,EAAAA,IAACE,GAAgB,SAAwC,0CAAA,CAAA,CAAA,EAC3D,EACCJ,EAAA,KAAAO,EAAA,CAAO,KAAAhB,EAAY,aAAcC,EAChC,SAAA,CAACU,EAAAA,IAAAM,EAAA,CAAc,QAAO,GACpB,SAAAR,EAAAA,KAACS,GAAO,SAAU,CAACtB,GAAmB,CAACC,EACrC,SAAA,CAACc,EAAAA,IAAApB,EAAA,CAAS,UAAU,cAAe,CAAA,EAAE,eAAA,CAAA,CAEvC,CACF,CAAA,SACC4B,EACC,CAAA,SAAA,CAAAV,OAACW,EACC,CAAA,SAAA,CAAAT,EAAAA,IAACU,GAAY,SAAkB,oBAAA,CAAA,EAC/BV,EAAAA,IAACW,GAAkB,SAEnB,+EAAA,CAAA,CAAA,EACF,EACAb,EAAAA,KAAC,OAAK,CAAA,SAAUJ,EACd,SAAA,CAACI,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACE,EAAA,IAAAY,EAAA,CAAM,QAAQ,QAAQ,SAAK,QAAA,EAC5BZ,EAAA,IAACa,EAAA,CACC,GAAG,QACH,KAAK,QACL,MAAOrB,EAAU,MACjB,SAAWG,GAAMF,EAAa,CAAE,GAAGD,EAAW,MAAOG,EAAE,OAAO,MAAO,EACrE,YAAY,uBACZ,SAAQ,EAAA,CAAA,CACV,EACF,EACAG,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACE,EAAA,IAAAY,EAAA,CAAM,QAAQ,OAAO,SAAI,OAAA,EAC1Bd,EAAA,KAACgB,GAAA,CACC,MAAOtB,EAAU,KACjB,cAAgBuB,GAA8BtB,EAAa,CAAE,GAAGD,EAAW,KAAMuB,EAAO,EAExF,SAAA,CAAAf,EAAAA,IAACgB,IAAc,GAAG,OAChB,eAACC,GAAY,CAAA,YAAY,gBAAgB,CAC3C,CAAA,SACCC,GACC,CAAA,SAAA,CAAClB,EAAA,IAAAmB,EAAA,CAAW,MAAM,QAAQ,SAAK,QAAA,EAC9BnB,EAAA,IAAAmB,EAAA,CAAW,MAAM,SAAS,SAAM,QAAA,CAAA,CAAA,CACnC,CAAA,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EACCnB,EAAA,IAAAoB,EAAA,CACC,SAACpB,EAAA,IAAAO,EAAA,CAAO,KAAK,SAAS,SAAUpB,EAAU,UACvC,SAAAA,EAAU,UAAY,cAAgB,gBACzC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAa,EAAAA,IAACG,GACE,SAAQpB,EAAA,SAAW,EACjBe,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACE,EAAAA,IAAApB,EAAA,CAAS,UAAU,8CAA+C,CAAA,EAClEoB,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAmB,sBAAA,EAC3DA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,oEAAA,EACCf,GAAmBC,GACjBY,EAAA,KAAAS,EAAA,CAAO,QAAS,IAAMjB,EAAQ,EAAI,EACjC,SAAA,CAACU,EAAAA,IAAAqB,GAAA,CAAW,UAAU,cAAe,CAAA,EAAE,eAAA,CAEzC,CAAA,CAAA,CAEJ,CAAA,EAEArB,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAAjB,EAAQ,IAAKuC,GACZxB,OAAC,MAAoB,CAAA,UAAU,oCAC7B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACE,EAAA,IAAAuB,GAAA,CACC,SAACvB,EAAAA,IAAAwB,GAAA,CACE,SAAOF,EAAA,QAAQ,UAAU,EAAG,CAAC,EAAE,YAAY,CAC9C,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAAtB,EAAA,IAAC,IAAE,CAAA,UAAU,cAAe,SAAAsB,EAAO,QAAQ,EAC1CtB,EAAA,IAAA,IAAA,CAAE,UAAU,2CAA4C,WAAO,IAAK,CAAA,CAAA,CACvE,CAAA,CAAA,EACF,EACCf,GAAmBC,GAAeoC,EAAO,OAAS,SAChDtB,EAAA,IAAAO,EAAA,CAAO,QAAQ,UAAU,KAAK,KAAK,SAAU,CAACrB,EAAa,SAE5D,QAAA,CAAA,CAAA,CAAA,EAfMoC,EAAO,EAiBjB,CACD,CACH,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,CC5JO,SAASG,GAAuB,CACrC,aAAA3C,EACA,gBAAAG,EACA,YAAAC,CACF,EAAgC,CAE5B,OAAAY,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAACD,EACC,CAAA,SAAA,CAAAC,OAACC,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAU,SAAY,cAAA,CAAA,EACvBD,EAAAA,IAACE,GAAgB,SAAiD,mDAAA,CAAA,CAAA,EACpE,SACCC,EACC,CAAA,SAAA,CAACL,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,KAAA,CAAG,UAAU,wBAAwB,SAAS,YAAA,EAC9CA,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAAsC,wCAAA,CAAA,CAAA,EACrF,EACCA,EAAA,IAAA0B,EAAA,CAAM,UAAU,8CAA8C,SAAY,cAAA,CAAA,CAAA,EAC7E,EAEA5B,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAACE,EAAAA,IAAA2B,EAAA,CAAI,UAAU,6BAA8B,CAAA,EAC7C3B,EAAAA,IAAC,QAAK,SAAoB,sBAAA,CAAA,CAAA,EAC5B,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACE,EAAAA,IAAA2B,EAAA,CAAI,UAAU,6BAA8B,CAAA,EAC7C3B,EAAAA,IAAC,QAAK,SAAU,YAAA,CAAA,CAAA,EAClB,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACE,EAAAA,IAAA2B,EAAA,CAAI,UAAU,6BAA8B,CAAA,EAC7C3B,EAAAA,IAAC,QAAK,SAAe,iBAAA,CAAA,CAAA,CACvB,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAA,EAAAA,IAAC4B,IACC,SAAC9B,OAAAS,EAAA,CAAO,SAAU,CAACtB,GAAmB,CAACC,EACrC,SAAA,CAACc,EAAAA,IAAAtB,EAAA,CAAW,UAAU,cAAe,CAAA,EAAE,cAAA,CAAA,CAEzC,CACF,CAAA,CAAA,EACF,SAECmB,EACC,CAAA,SAAA,CAAAC,OAACC,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAU,SAAe,iBAAA,CAAA,EAC1BD,EAAAA,IAACE,GAAgB,SAAgD,kDAAA,CAAA,CAAA,EACnE,QACCC,EACE,CAAA,SAAA,CAAClB,GAAmB,CAACC,SACnB2C,EACC,CAAA,SAAA,CAAC7B,EAAAA,IAAA8B,GAAA,CAAY,UAAU,SAAU,CAAA,EACjC9B,EAAAA,IAAC+B,GAAW,SAAiB,mBAAA,CAAA,EAC7B/B,EAAAA,IAACgC,GAAiB,SAElB,mFAAA,CAAA,CAAA,CACF,CAAA,EAEAlC,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACE,EAAAA,IAAAtB,EAAA,CAAW,UAAU,8CAA+C,CAAA,EACpEsB,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAkB,qBAAA,EAC1DA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,6CAAA,EACAA,EAAAA,IAACO,GAAO,SAER,oBAAA,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CCxDO,SAAS0B,GAAwB,CACtC,aAAAnD,EACA,gBAAAG,EACA,YAAAC,CACF,EAAiC,CACzB,KAAA,CAAE,MAAAgD,CAAM,EAAIC,GAAS,EACrB,CAAC9C,EAAMC,CAAO,EAAI8C,EAAAA,SAAS,EAAK,EAChC,CAACC,EAAYC,CAAa,EAAIF,WAAS,CAC3C,KAAM,GACN,YAAa,EAAA,CACd,EAEK,CAAE,KAAMG,EAAU,UAAAvD,EAAW,QAAAwD,CAAA,EAAYC,EAAoB,CACjE,SAAU,CAAC,wBAAyB3D,EAAa,EAAE,EACnD,QAAS,SAAY,CACX,QAAA,IAAI,sCAAuCA,EAAa,EAAE,EAClE,KAAM,CAAE,KAAA4D,EAAM,MAAA9C,CAAM,EAAI,MAAM+C,EAC3B,KAAK,UAAU,EACf,OAAO,GAAG,EACV,GAAG,kBAAmB7D,EAAa,EAAE,EAExC,GAAIc,EACM,cAAA,MAAM,2BAA4BA,CAAK,EACzCsC,EAAA,CACJ,MAAO,0BACP,YAAatC,EAAM,QACnB,QAAS,aAAA,CACV,EACKA,EAGA,eAAA,IAAI,oBAAqB8C,CAAI,EAC9BA,CAAA,CACT,CACD,EAEKE,EAAsB,MAAOjD,GAAuB,CACxDA,EAAE,eAAe,EACb,GAAA,CACI,KAAA,CAAE,KAAA+C,EAAM,MAAA9C,GAAU,MAAM+C,EAC3B,KAAK,UAAU,EACf,OAAO,CACN,KAAMN,EAAW,KACjB,YAAaA,EAAW,YACxB,gBAAiBvD,EAAa,GAC9B,OAAQ,QACT,CAAA,EACA,OAAO,EAEV,GAAIc,EAAa,MAAAA,EAEXsC,EAAA,CACJ,MAAO,kBACP,YAAa,iDAAA,CACd,EAED5C,EAAQ,EAAK,EACbgD,EAAc,CAAE,KAAM,GAAI,YAAa,GAAI,EACnCE,EAAA,QACD5C,EAAY,CACX,QAAA,MAAM,0BAA2BA,CAAK,EACxCsC,EAAA,CACJ,MAAO,yBACP,YAAatC,EAAM,QACnB,QAAS,aAAA,CACV,CAAA,CAEL,EAEA,OAAIZ,SAECa,EACC,CAAA,SAAA,CAAAC,OAACC,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GAAU,SAAQ,UAAA,CAAA,EACnBD,EAAAA,IAACE,GAAgB,SAA8B,gCAAA,CAAA,CAAA,EACjD,EACCF,MAAAG,EAAA,CACC,SAACH,EAAAA,IAAA,MAAA,CAAI,UAAU,4BACZ,SAAA,CAAC,EAAG,EAAG,EAAG,CAAC,EAAE,IAAII,UACfP,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAW,UAAU,MACpB,SAAA,CAACC,EAAAA,IAAA6C,EAAA,CAAS,UAAU,WAAY,CAAA,EAChC7C,EAAAA,IAAC6C,EAAS,CAAA,UAAU,gBAAiB,CAAA,CAAA,EACvC,EACA7C,EAAAA,IAACG,GAAY,UAAU,WACrB,eAAC0C,EAAS,CAAA,UAAU,YAAa,CAAA,CACnC,CAAA,CAAA,GAPSzC,CAQX,CACD,CAAA,CACH,CACF,CAAA,CAAA,EACF,SAKDP,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAW,UAAU,wCACpB,SAAA,CAAAD,OAAC,MACC,CAAA,SAAA,CAAAE,EAAAA,IAACC,GAAU,SAAQ,UAAA,CAAA,EACnBD,EAAAA,IAACE,GAAgB,SAA8B,gCAAA,CAAA,CAAA,EACjD,EACCJ,EAAA,KAAAO,EAAA,CAAO,KAAAhB,EAAY,aAAcC,EAChC,SAAA,CAACU,EAAAA,IAAAM,EAAA,CAAc,QAAO,GACpB,SAAAR,EAAAA,KAACS,GAAO,SAAU,CAACtB,GAAmB,CAACC,EACrC,SAAA,CAACc,EAAAA,IAAArB,EAAA,CAAW,UAAU,cAAe,CAAA,EAAE,aAAA,CAAA,CAEzC,CACF,CAAA,SACC6B,EACC,CAAA,SAAA,CAAAV,OAACW,EACC,CAAA,SAAA,CAAAT,EAAAA,IAACU,GAAY,SAAoB,sBAAA,CAAA,EACjCV,EAAAA,IAACW,GAAkB,SAEnB,yCAAA,CAAA,CAAA,EACF,EACAb,EAAAA,KAAC,OAAK,CAAA,SAAU8C,EACd,SAAA,CAAC9C,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACE,EAAA,IAAAY,EAAA,CAAM,QAAQ,OAAO,SAAY,eAAA,EAClCZ,EAAA,IAACa,EAAA,CACC,GAAG,OACH,MAAOwB,EAAW,KAClB,SAAW1C,GAAM2C,EAAc,CAAE,GAAGD,EAAY,KAAM1C,EAAE,OAAO,MAAO,EACtE,YAAY,qBACZ,SAAQ,EAAA,CAAA,CACV,EACF,EACAG,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACE,EAAA,IAAAY,EAAA,CAAM,QAAQ,cAAc,SAAW,cAAA,EACxCZ,EAAA,IAAC8C,GAAA,CACC,GAAG,cACH,MAAOT,EAAW,YAClB,SAAW1C,GAAM2C,EAAc,CAAE,GAAGD,EAAY,YAAa1C,EAAE,OAAO,MAAO,EAC7E,YAAY,sBACZ,KAAM,CAAA,CAAA,CACR,CACF,CAAA,CAAA,EACF,QACCyB,EACC,CAAA,SAAApB,MAACO,GAAO,KAAK,SAAS,yBAAc,CAAA,CACtC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAP,EAAAA,IAACG,EACE,CAAA,SAAA,CAACoC,GAAYA,EAAS,SAAW,EAChCzC,EAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACE,EAAAA,IAAA+C,EAAA,CAAO,UAAU,8CAA+C,CAAA,EAChE/C,EAAA,IAAA,KAAA,CAAG,UAAU,2BAA2B,SAAe,kBAAA,EACvDA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAE1C,mDAAA,EACCf,GAAmBC,GACjBY,EAAA,KAAAS,EAAA,CAAO,QAAS,IAAMjB,EAAQ,EAAI,EACjC,SAAA,CAACU,EAAAA,IAAArB,EAAA,CAAW,UAAU,cAAe,CAAA,EAAE,gBAAA,CAEzC,CAAA,CAEJ,CAAA,CAAA,EAECqB,EAAA,IAAA,MAAA,CAAI,UAAU,4BACZ,WAAS,IAAKgD,GACblD,EAAA,KAACD,EACC,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAW,UAAU,MACpB,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAE,EAAA,IAACC,EAAU,CAAA,UAAU,UAAW,SAAA+C,EAAQ,KAAK,EAC5ChD,EAAA,IAAA0B,EAAA,CAAM,UACLsB,EAAQ,SAAW,SAAW,8BAC9BA,EAAQ,SAAW,WAAa,8BAChC,4BAEC,WAAQ,MACX,CAAA,CAAA,EACF,QACC9C,EAAgB,CAAA,UAAU,eACxB,SAAA8C,EAAQ,aAAe,0BAC1B,CAAA,CAAA,EACF,EACAlD,EAAAA,KAACK,EAAY,CAAA,UAAU,WACrB,SAAA,CAAAH,MAAC,MAAI,CAAA,UAAU,kDACb,SAAAF,EAAA,KAAC,OAAK,CAAA,SAAA,CAAA,WAASmD,GAAO,IAAI,KAAKD,EAAQ,UAAU,EAAG,aAAa,CAAA,CAAA,CAAE,CACrE,CAAA,EACAhD,EAAAA,IAAC,OAAI,UAAU,OACb,eAACO,EAAO,CAAA,QAAO,GAAC,QAAQ,UAAU,KAAK,KACrC,SAAAP,EAAAA,IAACkD,GAAK,GAAI,aAAaF,EAAQ,EAAE,GAAI,SAAY,cAAA,CAAA,CACnD,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAzBSA,EAAQ,EA0BnB,CACD,CACH,CAAA,CAEJ,CAAA,CAAA,EACF,CAEJ,CCrNA,SAAwBG,IAAyB,CACzC,KAAA,CAAE,KAAAC,CAAK,EAAIC,EAA4B,EACvCC,EAAWC,EAAY,EACvB,CAAE,QAAAC,CAAQ,EAAIC,GAAQ,EACtBxE,EAAkB,CAAC,CAACuE,EAAQ,KAE5B,CAAE,KAAM1E,EAAc,UAAW4E,CAAA,EAAejB,EAAS,CAC7D,SAAU,CAAC,eAAgBW,CAAI,EAC/B,QAAS,SAAY,CACnB,GAAI,CAACA,EAAY,MAAA,IAAI,MAAM,+BAA+B,EAE1D,KAAM,CAAE,KAAAV,EAAM,MAAA9C,CAAA,EAAU,MAAM+C,EAC3B,KAAK,eAAe,EACpB,OAAO,GAAG,EACV,GAAG,OAAQS,CAAI,EACf,OAAO,EAEV,GAAIxD,EAAa,MAAAA,EACV,OAAA8C,CACT,EACA,QAAS,CAAC,CAACU,CAAA,CACZ,EAEK,CAAE,QAAArE,EAAS,UAAW4E,CAAmB,EAAAvE,EAAuBN,GAAA,YAAAA,EAAc,EAAE,EAIhFI,EAAc,CAAC,EADFH,GAAA,YAAAA,EAAS,KAAK6E,UAAK,OAAAA,EAAE,YAAYC,EAAAL,EAAQ,OAAR,YAAAK,EAAc,OAGlE,OAAIH,EAEA5D,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACE,EAAAA,IAAA6C,EAAA,CAAS,UAAU,WAAY,CAAA,EAChC7C,EAAAA,IAAC6C,EAAS,CAAA,UAAU,WAAY,CAAA,EAChC7C,EAAAA,IAAC6C,EAAS,CAAA,UAAU,aAAc,CAAA,CAAA,EACpC,EAIC/D,EAqBHgB,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,OAACS,GAAO,QAAQ,QAAQ,QAAS,IAAM+C,EAAS,OAAO,EACrD,SAAA,CAACtD,EAAAA,IAAA8D,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,wBAAA,EACxC,EAEC9D,MAAA,MAAA,CAAI,UAAU,oCACb,gBAAC,MACC,CAAA,SAAA,CAAAA,EAAA,IAAC,KAAG,CAAA,UAAU,oCAAqC,SAAAlB,EAAa,KAAK,QACpE,IAAE,CAAA,UAAU,wBAAyB,SAAAA,EAAa,aAAe,0BAA2B,CAAA,CAAA,CAAA,CAC/F,CACF,CAAA,EAEC,CAACG,GACAa,EAAA,KAAC+B,GAAM,QAAQ,UAAU,UAAU,+BACjC,SAAA,CAAC7B,EAAAA,IAAA+D,GAAA,CAAO,UAAU,wBAAyB,CAAA,EAC3C/D,EAAAA,IAAC+B,GAAW,SAAmB,qBAAA,CAAA,EAC/B/B,EAAAA,IAACgC,GAAiB,SAElB,yEAAA,CAAA,CAAA,EACF,EAGDlC,EAAA,KAAAkE,GAAA,CAAK,aAAa,QAAQ,UAAU,YACnC,SAAA,CAAAlE,OAACmE,GACC,CAAA,SAAA,CAACnE,EAAAA,KAAAoE,EAAA,CAAY,MAAM,QACjB,SAAA,CAAClE,EAAAA,IAAAmE,GAAA,CAAM,UAAU,cAAe,CAAA,EAAE,OAAA,EAEpC,EACArE,EAAAA,KAACoE,EAAY,CAAA,MAAM,UACjB,SAAA,CAAClE,EAAAA,IAAAtB,EAAA,CAAW,UAAU,cAAe,CAAA,EAAE,SAAA,EAEzC,EACAoB,EAAAA,KAACoE,EAAY,CAAA,MAAM,WACjB,SAAA,CAAClE,EAAAA,IAAA+C,EAAA,CAAO,UAAU,cAAe,CAAA,EAAE,UAAA,CAErC,CAAA,CAAA,EACF,EAEA/C,EAAAA,IAACoE,EAAY,CAAA,MAAM,QACjB,SAAApE,EAAA,IAACnB,GAAA,CACC,aAAAC,EACA,QAASC,GAAW,CAAC,EACrB,UAAW4E,EACX,gBAAA1E,EACA,YAAAC,CAAA,CAAA,EAEJ,EAEAc,EAAAA,IAACoE,EAAY,CAAA,MAAM,UACjB,SAAApE,EAAA,IAACyB,GAAA,CACC,aAAA3C,EACA,gBAAAG,EACA,YAAAC,CAAA,CAAA,EAEJ,EAEAc,EAAAA,IAACoE,EAAY,CAAA,MAAM,WACjB,SAAApE,EAAA,IAACiC,GAAA,CACC,aAAAnD,EACA,gBAAAG,EACA,YAAAC,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAnFEY,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,OAACS,GAAO,QAAQ,QAAQ,QAAS,IAAM+C,EAAS,OAAO,EACrD,SAAA,CAACtD,EAAAA,IAAA8D,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,wBAAA,EACxC,EACAhE,EAAAA,KAACD,EAAK,CAAA,UAAU,gDACd,SAAA,CAACG,EAAAA,IAAAxB,GAAA,CAAU,UAAU,sCAAuC,CAAA,EAC3DwB,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA6B,SAAsB,yBAAA,EAChEA,EAAA,IAAA,IAAA,CAAE,UAAU,kDAAkD,SAE/D,6FAAA,QACCO,EAAO,CAAA,QAAS,IAAM+C,EAAS,OAAO,EAAG,SAE1C,wBAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAuEN","x_google_ignoreList":[0,1,2,3]}